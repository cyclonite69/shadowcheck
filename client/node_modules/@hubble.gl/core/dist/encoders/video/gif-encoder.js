import { GIFBuilder } from '@loaders.gl/video';
import FrameEncoder from "../frame-encoder.js";
export default class GifEncoder extends FrameEncoder {
    constructor(settings) {
        super(settings);
        this.gifBuilder = null;
        this.source = 'images';
        this.mimeType = 'image/gif';
        this.extension = '.gif';
        let options = {
            width: 720,
            height: 480,
            numWorkers: 4,
            sampleInterval: 10,
            jpegQuality: 1.0
        };
        if (settings.gif) {
            options = { ...options, ...settings.gif };
        }
        this.options = options;
        // this.source = settings.source
        this.start = this.start.bind(this);
        this.add = this.add.bind(this);
        this.save = this.save.bind(this);
    }
    start() {
        this.gifBuilder = new GIFBuilder({
            source: this.source,
            ...this.options,
            interval: 1 / this.framerate
        });
    }
    async add(canvas) {
        if (this.source === 'images') {
            const dataUrl = canvas.toDataURL('image/jpeg', this.options.jpegQuality);
            await this.gifBuilder.add(dataUrl);
        }
    }
    async save() {
        return fetch(await this.gifBuilder.build()).then(res => res.blob());
    }
}
