import { KeyFrames as LumaKeyFrames } from '@luma.gl/engine';
import { Easing } from "./easings.js";
export type Keyframe<T> = [
    number,
    T & {
        ease?: Easing;
        interpolate?: string;
    }
];
export type KeyframeProps<T> = {
    timings: number | number[];
    keyframes?: T[];
    easings?: Easing | Easing[];
    interpolators?: string | string[];
    features?: string[];
};
declare class Keyframes<T extends object> extends LumaKeyFrames<T & {
    ease?: Easing;
    interpolate?: string;
}> {
    activeFeatures: {};
    /** Set when this is attached to an Animation */
    animationHandle?: number;
    timings: number | number[];
    keyframes: T[];
    easings: Easing | Easing[];
    interpolators: string | string[];
    constructor({ features, timings, keyframes, easings, interpolators }: KeyframeProps<T>);
    set({ timings, keyframes, easings, interpolators }: KeyframeProps<T>): void;
    getFrame(): T;
    _setActiveFeatures(keyframes: T[]): void;
}
export default Keyframes;
//# sourceMappingURL=keyframes.d.ts.map