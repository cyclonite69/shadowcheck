import * as arrow from 'apache-arrow';
import * as duckdb from '@duckdb/duckdb-wasm';
import { AsyncDuckDB, DuckDBConfig, AsyncDuckDBConnection } from '@duckdb/duckdb-wasm';
import { DatabaseAdapter, DatabaseConnection } from '@kepler.gl/utils';
declare class Connection implements DatabaseConnection {
    private connection;
    constructor(connection: AsyncDuckDBConnection);
    query(statement: string): Promise<arrow.Table>;
    insertArrowTable(arrowTable: arrow.Table, params: {
        name: string;
    }): Promise<void>;
    close(): Promise<void>;
}
declare type DuckDBWasmAdapterProps = {
    debug?: boolean;
    config?: DuckDBConfig;
} | Promise<AsyncDuckDB>;
export declare class DuckDBWasmAdapter implements DatabaseAdapter {
    private duckDB;
    constructor(options: DuckDBWasmAdapterProps);
    connect(): Promise<Connection>;
    registerFileText(filename: string, content: any): Promise<void>;
    registerFileHandle(name: string, handle: any, protocol: duckdb.DuckDBDataProtocol, directIO: boolean): Promise<void>;
}
export {};
