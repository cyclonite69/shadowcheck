// loaders.gl
// SPDX-License-Identifier: MIT
// Copyright (c) vis.gl contributors
// @ts-expect-error
import fsPromise from 'fs/promises';
import { NodeFile } from "./node-file.js";
import { fetchNode } from "./fetch-node.js";
// import {fetchFile} from "../fetch/fetch-file"
// import {selectLoader} from "../api/select-loader";
/**
 * FileSystem pass-through for Node.js
 * Compatible with BrowserFileSystem.
 * @param options
 */
export class NodeFileSystem {
    readable = true;
    writable = true;
    // implements FileSystem
    constructor() { }
    async readdir(dirname = '.', options) {
        return await fsPromise.readdir(dirname, options);
    }
    async stat(path) {
        const info = await fsPromise.stat(path, { bigint: true });
        return {
            size: Number(info.size),
            bigsize: info.size,
            isDirectory: info.isDirectory()
        };
    }
    async unlink(path) {
        return await fsPromise.unlink(path);
    }
    async fetch(path, options) {
        return await fetchNode(path, options);
    }
    // implements IRandomAccessFileSystem
    async openReadableFile(path, flags = 'r') {
        return new NodeFile(path, flags);
    }
    async openWritableFile(path, flags = 'w', mode) {
        return new NodeFile(path, flags, mode);
    }
}
