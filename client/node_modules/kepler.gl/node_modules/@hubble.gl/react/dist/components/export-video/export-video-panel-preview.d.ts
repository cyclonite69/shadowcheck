import React, { Component, RefObject } from 'react';
import { type MapProps, type MapRef } from 'react-map-gl';
import type { Deck, DeckProps, MapViewState } from '@deck.gl/core/typed';
import { DeckAdapter } from '@hubble.gl/core';
export type ExportVideoPanelPreviewProps = {
    mapData: any;
    resolution: [number, number];
    exportVideoWidth: number;
    disableBaseMap: boolean;
    deckProps?: DeckProps;
    viewState: MapViewState;
    adapter: DeckAdapter;
    mapboxLayerBeforeId?: string;
    rendering: boolean;
    saving: boolean;
    setViewState: (viewState: MapViewState) => void;
    durationMs: number;
    mapProps?: MapProps;
};
type ExportVideoPanelPreviewState = {
    memoDevicePixelRatio: number;
    mapStyle: string;
    mapboxAccessToken?: string;
};
export declare class ExportVideoPanelPreview extends Component<ExportVideoPanelPreviewProps, ExportVideoPanelPreviewState> {
    mapRef: RefObject<MapRef>;
    deckRef: RefObject<Deck>;
    constructor(props: ExportVideoPanelPreviewProps);
    componentDidUpdate(prevProps: any): void;
    componentWillUnmount(): void;
    _resizeVideo(): void;
    _setDevicePixelRatio(devicePixelRatio: number): void;
    _getContainer(): {
        height: number;
        width: number;
    };
    createLayers(beforeId?: string): any;
    _onAfterRender(): void;
    _onMapLoad(): void;
    render(): React.JSX.Element;
}
export {};
//# sourceMappingURL=export-video-panel-preview.d.ts.map