// hubble.gl
// SPDX-License-Identifier: MIT
// Copyright (c) vis.gl contributors
import React, { useState } from 'react';
import { withTheme } from 'styled-components';
import { WithKeplerUI } from "../inject-kepler.js";
import AnimationTab from "./modal-tab-animation.js";
import SettingsTab from "./modal-tab-settings.js";
import get from 'lodash.get';
function ExportVideoPanelSettings({ settings, resolution, disabled }) {
    const loadingMethods = [
        // Each entry creates new tabs with ModalTabsFactory
        // id: The tab id in state
        // label: What the text of the tab will be
        // elementType: The component to render
        {
            id: 'export-modal-tab-animation',
            label: 'exportVideoModal.animation',
            elementType: AnimationTab
        },
        {
            id: 'export-modal-tab-settings',
            label: 'exportVideoModal.settings',
            elementType: SettingsTab
        }
    ];
    const getDefaultMethod = (methods) => Array.isArray(methods) ? get(methods, [0]) : null;
    const [currentMethod, toggleMethod] = useState(getDefaultMethod(loadingMethods));
    const ModalTab = currentMethod.elementType;
    return (React.createElement(WithKeplerUI, null, ({ ModalTabsFactory }) => {
        const ModalTabs = ModalTabsFactory();
        return (React.createElement("div", { className: "export-video-modal-tab-container" },
            React.createElement(ModalTabs, { currentMethod: currentMethod.id, loadingMethods: loadingMethods, toggleMethod: toggleMethod }),
            currentMethod && (React.createElement(ModalTab // Represents all the params needed across all tabs
            , { settings: settings, resolution: resolution, disabled: disabled }))));
    }));
}
// fix type with react 18
const ThemedExportVideoPanelSettings = withTheme(ExportVideoPanelSettings);
export default ThemedExportVideoPanelSettings;
