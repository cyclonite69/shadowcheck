import React, { Component, type PropsWithChildren } from 'react';
type ExportVideoModalProps = {
    theme: {
        sidePanelInnerPadding?: number;
        sidePanel?: {
            margin?: {
                left?: number;
            };
        };
        sidePanelScrollBarWidth?: number;
        modalOverLayZ?: number;
        sidePanelBg?: string;
        panelBorderRadius?: string;
    };
    isOpen: boolean;
    defaultSettingsPos?: {
        top: string;
        left: string;
    };
    bottomBuffer?: number;
    settingsHeight: number;
    showSettings: boolean;
};
declare class ExportVideoModal extends Component<PropsWithChildren<ExportVideoModalProps>> {
    static defaultProps: {
        defaultSettingsPos: {
            top: string;
            left: string;
        };
        bottomBuffer: number;
    };
    root: React.RefObject<HTMLDivElement>;
    showSettingsSelector(props: ExportVideoModalProps): boolean;
    themeSelector(props: ExportVideoModalProps): {
        sidePanelInnerPadding?: number;
        sidePanel?: {
            margin?: {
                left?: number;
            };
        };
        sidePanelScrollBarWidth?: number;
        modalOverLayZ?: number;
        sidePanelBg?: string;
        panelBorderRadius?: string;
    };
    settingsPosSelector: import("reselect").OutputSelector<ExportVideoModalProps, {
        top: string;
        left: string;
    }, (res1: boolean, res2: {
        sidePanelInnerPadding?: number;
        sidePanel?: {
            margin?: {
                left?: number;
            };
        };
        sidePanelScrollBarWidth?: number;
        modalOverLayZ?: number;
        sidePanelBg?: string;
        panelBorderRadius?: string;
    }) => {
        top: string;
        left: string;
    }>;
    modalStylesSelector: import("reselect").OutputSelector<ExportVideoModalProps, {
        content: {
            top: string;
            left: string;
            right: string;
            bottom: string;
            transform: string;
            padding: string;
            border: number;
            backgroundColor: string;
            borderRadius: string;
        };
        overlay: {
            backgroundColor: string;
            zIndex: number;
        };
    }, (res: {
        sidePanelInnerPadding?: number;
        sidePanel?: {
            margin?: {
                left?: number;
            };
        };
        sidePanelScrollBarWidth?: number;
        modalOverLayZ?: number;
        sidePanelBg?: string;
        panelBorderRadius?: string;
    }) => {
        content: {
            top: string;
            left: string;
            right: string;
            bottom: string;
            transform: string;
            padding: string;
            border: number;
            backgroundColor: string;
            borderRadius: string;
        };
        overlay: {
            backgroundColor: string;
            zIndex: number;
        };
    }>;
    render(): React.JSX.Element;
}
export default ExportVideoModal;
//# sourceMappingURL=export-video-modal.d.ts.map