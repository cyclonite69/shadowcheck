{
  "version": 3,
  "sources": ["index.js", "components/basic-controls.js", "components/encoder-dropdown.js", "components/input.js", "components/encoders.js", "components/icons/play.js", "components/icons/base.js", "components/icons/stop.js", "components/icons/download-video.js", "components/render-player.js", "components/resolution-guide.js", "components/export-video/export-video-modal.js", "components/export-video/styled-components.js", "components/export-video/constants.js", "components/export-video/export-video-panel-container.js", "components/export-video/export-video-panel.js", "components/export-video/export-video-panel-settings.js", "components/inject-kepler.js", "components/export-video/modal-tab-animation.js", "components/export-video/utils.js", "components/export-video/modal-tab-settings.js", "components/export-video/export-video-panel-preview.js", "components/export-video/rendering-spinner.js", "kepler-layers.js", "components/export-video/set-ref.js", "components/quick-animation.js", "hooks.js"],
  "sourcesContent": ["// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport { EncoderDropdown, BasicControls, ResolutionGuide, ExportVideoModal, ExportVideoPanelContainer, injectKeplerUI, InjectKeplerUI, WithKeplerUI, KeplerUIContext, QuickAnimation, RenderPlayer } from \"./components/index.js\";\nexport { useNextFrame, useDeckAdapter, useDeckAnimation, useHubbleGl } from \"./hooks.js\";\nexport { createKeplerLayers } from \"./kepler-layers.js\";\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport EncoderDropdown from \"./encoder-dropdown.js\";\nimport styled from 'styled-components';\nimport { DownloadVideo } from \"./icons/index.js\";\nimport RenderPlayer from \"./render-player.js\";\nimport { ENCODERS, WEBM } from \"./encoders.js\";\nconst RenderResult = styled.div `\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  right: 0;\n  background-color: #fff;\n  margin: 24px;\n  padding: 10px 24px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  min-width: 300px;\n  max-height: calc(100% - 48px);\n`;\nconst RenderControls = styled.div ``;\nconst ButtonGroup = styled.div `\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 8px;\n  justify-content: flex-end;\n`;\nconst Result = styled.div `\n  display: ${props => (props.$show ? 'block' : 'none')};\n  max-width: 500px;\n`;\nconst Status = styled.div `\n  display: flex;\n  align-items: center;\n`;\nconst H3 = styled.h3 `\n  font-size: 16px;\n  margin: 8px 0;\n  font-family: Helvetica, Arial, sans-serif;\n`;\nconst Download = styled.div `\n  color: blue;\n  cursor: pointer;\n  padding: 0 8px;\n  display: ${props => (props.$show ? 'flex' : 'none')};\n`;\nconst TogglePlayer = styled.div `\n  font-family: Helvetica, Arial, sans-serif;\n  display: inline-block;\n  user-select: none;\n  margin: 8px 0;\n  text-decoration: underline;\n  float: right;\n  &:hover {\n    color: blue;\n  }\n`;\nexport default function BasicControls({ children, adapter, busy, setBusy, formatConfigs, timecode, embed = true, filename = undefined }) {\n    const [encoder, setEncoder] = useState(WEBM);\n    const [blob, setBlob] = useState(undefined);\n    const [renderStatus, setRenderStatus] = useState(undefined);\n    const [showPlayer, setShowPlayer] = useState(true);\n    const renderText = useMemo(() => {\n        switch (renderStatus) {\n            case 'in-progress':\n                return 'Rendering animation...';\n            case 'saving':\n                return 'Processing render...';\n            case 'rendered':\n                return 'Render complete!';\n            default:\n                return 'Renderer idle...';\n        }\n    }, [renderStatus]);\n    useEffect(() => {\n        // reset result UI when encoder changes.\n        setBlob(undefined);\n        setRenderStatus(undefined);\n    }, [encoder]);\n    const onSave = useCallback((newBlob) => {\n        setBlob(newBlob);\n        setRenderStatus('rendered');\n    }, []);\n    const onRender = useCallback(() => {\n        adapter.render({\n            Encoder: ENCODERS[encoder],\n            formatConfigs,\n            filename,\n            timecode,\n            onStopped: () => setRenderStatus('saving'),\n            onComplete: () => setBusy(false),\n            onSave: embed && onSave\n        });\n        setRenderStatus('in-progress');\n        setBusy(true);\n    }, [adapter, onSave, encoder, embed, formatConfigs, timecode, filename]);\n    const onStop = useCallback(() => {\n        adapter.stop({\n            onStopped: () => setRenderStatus('saving'),\n            onComplete: () => setBusy(false),\n            onSave: embed && onSave\n        });\n    }, [adapter, onSave, embed]);\n    return (React.createElement(RenderResult, null,\n        React.createElement(\"div\", null,\n            React.createElement(Status, null,\n                React.createElement(H3, null, renderText),\n                React.createElement(Download, { \"$show\": Boolean(blob), title: \"Download\", onClick: () => {\n                        adapter.videoCapture.download(blob);\n                    } },\n                    React.createElement(DownloadVideo, { height: \"18px\" }))),\n            React.createElement(RenderControls, null,\n                React.createElement(EncoderDropdown, { disabled: busy, encoder: encoder, setEncoder: setEncoder }),\n                React.createElement(ButtonGroup, null,\n                    React.createElement(\"button\", { disabled: busy, onClick: onRender }, \"Render\"),\n                    React.createElement(\"button\", { disabled: !busy || renderStatus === 'saving', onClick: onStop }, \"Interrupt\"))),\n            React.createElement(Result, { \"$show\": Boolean(blob) },\n                React.createElement(TogglePlayer, { onClick: () => setShowPlayer(!showPlayer) }, showPlayer ? 'Hide Player' : 'Show Player'),\n                showPlayer && React.createElement(RenderPlayer, { encoder: encoder, blob: blob })),\n            React.createElement(\"div\", { style: { marginTop: '8px' } }, children))));\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React from 'react';\nimport Input from \"./input.js\";\nimport { ENCODER_LIST } from \"./encoders.js\";\nexport default function EncoderDropdown({ disabled, encoder, setEncoder }) {\n    return (React.createElement(Input, { type: \"select\", disabled: disabled, displayName: \"Encoder\", displayValue: encoder, onChange: (_, newValue) => setEncoder(newValue), options: ENCODER_LIST }));\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nconst InputContainer = styled.div `\n  position: relative;\n  width: 100%;\n  font:\n    14px / 20px Helvetica,\n    Arial,\n    sans-serif;\n  box-sizing: border-box;\n\n  &:last-child {\n    margin-bottom: 20px;\n  }\n\n  > * {\n    vertical-align: middle;\n    white-space: nowrap;\n  }\n  label {\n    display: inline-block;\n    width: 40%;\n    margin-right: 10%;\n    margin-top: 2px;\n    margin-bottom: 2px;\n  }\n  input,\n  a,\n  button,\n  select {\n    background: #fff;\n    font-size: 0.9em;\n    text-transform: none;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    display: inline-block;\n    padding: 0 4px;\n    margin: 0;\n    width: 50%;\n    height: 20px;\n    line-height: 1.833;\n    text-align: left;\n  }\n  button {\n    color: initial;\n  }\n  button:disabled {\n    color: #aaa;\n    cursor: default;\n    background: #eee;\n  }\n  input {\n    border: solid 1px #ccc;\n\n    &:disabled {\n      background: #eee;\n    }\n    &[type='checkbox'] {\n      height: auto;\n    }\n  }\n\n  .tooltip {\n    left: 50%;\n    top: 24px;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 200ms;\n  }\n  &:hover .tooltip {\n    opacity: 1;\n  }\n`;\nexport default class GenericInput extends PureComponent {\n    _onChange(evt) {\n        const { value, type } = evt.target;\n        let newValue = value;\n        if (type === 'checkbox') {\n            newValue = evt.target.checked;\n        }\n        if (type === 'range') {\n            newValue = Number(value);\n            if (this.props.min !== undefined) {\n                newValue = Math.max(this.props.min, newValue);\n            }\n            if (this.props.max !== undefined) {\n                newValue = Math.min(this.props.max, newValue);\n            }\n        }\n        this.props.onChange(this.props.name, newValue);\n    }\n    _resetFunction() {\n        return this.props.onChange(this.props.name, this.props.altValue);\n    }\n    render() {\n        const { displayName, type, displayValue, disabled } = this.props;\n        const props = { ...this.props };\n        delete props.displayName;\n        delete props.displayValue;\n        delete props.altType;\n        delete props.altValue;\n        if (type === 'link') {\n            return (React.createElement(\"div\", { className: \"input\" },\n                React.createElement(\"label\", null, displayName),\n                React.createElement(\"a\", { href: displayValue, target: \"_new\" }, displayValue)));\n        }\n        if (type === 'function' || type === 'json') {\n            const editable = 'altValue' in this.props;\n            return (React.createElement(\"div\", { className: \"input\" },\n                React.createElement(\"label\", null, displayName),\n                React.createElement(\"button\", { type: \"button\", disabled: !editable || disabled, onClick: this._resetFunction.bind(this) }, displayValue)));\n        }\n        if (type === 'select') {\n            return (React.createElement(InputContainer, null,\n                React.createElement(\"div\", { className: \"input\" },\n                    React.createElement(\"label\", null, displayName),\n                    React.createElement(\"select\", { disabled: disabled, onChange: this._onChange.bind(this), value: displayValue }, props.options.map((value, i) => (React.createElement(\"option\", { key: i, value: value }, value)))))));\n        }\n        if (type === 'checkbox') {\n            props.checked = props.value;\n        }\n        return (React.createElement(InputContainer, null,\n            React.createElement(\"label\", null, displayName),\n            React.createElement(\"div\", { className: \"tooltip\" },\n                displayName,\n                \": \",\n                String(displayValue)),\n            React.createElement(\"input\", { ...props, value: displayValue, onChange: this._onChange.bind(this) })));\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { WebMEncoder, JPEGSequenceEncoder, PNGSequenceEncoder, PreviewEncoder, GifEncoder } from '@hubble.gl/core';\nexport const PREVIEW = 'Preview';\nexport const WEBM = 'WebM';\nexport const JPEG = 'JPEG Frames';\nexport const PNG = 'PNG Frames';\nexport const GIF = 'GIF';\nexport const ENCODER_LIST = [PREVIEW, WEBM, JPEG, PNG, GIF];\nexport const ENCODERS = {\n    [PREVIEW]: PreviewEncoder,\n    [GIF]: GifEncoder,\n    [WEBM]: WebMEncoder,\n    [JPEG]: JPEGSequenceEncoder,\n    [PNG]: PNGSequenceEncoder\n};\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Base from \"./base.js\";\nexport default class Play extends Component {\n    static { this.propTypes = {\n        /** Set the height of the icon, ex. '16px' */\n        height: PropTypes.string\n    }; }\n    static { this.defaultProps = {\n        height: '16px',\n        predefinedClassName: 'data-ex-icons-play',\n        viewBox: '0 0 24 24'\n    }; }\n    render() {\n        return (React.createElement(Base, { ...this.props },\n            React.createElement(\"path\", { fill: \"none\", d: \"M0 0h24v24H0z\" }),\n            React.createElement(\"path\", { d: \"M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z\" })));\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst getStyleClassFromColor = (totalColor, colors) => new Array(totalColor)\n    .fill(1)\n    .reduce((accu, c, i) => `${accu}.cr${i + 1} {fill:${colors[i % colors.length]};}`, '');\nexport default class Base extends Component {\n    static { this.displayName = 'Base Icon'; }\n    static { this.propTypes = {\n        /** Set the height of the icon, ex. '16px' */\n        height: PropTypes.string,\n        /** Set the width of the icon, ex. '16px' */\n        width: PropTypes.string,\n        /** Set the viewbox of the svg */\n        viewBox: PropTypes.string,\n        /** Path element */\n        children: PropTypes.node,\n        predefinedClassName: PropTypes.string,\n        className: PropTypes.string\n    }; }\n    static { this.defaultProps = {\n        height: null,\n        width: null,\n        viewBox: '0 0 64 64',\n        predefinedClassName: '',\n        className: '',\n        style: {\n            fill: 'currentColor'\n        }\n    }; }\n    render() {\n        const { height, width, viewBox, style, children, predefinedClassName, className, colors, totalColor, ...props } = this.props;\n        const svgHeight = height;\n        const svgWidth = width || svgHeight;\n        const fillStyle = Array.isArray(colors) && totalColor && getStyleClassFromColor(totalColor, colors);\n        return (React.createElement(\"svg\", { viewBox: viewBox, width: svgWidth, height: svgHeight, style: style, className: `${predefinedClassName} ${className}`, ...props },\n            fillStyle ? React.createElement(\"style\", { type: \"text/css\" }, fillStyle) : null,\n            children));\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Base from \"./base.js\";\nexport default class Stop extends Component {\n    static { this.propTypes = {\n        /** Set the height of the icon, ex. '16px' */\n        height: PropTypes.string\n    }; }\n    static { this.defaultProps = {\n        height: '16px',\n        predefinedClassName: 'data-ex-icons-stop',\n        viewBox: '0 0 24 24'\n    }; }\n    render() {\n        return (React.createElement(Base, { ...this.props },\n            React.createElement(\"path\", { fill: \"none\", d: \"M0 0h24v24H0z\" }),\n            React.createElement(\"path\", { d: \"M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z\" })));\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Base from \"./base.js\";\nexport default class DownloadVideo extends Component {\n    static { this.propTypes = {\n        /** Set the height of the icon, ex. '16px' */\n        height: PropTypes.string\n    }; }\n    static { this.defaultProps = {\n        height: '16px',\n        predefinedClassName: 'data-ex-icons-download-video',\n        viewBox: '0 0 24 24'\n    }; }\n    render() {\n        return (React.createElement(Base, { ...this.props },\n            React.createElement(\"path\", { d: \"M16 4c.552 0 1 .448 1 1v4.2l5.213-3.65c.226-.158.538-.103.697.124.058.084.09.184.09.286v12.08c0 .276-.224.5-.5.5-.103 0-.203-.032-.287-.09L17 14.8V19c0 .552-.448 1-1 1H2c-.552 0-1-.448-1-1V5c0-.552.448-1 1-1h14zm-6 4H8v4H5l4 4 4-4h-3V8z\" })));\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { useEffect, useState } from 'react';\nimport { parse } from '@loaders.gl/core';\nimport { ZipLoader } from '@loaders.gl/zip';\nimport styled from 'styled-components';\nimport { GIF, JPEG, PNG, WEBM } from \"./encoders.js\";\nconst parseImages = async (blob, encoder) => {\n    const images = await parse(blob, ZipLoader);\n    const imageBlobs = {};\n    for (const image in images) {\n        imageBlobs[image] = URL.createObjectURL(new Blob([images[image]], { type: encoder === JPEG ? 'image/jpeg' : 'image/png' }));\n    }\n    return imageBlobs;\n};\nconst VideoPlayer = styled.video `\n  margin: 8px 0;\n  width: 100%;\n`;\nconst GifPlayer = styled.img `\n  margin: 8px 0;\n  width: 100%;\n`;\nconst ScrollBox = styled.div `\n  width: 500px;\n  height: 400px;\n  position: relative;\n  overflow: auto;\n  margin: 8px 0;\n`;\nconst ImageGallery = styled.div `\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\nconst Thumbnail = styled.img `\n  width: 64px;\n`;\nexport default function RenderPlayer({ encoder, blob }) {\n    const [src, setSrc] = useState('');\n    const [gallery, setGallery] = useState({});\n    useEffect(() => {\n        setSrc('');\n    }, [encoder]);\n    useEffect(() => {\n        if (blob) {\n            switch (encoder) {\n                case GIF:\n                case WEBM: {\n                    setSrc(URL.createObjectURL(blob));\n                    break;\n                }\n                case PNG:\n                case JPEG: {\n                    if (blob.type === 'application/zip') {\n                        parseImages(blob).then(setGallery);\n                    }\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n        else {\n            setSrc('');\n            setGallery({});\n        }\n    }, [blob]);\n    switch (encoder) {\n        case WEBM: {\n            return React.createElement(VideoPlayer, { src: src, controls: true, autoPlay: true });\n        }\n        case GIF: {\n            return React.createElement(GifPlayer, { src: src });\n        }\n        case PNG:\n        case JPEG: {\n            return (React.createElement(ScrollBox, null,\n                React.createElement(\"div\", { style: { position: 'absolute' } },\n                    React.createElement(ImageGallery, null, Object.entries(gallery).map(([name, value]) => {\n                        return React.createElement(Thumbnail, { key: name, src: value, title: name });\n                    })))));\n        }\n        default: {\n            return null;\n        }\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React from 'react';\nexport default function ResolutionGuide() {\n    return (React.createElement(\"div\", { style: { position: 'relative' } },\n        React.createElement(Outline, { width: 2560, height: 1440, name: '2160p, 2K' }),\n        React.createElement(Outline, { width: 2560, height: 1440, name: '1440p' }),\n        React.createElement(Outline, { width: 1920, height: 1080, name: '1080p, Full HD' }),\n        React.createElement(Outline, { width: 1280, height: 720, name: '720p, HD' }),\n        React.createElement(Outline, { width: 854, height: 480, name: '480p, WSD' }),\n        React.createElement(Outline, { width: 640, height: 480, name: '480p, SD' }),\n        React.createElement(Outline, { width: 640, height: 360, name: '360p' }),\n        React.createElement(Outline, { width: 426, height: 240, name: '240p' })));\n}\nfunction Outline({ width, height, name }) {\n    return (React.createElement(\"div\", { style: { position: 'absolute', width, height, outline: '2px dashed black' } },\n        React.createElement(\"div\", { style: {\n                position: 'absolute',\n                bottom: -20,\n                right: 0,\n                fontSize: '14px',\n                font: \"normal 14px/20px 'Uber Move',Helvetica,Arial,sans-serif\"\n            } },\n            name,\n            \" (\",\n            width,\n            \" x \",\n            height,\n            \")\")));\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global window */\nimport React, { Component, createRef } from 'react';\nimport Modal from 'react-modal';\nimport { ThemeProvider } from 'styled-components';\nimport { ModalContainer } from \"./styled-components.js\";\nimport { createSelector } from 'reselect';\nclass ExportVideoModal extends Component {\n    constructor() {\n        super(...arguments);\n        this.root = createRef();\n        this.settingsPosSelector = createSelector(this.showSettingsSelector, this.themeSelector, (showSettings, theme = {}) => {\n            const { defaultSettingsPos, bottomBuffer, settingsHeight } = this.props;\n            if (showSettings === false || !this.root || !this.root.current)\n                return defaultSettingsPos;\n            const { sidePanelInnerPadding = 16, sidePanel = {}, sidePanelScrollBarWidth = 10 } = theme;\n            const sidePanelLeft = (sidePanel.margin || {}).left || 20;\n            const offsetX = sidePanelInnerPadding + sidePanelLeft + sidePanelScrollBarWidth;\n            // find component Root position\n            const bounding = this.root.current.getBoundingClientRect();\n            const { x, y, width } = bounding;\n            // set the top so it won't collide with bottom widget\n            const top = y + settingsHeight <= window.innerHeight - bottomBuffer\n                ? y\n                : window.innerHeight - bottomBuffer - settingsHeight;\n            return { top: `${top}px`, left: `${x + width + offsetX}px` };\n        });\n        this.modalStylesSelector = createSelector(this.themeSelector, theme => ({\n            content: {\n                top: 'auto',\n                left: 'auto',\n                right: '50%',\n                bottom: '50%',\n                transform: 'translate(50%, 50%)',\n                padding: '0px 0px 0px 0px',\n                border: 0,\n                backgroundColor: theme.sidePanelBg,\n                borderRadius: theme.panelBorderRadius || '2px'\n            },\n            overlay: {\n                backgroundColor: 'rgba(0, 0, 0, .5)',\n                zIndex: (this.props.theme && this.props.theme.modalOverLayZ) || 1000\n            }\n        }));\n    }\n    static { this.defaultProps = {\n        defaultSettingsPos: { top: '320px', left: '320px' },\n        bottomBuffer: 212\n    }; }\n    // derive settings position based on root component\n    showSettingsSelector(props) {\n        return props.showSettings;\n    }\n    themeSelector(props) {\n        return props.theme;\n    }\n    render() {\n        const { isOpen, theme, children } = this.props;\n        const modalStyles = this.modalStylesSelector(this.props);\n        return (React.createElement(ThemeProvider, { theme: theme },\n            React.createElement(ModalContainer, { className: \"export-video-modal\", ref: this.root }, this.root.current ? (React.createElement(Modal, { isOpen: isOpen, style: modalStyles, ariaHideApp: false, parentSelector: () => {\n                    return (this.root.current ||\n                        {\n                            removeChild: () => { },\n                            appendChild: () => { },\n                            contains: () => { }\n                        });\n                } }, children)) : null)));\n    }\n}\nexport default ExportVideoModal;\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport styled from 'styled-components';\nimport { DEFAULT_ROW_GAP, DEFAULT_PADDING, DEFAULT_SETTINGS_WIDTH } from \"./constants.js\";\nexport const SliderWrapper = styled.div `\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  margin-right: 24px;\n  margin-left: 24px;\n`;\nexport const StyledLabelCell = styled.div `\n  align-self: center;\n  color: ${props => props.theme.labelColor};\n  font-weight: 400;\n  font-size: 11px;\n`;\nexport const StyledValueCell = styled.div `\n  align-self: center;\n  color: ${props => props.theme.textColor};\n  font-weight: 500;\n  font-size: 11px;\n  padding: 0 12px;\n`;\nexport const InputGrid = styled.div `\n  display: grid;\n  grid-template-columns: 88px auto;\n  grid-template-rows: repeat(\n    ${props => props.$rows},\n    ${props => (props.$rowHeight ? props.$rowHeight : '34px')}\n  );\n  grid-row-gap: ${DEFAULT_ROW_GAP}px;\n`;\nexport const ButtonGroup = styled.div `\n  display: flex;\n`;\nexport const ModalContainer = styled.div `\n  position: relative;\n`;\nexport const PanelCloseInner = styled.div `\n  display: flex;\n  justify-content: flex-end;\n`;\nexport const StyledTitle = styled.div `\n  color: ${props => props.theme.titleTextColor};\n  font-size: 20px;\n  font-weight: 400;\n  line-height: ${props => props.theme.lineHeight};\n  padding-bottom: 16px;\n`;\nexport const PanelBodyInner = styled.div `\n  display: grid;\n  grid-template-columns: ${props => props.$exportVideoWidth}px ${DEFAULT_SETTINGS_WIDTH}px;\n  grid-template-rows: auto;\n  grid-column-gap: ${DEFAULT_ROW_GAP}px;\n`;\nexport const Panel = styled.div `\n  width: ${props => props.$exportVideoWidth + 2 * DEFAULT_PADDING + DEFAULT_ROW_GAP + DEFAULT_SETTINGS_WIDTH}px;\n  padding: ${DEFAULT_PADDING}px;\n`;\nexport const deckStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n};\nexport const TimelineControls = styled.div `\n  position: relative;\n  display: flex;\n  justify-content: center;\n  padding-top: 16px;\n`;\nexport const timelinePlayButtonStyle = {\n    cursor: 'pointer',\n    height: '32px',\n    width: '32px',\n    fill: '#FFF'\n};\nexport const LoaderWrapper = styled.div `\n  display: ${props => (props.$rendering === false ? 'none' : 'flex')};\n  position: absolute;\n  background: rgba(0, 0, 0, 0.5);\n  width: ${props => props.$width}px;\n  height: ${props => props.$height}px;\n  align-items: center;\n  justify-content: center;\n`;\nexport const RenderingFeedbackContainer = styled.div `\n  color: white;\n  position: absolute;\n  top: ${props => props.$height - 180}px;\n`;\nexport const VideoLengthDisplay = styled.div `\n  align-self: center;\n  padding-left: 8px;\n`;\nexport const ExportVideoPanelHeader = styled.div `\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DeckCanvas = styled.div `\n  width: ${props => props.$width}px;\n  height: ${props => props.$height}px;\n  position: relative;\n`;\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport const DEFAULT_ICON_BUTTON_HEIGHT = '16px';\nexport const DEFAULT_BUTTON_HEIGHT = '32px';\nexport const DEFAULT_BUTTON_WIDTH = '64px';\nexport const DEFAULT_PADDING = 32;\nexport const DEFAULT_ROW_GAP = 24;\nexport const DEFAULT_SETTINGS_WIDTH = 280;\nexport const DEFAULT_FILENAME = 'kepler.gl';\nexport const DEFAULT_PREVIEW_RESOLUTIONS = { '16:9': '1280x720', '4:3': '1280x960' };\nexport const SIDEPANEL_WIDTH = 300;\nexport const FORMATS = [\n    {\n        value: 'gif',\n        label: 'GIF'\n    },\n    {\n        value: 'webm',\n        label: 'WebM Video'\n    },\n    {\n        value: 'png',\n        label: 'PNG Sequence'\n    },\n    {\n        value: 'jpeg',\n        label: 'JPEG Sequence'\n    }\n];\nexport const ASPECT_RATIOS = { '4_3': '4:3', '16_9': '16:9' };\nexport const RESOLUTIONS = [\n    {\n        value: '960x540',\n        label: 'Good (540p)',\n        width: 960,\n        height: 540,\n        aspectRatio: ASPECT_RATIOS['16_9']\n    },\n    {\n        value: '1280x720',\n        label: 'High (720p)',\n        width: 1280,\n        height: 720,\n        aspectRatio: ASPECT_RATIOS['16_9']\n    },\n    {\n        value: '1920x1080',\n        label: 'Highest (1080p)',\n        width: 1920,\n        height: 1080,\n        aspectRatio: ASPECT_RATIOS['16_9']\n    },\n    {\n        value: '640x480',\n        label: 'Good (480p)',\n        width: 640,\n        height: 480,\n        aspectRatio: ASPECT_RATIOS['4_3']\n    },\n    {\n        value: '1280x960',\n        label: 'High (960p)',\n        width: 1280,\n        height: 960,\n        aspectRatio: ASPECT_RATIOS['4_3']\n    },\n    {\n        value: '1920x1440',\n        label: 'Highest (1440p)',\n        width: 1920,\n        height: 1440,\n        aspectRatio: ASPECT_RATIOS['4_3']\n    }\n];\nexport const isResolution = (value) => (option) => option.value === value;\nexport function getResolutionSetting(value) {\n    return RESOLUTIONS.find(isResolution(value)) || RESOLUTIONS[0];\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { Component } from 'react';\nimport { easeInOut } from 'popmotion';\nimport { DeckAdapter, KeplerAnimation, WebMEncoder, JPEGSequenceEncoder, PNGSequenceEncoder, PreviewEncoder, GifEncoder } from '@hubble.gl/core';\nimport ExportVideoPanel from \"./export-video-panel.js\";\nimport { parseSetCameraType, scaleToVideoExport } from \"./utils.js\";\nimport { DEFAULT_FILENAME, getResolutionSetting } from \"./constants.js\";\nimport { FILTER_VIEW_TYPES } from '@kepler.gl/constants';\nconst ENCODERS = {\n    gif: GifEncoder,\n    webm: WebMEncoder,\n    jpeg: JPEGSequenceEncoder,\n    png: PNGSequenceEncoder\n};\nexport class ExportVideoPanelContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.setMediaType = this.setMediaType.bind(this);\n        this.setCameraPreset = this.setCameraPreset.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n        this.setResolution = this.setResolution.bind(this);\n        this.setViewState = this.setViewState.bind(this);\n        this.onPreviewVideo = this.onPreviewVideo.bind(this);\n        this.onRenderVideo = this.onRenderVideo.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.setDuration = this.setDuration.bind(this);\n        this.getCameraKeyframes = this.getCameraKeyframes.bind(this);\n        this.getFilterKeyframes = this.getFilterKeyframes.bind(this);\n        this.getTripKeyframes = this.getTripKeyframes.bind(this);\n        const { initialState, mapData: { mapState }, glContext } = props;\n        this.state = {\n            mediaType: 'gif',\n            cameraPreset: 'None',\n            fileName: '',\n            resolution: '1280x720',\n            durationMs: 1000,\n            rendering: false, // Will set a spinner overlay if true\n            previewing: false,\n            saving: false,\n            ...(initialState || {})\n        };\n        const viewState = scaleToVideoExport(mapState, this._getContainer());\n        this.state = {\n            ...this.state,\n            viewState,\n            memo: { viewState },\n            adapter: new DeckAdapter({ glContext })\n        };\n    }\n    componentDidMount() {\n        const { onTripFrameUpdate, onFilterFrameUpdate, getTimeRangeFilterKeyframes } = this.props;\n        const animation = new KeplerAnimation({\n            ...this.getFilterKeyframes(),\n            ...this.getTripKeyframes(),\n            cameraKeyframe: this.getCameraKeyframes(),\n            onCameraFrameUpdate: this.setViewState,\n            onTripFrameUpdate,\n            onFilterFrameUpdate,\n            getTimeRangeFilterKeyframes\n        });\n        this.state.adapter.animationManager.attachAnimation(animation);\n    }\n    componentWillUnmount() {\n        this.onStop({ abort: true });\n    }\n    getFileName() {\n        const { defaultFileName } = this.props;\n        const { fileName } = this.state;\n        if (fileName === '')\n            return defaultFileName;\n        return fileName;\n    }\n    getCanvasSize() {\n        const { resolution } = this.state;\n        const { width, height } = getResolutionSetting(resolution);\n        return { width, height };\n    }\n    _getContainer() {\n        const { width, height } = this.getCanvasSize();\n        const { exportVideoWidth } = this.props;\n        const aspectRatio = width / height;\n        return { height: exportVideoWidth / aspectRatio, width: exportVideoWidth };\n    }\n    getFormatConfigs() {\n        const { width, height } = this.getCanvasSize();\n        return {\n            webm: {\n                quality: 0.8\n            },\n            jpeg: {\n                archive: 'zip',\n                quality: 0.8\n            },\n            png: {\n                archive: 'zip'\n            },\n            gif: {\n                sampleInterval: 1000,\n                width,\n                height\n            }\n        };\n    }\n    getTimecode() {\n        const { durationMs } = this.state;\n        return {\n            start: 0,\n            end: durationMs,\n            framerate: 30\n        };\n    }\n    getEncoder() {\n        const { mediaType } = this.state;\n        return ENCODERS[mediaType];\n    }\n    getCameraKeyframes() {\n        const { viewState, cameraPreset, durationMs } = this.state;\n        const { longitude, latitude, zoom, pitch, bearing } = viewState;\n        const { width, height } = this.getCanvasSize();\n        return {\n            timings: [0, durationMs],\n            keyframes: [\n                {\n                    longitude,\n                    latitude,\n                    zoom,\n                    pitch,\n                    bearing\n                },\n                parseSetCameraType(cameraPreset, viewState)\n            ],\n            easings: [easeInOut],\n            width,\n            height\n        };\n    }\n    getFilterKeyframes() {\n        const { mapData: { visState: { filters } }, animatableFilters } = this.props;\n        const filterKeyframes = (Array.isArray(animatableFilters) && animatableFilters.length\n            ? animatableFilters\n            : // only animate an enlarged time filter if animatable filters aren't specified.\n                filters.filter(f => f.type === 'timeRange' && f.view === FILTER_VIEW_TYPES.enlarged)).map(f => ({\n            id: f.id,\n            timings: [0, this.state.durationMs]\n        }));\n        if (filterKeyframes.length) {\n            return {\n                filters,\n                filterKeyframes\n            };\n        }\n        return {};\n    }\n    getTripKeyframes() {\n        const { mapData: { visState: { layers, animationConfig } } } = this.props;\n        const animatableLayer = layers.filter(l => l.config.animation && l.config.animation.enabled && l.config.isVisible);\n        const readyToAnimation = Array.isArray(animationConfig.domain) && Number.isFinite(animationConfig.currentTime);\n        const showAnimationControl = animatableLayer.length && readyToAnimation;\n        if (showAnimationControl) {\n            return {\n                animationConfig,\n                tripKeyframe: { timings: [0, this.state.durationMs] }\n            };\n        }\n        return {};\n    }\n    setStateAndNotify(update) {\n        const { props: { onSettingsChange }, state } = this;\n        this.setState({ ...state, ...update });\n        if (onSettingsChange) {\n            const { mediaType, cameraPreset, fileName, resolution, durationMs } = state;\n            onSettingsChange({\n                mediaType,\n                cameraPreset,\n                fileName,\n                resolution,\n                durationMs,\n                ...update\n            });\n        }\n    }\n    setMediaType(mediaType) {\n        this.setStateAndNotify({ mediaType });\n    }\n    setCameraPreset(cameraPreset) {\n        this.setStateAndNotify({ cameraPreset });\n    }\n    setFileName(fileName) {\n        this.setStateAndNotify({ fileName });\n    }\n    setResolution(resolution) {\n        this.setStateAndNotify({ resolution });\n    }\n    setViewState(viewState) {\n        this.setState({ viewState });\n    }\n    onPreviewVideo() {\n        const { adapter } = this.state;\n        const filename = this.getFileName();\n        const formatConfigs = this.getFormatConfigs();\n        const timecode = this.getTimecode();\n        this.setState({ previewing: true, memo: { viewState: { ...this.state.viewState } } });\n        const onComplete = () => {\n            this.setState({ previewing: false, viewState: { ...this.state.memo.viewState } });\n        };\n        adapter.animationManager.setKeyframes('kepler', {\n            ...this.getFilterKeyframes(),\n            ...this.getTripKeyframes(),\n            cameraKeyframe: this.getCameraKeyframes()\n        });\n        adapter.render({\n            Encoder: PreviewEncoder,\n            formatConfigs,\n            timecode,\n            filename,\n            onComplete\n        });\n    }\n    onRenderVideo() {\n        const { adapter } = this.state;\n        const filename = this.getFileName();\n        const Encoder = this.getEncoder();\n        const formatConfigs = this.getFormatConfigs();\n        const timecode = this.getTimecode();\n        // Enables overlay after user clicks \"Render\"\n        this.setState({ rendering: true, saving: false, memo: { viewState: { ...this.state.viewState } } });\n        const onComplete = () => {\n            // Disables overlay once export is done saving (generates file to download)\n            this.setState({ rendering: false, saving: false, viewState: { ...this.state.memo.viewState } });\n        };\n        adapter.animationManager.setKeyframes('kepler', {\n            ...this.getFilterKeyframes(),\n            ...this.getTripKeyframes(),\n            cameraKeyframe: this.getCameraKeyframes()\n        });\n        adapter.render({\n            Encoder,\n            formatConfigs,\n            timecode,\n            filename,\n            onStopped: () => this.setState({ saving: true }),\n            onComplete\n        });\n    }\n    onStop({ abort = false }) {\n        const { adapter } = this.state;\n        adapter.stop({\n            abort,\n            onStopped: () => this.setState({ saving: true }),\n            onComplete: () => {\n                this.setState({\n                    previewing: false,\n                    rendering: false,\n                    viewState: { ...this.state.memo.viewState }\n                });\n            }\n        });\n    }\n    setDuration(durationMs) {\n        this.setStateAndNotify({ durationMs });\n    }\n    render() {\n        const { exportVideoWidth, handleClose, mapData, header, deckProps, mapProps, disableBaseMap, mapboxLayerBeforeId, defaultFileName } = this.props;\n        const { adapter, durationMs, mediaType, cameraPreset, fileName, resolution, viewState, rendering, previewing, saving } = this.state;\n        const timecode = this.getTimecode();\n        const settings = {\n            mediaType,\n            setMediaType: this.setMediaType,\n            cameraPreset,\n            setCameraPreset: this.setCameraPreset,\n            fileName,\n            setFileName: this.setFileName,\n            fileNamePlaceholder: defaultFileName,\n            resolution,\n            setResolution: this.setResolution,\n            durationMs,\n            setDuration: this.setDuration,\n            frameRate: timecode.framerate\n        };\n        let canvasSize = this.getCanvasSize();\n        if (previewing) {\n            // set resolution to be 1:1 with container when previewing to improve performance.\n            canvasSize = this._getContainer();\n        }\n        return (React.createElement(ExportVideoPanel\n        // UI Props\n        , { \n            // UI Props\n            exportVideoWidth: exportVideoWidth, handleClose: handleClose, header: header, \n            // Map Props\n            mapData: mapData, viewState: viewState, setViewState: this.setViewState, deckProps: deckProps, mapProps: mapProps, disableBaseMap: disableBaseMap, mapboxLayerBeforeId: mapboxLayerBeforeId, \n            // Settings Props\n            settings: settings, \n            // Hubble Props\n            adapter: adapter, resolution: [canvasSize.width, canvasSize.height], handlePreviewVideo: this.onPreviewVideo, handleRenderVideo: this.onRenderVideo, handleStop: this.onStop, rendering: rendering, previewing: previewing, saving: saving }));\n    }\n}\n// @ts-ignore\nExportVideoPanelContainer.defaultProps = {\n    exportVideoWidth: 540,\n    header: true,\n    glContext: undefined,\n    deckProps: {},\n    mapProps: {},\n    disableStaticMap: false,\n    defaultFileName: DEFAULT_FILENAME\n};\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React from 'react';\nimport { withTheme } from 'styled-components';\nimport { PanelCloseInner, StyledTitle, PanelBodyInner, Panel, ButtonGroup, TimelineControls, timelinePlayButtonStyle, ExportVideoPanelHeader } from \"./styled-components.js\";\nimport { DEFAULT_ICON_BUTTON_HEIGHT } from \"./constants.js\";\nimport ExportVideoPanelSettings from \"./export-video-panel-settings.js\";\nimport { ExportVideoPanelPreview } from \"./export-video-panel-preview.js\";\nimport { Play, Stop } from \"../icons/index.js\";\nimport { WithKeplerUI } from \"../inject-kepler.js\";\nconst PanelClose = ({ handleClose }) => (React.createElement(WithKeplerUI, null, ({ IconButton, Icons }) => (React.createElement(PanelCloseInner, { className: \"export-video-panel__close\" },\n    React.createElement(IconButton, { style: { alignItems: 'start' }, className: \"export-video-panel__button\", link: true, onClick: handleClose },\n        React.createElement(Icons.Delete, { height: DEFAULT_ICON_BUTTON_HEIGHT }))))));\nconst PanelBody = ({ exportVideoWidth, mapData, adapter, setViewState, settings, resolution, viewState, deckProps, mapProps, disableBaseMap, mapboxLayerBeforeId, handlePreviewVideo, handleRenderVideo, handleStop, rendering, previewing, saving }) => (React.createElement(WithKeplerUI, null, ({ Button }) => (React.createElement(PanelBodyInner, { className: \"export-video-panel__body\", \"$exportVideoWidth\": exportVideoWidth },\n    React.createElement(ExportVideoPanelPreview, { mapData: mapData, adapter: adapter, setViewState: setViewState, exportVideoWidth: exportVideoWidth, resolution: resolution, viewState: viewState, rendering: rendering, saving: saving, durationMs: settings.durationMs, deckProps: deckProps, mapProps: mapProps, disableBaseMap: disableBaseMap, mapboxLayerBeforeId: mapboxLayerBeforeId }),\n    React.createElement(ExportVideoPanelSettings, { settings: settings, resolution: resolution, disabled: rendering || previewing }),\n    React.createElement(TimelineControls, { className: \"timeline-controls\" }, rendering || previewing ? (React.createElement(Stop, { style: timelinePlayButtonStyle, onClick: () => handleStop({}) })) : (React.createElement(Play, { style: timelinePlayButtonStyle, onClick: handlePreviewVideo }))),\n    React.createElement(ButtonGroup, null,\n        React.createElement(Button, { style: { marginTop: '16px', width: '100%', height: '32px' }, className: 'export-video-button', onClick: handleRenderVideo, disabled: rendering || previewing }, \"Render\"))))));\nconst ExportVideoPanel = ({ theme, \n// UI Props\nexportVideoWidth, handleClose, header, \n// Map Props\nmapData, setViewState, mapboxLayerBeforeId, \n// Settings Props\nsettings, \n// Hubble Props\nadapter, handlePreviewVideo, handleRenderVideo, handleStop, rendering, previewing, saving, resolution, viewState, deckProps, mapProps, disableBaseMap }) => {\n    return (React.createElement(Panel, { \"$exportVideoWidth\": exportVideoWidth, className: \"export-video-panel\" },\n        header !== false ? (React.createElement(ExportVideoPanelHeader, { className: \"export-video-panel__header\" },\n            React.createElement(StyledTitle, { className: \"export-video-panel__title\" }, \"Export Video\"),\n            React.createElement(PanelClose, { handleClose: handleClose }))) : null,\n        React.createElement(PanelBody, { exportVideoWidth: exportVideoWidth, mapData: mapData, adapter: adapter, settings: settings, setViewState: setViewState, resolution: resolution, viewState: viewState, deckProps: deckProps, mapProps: mapProps, disableBaseMap: disableBaseMap, mapboxLayerBeforeId: mapboxLayerBeforeId, handlePreviewVideo: handlePreviewVideo, handleRenderVideo: handleRenderVideo, handleStop: handleStop, rendering: rendering, previewing: previewing, saving: saving })));\n};\n// TODO fix with react 18\nconst ThemedExportVideoPanel = withTheme(ExportVideoPanel);\nexport default ThemedExportVideoPanel;\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { useState } from 'react';\nimport { withTheme } from 'styled-components';\nimport { WithKeplerUI } from \"../inject-kepler.js\";\nimport AnimationTab from \"./modal-tab-animation.js\";\nimport SettingsTab from \"./modal-tab-settings.js\";\nimport get from 'lodash.get';\nfunction ExportVideoPanelSettings({ settings, resolution, disabled }) {\n    const loadingMethods = [\n        // Each entry creates new tabs with ModalTabsFactory\n        // id: The tab id in state\n        // label: What the text of the tab will be\n        // elementType: The component to render\n        {\n            id: 'export-modal-tab-animation',\n            label: 'exportVideoModal.animation',\n            elementType: AnimationTab\n        },\n        {\n            id: 'export-modal-tab-settings',\n            label: 'exportVideoModal.settings',\n            elementType: SettingsTab\n        }\n    ];\n    const getDefaultMethod = (methods) => Array.isArray(methods) ? get(methods, [0]) : null;\n    const [currentMethod, toggleMethod] = useState(getDefaultMethod(loadingMethods));\n    const ModalTab = currentMethod.elementType;\n    return (React.createElement(WithKeplerUI, null, ({ ModalTabsFactory }) => {\n        const ModalTabs = ModalTabsFactory();\n        return (React.createElement(\"div\", { className: \"export-video-modal-tab-container\" },\n            React.createElement(ModalTabs, { currentMethod: currentMethod.id, loadingMethods: loadingMethods, toggleMethod: toggleMethod }),\n            currentMethod && (React.createElement(ModalTab // Represents all the params needed across all tabs\n            , { settings: settings, resolution: resolution, disabled: disabled }))));\n    }));\n}\n// fix type with react 18\nconst ThemedExportVideoPanelSettings = withTheme(ExportVideoPanelSettings);\nexport default ThemedExportVideoPanelSettings;\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { createContext } from 'react';\nexport const KeplerUIContext = createContext(null);\nexport const WithKeplerUI = KeplerUIContext.Consumer;\nexport const InjectKeplerUI = ({ children, keplerUI }) => React.createElement(KeplerUIContext.Provider, { value: keplerUI }, children);\nexport const injectKeplerUI = (Component, keplerUI) => props => (React.createElement(KeplerUIContext.Provider, { value: keplerUI },\n    React.createElement(Component, { ...props })));\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React from 'react';\nimport { printDuration } from \"./utils.js\";\nimport { SliderWrapper, StyledLabelCell, StyledValueCell, InputGrid, VideoLengthDisplay } from \"./styled-components.js\";\nimport { WithKeplerUI } from \"../inject-kepler.js\";\nfunction AnimationTab({ settings, disabled }) {\n    return (React.createElement(WithKeplerUI, null, ({ Slider, ItemSelector }) => (React.createElement(React.Fragment, null,\n        React.createElement(InputGrid, { \"$rows\": 5 },\n            React.createElement(StyledLabelCell, null, \"Duration\"),\n            React.createElement(StyledValueCell, { style: { paddingLeft: '0px', paddingRight: '0px' } },\n                React.createElement(SliderWrapper, { style: { width: '100%', marginLeft: '0px' }, className: \"modal-duration__slider\" },\n                    React.createElement(Slider, { showValues: false, enableBarDrag: !disabled, isRanged: false, value0: 100, value1: settings.durationMs, step: 100, minValue: 100, maxValue: 10000, style: { width: '70px' }, onSlider1Change: val => {\n                            settings.setDuration(val);\n                        } }),\n                    React.createElement(VideoLengthDisplay, null, printDuration(settings.durationMs, true)))),\n            React.createElement(StyledLabelCell, null, \"Camera\"),\n            React.createElement(ItemSelector, { selectedItems: settings.cameraPreset, options: [\n                    'None',\n                    'Orbit (90\u00BA)',\n                    'Orbit (180\u00BA)',\n                    'Orbit (360\u00BA)',\n                    'Zoom Out',\n                    'Zoom In'\n                ], multiSelect: false, searchable: false, onChange: settings.setCameraPreset, disabled: disabled }))))));\n}\nexport default AnimationTab;\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { point } from '@turf/helpers';\nimport transformTranslate from '@turf/transform-translate';\nimport { WebMercatorViewport } from '@deck.gl/core'; // importing non-typed module since it's a peer dependency and node errors while testing\nexport function scaleToVideoExport(viewState, container) {\n    const viewport = new WebMercatorViewport(viewState);\n    const nw = viewport.unproject([0, 0]);\n    const se = viewport.unproject([viewport.width, viewport.height]);\n    const videoViewport = new WebMercatorViewport({\n        ...viewState,\n        width: container.width,\n        height: container.height\n    }).fitBounds([nw, se]);\n    const { height, width, latitude, longitude, zoom, altitude } = videoViewport;\n    return {\n        height,\n        width,\n        latitude,\n        longitude,\n        pitch: viewState.pitch,\n        zoom,\n        bearing: viewState.bearing,\n        altitude\n    };\n}\n/**\n * Parses camera type and creates keyframe for Hubble to use\n * @param strCameraType of user-selected camera option ex: \"Orbit (90\u00BA)\"\n * @param viewState keyframe JSON that contains long, lat, zoom, bearing, pitch\n */\nexport function parseSetCameraType(strCameraType, viewState) {\n    const modifiedViewState = { ...viewState }; // Creating a shallow copy otherwise keyframes bugs out\n    // Returns arr of important keywords. Should work for 2+ words in future ex: [\"Orbit\", \"90\"] | [\"North\", \"South\"] | [\"Zoom\", \"In\"]\n    const match = strCameraType.match(/\\b(?!to)\\b\\S+\\w/g);\n    // Converts mapState object to turf friendly Point obj (GEOJSON)\n    const turfPoint = point([modifiedViewState.longitude, modifiedViewState.latitude]);\n    if (match[0] === 'Orbit') {\n        modifiedViewState.bearing = modifiedViewState.bearing + parseInt(match[1], 10);\n    }\n    // TODO future option that'll allow user to set X distance (km OR miles) directionally. Options inside turf\n    // https://turfjs.org/docs/#transformTranslate\n    const setChecker = new Set(['East', 'South', 'West', 'North']);\n    if (setChecker.has(match[0])) {\n        if (match[0] === 'East') {\n            // TODO Temporary solution to catch this branch to master. Doesn't work for \"East to North\" for example if option allows in future\n            const translatedPoly = transformTranslate(turfPoint, 10, 270);\n            modifiedViewState.longitude = translatedPoly.geometry.coordinates[0];\n        }\n        else if (match[0] === 'South') {\n            const translatedPoly = transformTranslate(turfPoint, 10, 0);\n            modifiedViewState.latitude = translatedPoly.geometry.coordinates[1];\n        }\n        else if (match[0] === 'West') {\n            const translatedPoly = transformTranslate(turfPoint, 10, 90);\n            modifiedViewState.longitude = translatedPoly.geometry.coordinates[0];\n        }\n        else if (match[0] === 'North') {\n            const translatedPoly = transformTranslate(turfPoint, 10, 180);\n            modifiedViewState.latitude = translatedPoly.geometry.coordinates[1];\n        }\n    }\n    if (match[0] === 'Zoom') {\n        if (match[1] === 'In') {\n            modifiedViewState.zoom = modifiedViewState.zoom + 3;\n        }\n        else if (match[1] === 'Out') {\n            modifiedViewState.zoom = modifiedViewState.zoom - 3;\n        }\n    }\n    return modifiedViewState;\n}\n/**\n * Used to convert durationMs to [hh:]mm:ss[.ms]\n * @param durationMs duration of animation in milliseconds\n * @param showMs optionally show milliseconds\n * @returns time in format hh:mm:ss.ms\n */\nexport function printDuration(durationMs, showMs = false) {\n    const millisecondsInt = Math.floor(durationMs % 1000);\n    const secondsInt = Math.floor(durationMs / 1000) % 60;\n    const minutesInt = Math.floor(durationMs / (1000 * 60)) % 60;\n    const hoursInt = Math.floor(durationMs / (1000 * 60 * 60)) % 24;\n    const hours = hoursInt === 0 ? '' : hoursInt < 10 ? `0${hoursInt}:` : `${hoursInt}:`;\n    const minutes = minutesInt < 10 ? `0${minutesInt}` : minutesInt;\n    const seconds = secondsInt < 10 ? `0${secondsInt}` : secondsInt;\n    const milliseconds = showMs ? `.${millisecondsInt.toString()[0]}` : '';\n    return `${hours}${minutes}:${seconds}${milliseconds}`;\n}\nconst MB = 8 * 1024 * 1024;\n// NOTE: Bit depth and compression ratio is a guess.\nconst COMPRESSION_RATIO = 0.8;\nconst BIT_DEPTH = 6;\n/**\n * Estimates file size of resulting animation. All formulas are approximations\n * created with small sample of animations on default NY taxi trips data and\n * based off hubble's default framerate and the bitrate/depth of 3rd party encoders\n * @param frameRate frame rate of animation (set by developer)\n * @param resolution [width, height] of animation\n * @param durationMs duration of animation (set by developer)\n * @param mediaType 'GIF', 'WEBM', etc.\n * @returns size in MB\n */\nexport function estimateFileSize(frameRate, resolution, durationMs, mediaType) {\n    const seconds = Math.floor(durationMs / 1000);\n    if (mediaType === 'gif') {\n        // Based off of https://www.youtube.com/watch?v=DDcYvesZsnw for uncompressed video\n        // Formula: ((horizontal * vertical * bit depth) / (8 * 1024 * 1024 [convert to megabyte MB])) * (frame rate * time in seconds) * compression ratio\n        // Additional resource https://stackoverflow.com/questions/27559103/video-size-calculation\n        return `${Math.floor(((resolution[0] * resolution[1] * BIT_DEPTH) / MB) * (frameRate * seconds) * COMPRESSION_RATIO)} MB`;\n    }\n    if (mediaType === 'webm') {\n        // Formula: multiplier (arbitrary unit created by analyzing bitrate of outputs) * Mb (megabit) * seconds * .125 (conversion from bit to byte)\n        // frameRate determines Mb/s in animations with a lot of movement at 720p. Multiply by seconds and convert to MB (megabyte)\n        return `${Math.ceil((resolution[0] / 1280) * frameRate * seconds * 0.125)} MB`;\n    }\n    if (mediaType === 'png') {\n        // Note: Adds one frame to size to account for an extra frame when exporting to pictures.\n        return `${Math.floor(((resolution[0] * resolution[1] * BIT_DEPTH) / MB) *\n            ((frameRate + 1) * seconds) *\n            COMPRESSION_RATIO)} MB`;\n    }\n    if (mediaType === 'jpeg') {\n        // Note: Adds one frame to size to account for an extra frame when exporting to pictures.\n        return `${Math.floor(((resolution[0] * resolution[1] * BIT_DEPTH) / MB) *\n            ((frameRate + 1) * seconds) *\n            (COMPRESSION_RATIO - 0.4))} MB`;\n    }\n    return 'Size estimation unavailable';\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { useState } from 'react';\nimport { estimateFileSize } from \"./utils.js\";\nimport { StyledLabelCell, StyledValueCell, InputGrid } from \"./styled-components.js\";\nimport { FORMATS, RESOLUTIONS, ASPECT_RATIOS, DEFAULT_PREVIEW_RESOLUTIONS } from \"./constants.js\";\nimport { WithKeplerUI } from \"../inject-kepler.js\";\nconst getOptionValue = (r) => r.value;\nconst displayOption = (r) => r.label;\nconst getSelectedItems = (options, value) => options.find(o => o.value === value);\nfunction SettingsTab({ settings, resolution, disabled }) {\n    const [aspRatio, setAspRatio] = useState(ASPECT_RATIOS['16_9']);\n    return (React.createElement(WithKeplerUI, null, ({ Input, ItemSelector }) => (React.createElement(React.Fragment, null,\n        React.createElement(InputGrid, { \"$rows\": 5 },\n            React.createElement(StyledLabelCell, null, \"File Name\"),\n            React.createElement(Input, { value: settings.fileName, placeholder: settings.fileNamePlaceholder, onChange: (e) => settings.setFileName(e.target.value), disabled: disabled }),\n            React.createElement(StyledLabelCell, null, \"Media Type\"),\n            React.createElement(ItemSelector, { selectedItems: getSelectedItems(FORMATS, settings.mediaType), options: FORMATS, getOptionValue: getOptionValue, displayOption: displayOption, multiSelect: false, searchable: false, onChange: settings.setMediaType, disabled: disabled }),\n            React.createElement(StyledLabelCell, null, \"Ratio\"),\n            React.createElement(ItemSelector, { selectedItems: aspRatio, options: [ASPECT_RATIOS['4_3'], ASPECT_RATIOS['16_9']], multiSelect: false, searchable: false, onChange: ratio => {\n                    setAspRatio(ratio);\n                    settings.setResolution(DEFAULT_PREVIEW_RESOLUTIONS[ratio]);\n                }, disabled: disabled }),\n            React.createElement(StyledLabelCell, null, \"Quality\"),\n            React.createElement(ItemSelector, { selectedItems: getSelectedItems(RESOLUTIONS, settings.resolution), options: RESOLUTIONS.filter(o => o.aspectRatio === aspRatio), getOptionValue: getOptionValue, displayOption: displayOption, multiSelect: false, searchable: false, onChange: settings.setResolution, disabled: disabled }),\n            React.createElement(StyledLabelCell, null, \"File Size\"),\n            React.createElement(StyledValueCell, null,\n                \"Approx.\",\n                ' ',\n                estimateFileSize(settings.frameRate, resolution, settings.durationMs, settings.mediaType)))))));\n}\nexport default SettingsTab;\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global window */\nimport React, { Component, forwardRef } from 'react';\nimport DeckGL from '@deck.gl/react/typed';\nimport ReactMapGL, { useControl } from 'react-map-gl';\nimport { MapboxOverlay } from '@deck.gl/mapbox/typed';\nimport isEqual from 'lodash.isequal';\nimport { DeckCanvas } from \"./styled-components.js\";\nimport { RenderingSpinner } from \"./rendering-spinner.js\";\nimport { createKeplerLayers } from \"../../kepler-layers.js\";\nimport { setRef } from \"./set-ref.js\";\nconst DeckGLOverlay = forwardRef((props, ref) => {\n    // MapboxOverlay handles a variety of props differently than the Deck class.\n    // https://deck.gl/docs/api-reference/mapbox/mapbox-overlay#constructor\n    const deck = useControl(() => new MapboxOverlay({ ...props, interleaved: true }));\n    deck.setProps(props);\n    // @ts-expect-error private property\n    setRef(ref, deck._deck);\n    return null;\n});\nexport class ExportVideoPanelPreview extends Component {\n    constructor(props) {\n        super(props);\n        const mapStyle = this.props.mapData.mapStyle;\n        const { url, accessToken } = mapStyle.mapStyles[mapStyle.styleType];\n        this.mapRef = React.createRef();\n        this.deckRef = React.createRef();\n        this.state = {\n            mapStyle: url, // Unsure if mapStyle would ever change but allowing it just in case\n            mapboxAccessToken: accessToken,\n            memoDevicePixelRatio: 1\n        };\n        this._onMapLoad = this._onMapLoad.bind(this);\n        this._resizeVideo = this._resizeVideo.bind(this);\n        this._onAfterRender = this._onAfterRender.bind(this);\n        this._resizeVideo();\n    }\n    componentDidUpdate(prevProps) {\n        if (!isEqual(prevProps.resolution, this.props.resolution)) {\n            this._resizeVideo();\n        }\n    }\n    componentWillUnmount() {\n        if (this.mapRef.current) {\n            const map = this.mapRef.current.getMap();\n            // remove all rendering related handlers to prevent rendering after unmount\n            // @ts-ignore _listeners is private\n            const listeners = [...map._listeners.render];\n            listeners.forEach(listener => {\n                map.off('render', listener);\n            });\n        }\n    }\n    _resizeVideo() {\n        const { exportVideoWidth, resolution, disableBaseMap } = this.props;\n        this._setDevicePixelRatio(resolution[0] / exportVideoWidth);\n        if (disableBaseMap) {\n            return;\n        }\n        if (this.mapRef.current) {\n            const map = this.mapRef.current.getMap();\n            map.resize();\n        }\n    }\n    _setDevicePixelRatio(devicePixelRatio) {\n        /**\n         * TODO: This is the only way to trick mapbox into scaling its render buffer up\n         * to match the desired resolution. It is built to always fit it's render buffer size\n         * to it's CSS container size, which makes it impossible to make a small \"preview\" box.\n         *\n         * deck.gl has the useDevicePixels prop, which would have been used if it also changed mapbox.\n         * https://github.com/visgl/luma.gl/pull/1155 for background.\n         *\n         * Compare implementations of luma.gl to mapbox for context:\n         * https://github.com/visgl/luma.gl/blob/f622105e30c4dcda434f80ebc4680356003b12fa/modules/gltools/src/utils/device-pixels.js#L31\n         * https://github.com/mapbox/mapbox-gl-js/blob/3136a53235cf17b732e84c9945c4e85ba3369a93/src/ui/map.js#L2324\n         *\n         * In luma the scaler can be overriden by useDevicePixels.\n         *\n         * The workaround is to change window.devicePixelRatio while the component is mounted to scale up the render buffers of deck and mapbox.\n         * This is hacky and can cause issues in certain applications. We should try to produce a better solution.\n         */\n        // @ts-ignore\n        window.devicePixelRatio = devicePixelRatio;\n    }\n    _getContainer() {\n        const { exportVideoWidth, resolution } = this.props;\n        const aspectRatio = resolution[0] / resolution[1];\n        return { height: exportVideoWidth / aspectRatio, width: exportVideoWidth };\n    }\n    createLayers(beforeId) {\n        const { deckProps, mapData, viewState } = this.props;\n        // returns an arr of DeckGL layer objects\n        if (deckProps && deckProps.layers) {\n            return deckProps.layers;\n        }\n        const mapIndex = 0; // TODO: select mapIndex from redux\n        return createKeplerLayers(mapData, viewState, mapIndex, beforeId);\n    }\n    _onAfterRender() {\n        this.props.adapter.onAfterRender(() => {\n            this.forceUpdate();\n        }, this.props.disableBaseMap || this.mapRef.current.getMap().areTilesLoaded());\n    }\n    _onMapLoad() {\n        // Adds mapbox layer to modal\n        const map = this.mapRef.current.getMap();\n        map.on('render', this._onAfterRender);\n    }\n    render() {\n        const { rendering, saving, viewState, setViewState, adapter, durationMs, resolution, deckProps, mapProps, disableBaseMap, mapboxLayerBeforeId } = this.props;\n        const { mapStyle, mapboxAccessToken } = this.state;\n        const deck = this.deckRef.current;\n        const { width, height } = this._getContainer();\n        const doubleResolution = { width: resolution[0] * 2, height: resolution[1] * 2 };\n        const keplerLayers = this.createLayers(mapboxLayerBeforeId);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(DeckCanvas, { id: \"deck-canvas\", \"$width\": width, \"$height\": height }, disableBaseMap ? (React.createElement(DeckGL, { ref: ref => setRef(this.deckRef, ref?.deck), ...adapter.getProps({ deck, extraProps: { ...deckProps, layers: keplerLayers } }), ...this._getContainer() })) : (React.createElement(ReactMapGL\n            // style={doubleResolution}\n            , { \n                // style={doubleResolution}\n                ref: this.mapRef, style: { width, height }, antialias: true, ...mapProps, ...viewState, mapStyle: mapStyle, mapboxAccessToken: mapboxAccessToken, onLoad: this._onMapLoad, onMove: e => setViewState(e.viewState), projection: { name: 'mercator' } },\n                React.createElement(DeckGLOverlay, { ref: this.deckRef, glOptions: { stencil: true }, ...adapter.getProps({ deck, extraProps: { ...deckProps, layers: keplerLayers } }) })))),\n            rendering && (React.createElement(RenderingSpinner, { rendering: rendering, saving: saving, width: width, height: height, adapter: adapter, durationMs: durationMs }))));\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* global window */\nimport { WithKeplerUI } from \"../inject-kepler.js\";\nimport React, { useEffect, useState } from 'react';\nimport { LoaderWrapper, RenderingFeedbackContainer } from \"./styled-components.js\";\n/**\n * @param props\n * @returns React Component that gives user feedback after they click the \"Render\" button\n */\nexport function RenderingSpinner({ rendering, saving, width, height, adapter, durationMs }) {\n    const percentRendered = Math.floor((adapter.videoCapture.timeMs / durationMs) * 100).toFixed(0);\n    const showRenderingPercent = adapter.videoCapture.timeMs < durationMs && adapter.enabled;\n    const [message, setMessage] = useState('Saving...');\n    useEffect(() => {\n        let waitTimeout;\n        if (saving) {\n            // Appears after \"Saving...\" message has been showing for at least 2s\n            waitTimeout = window.setTimeout(() => setMessage('Saving...Hang Tight.'), 2000);\n        }\n        else {\n            setMessage('Saving...');\n            if (waitTimeout)\n                window.clearTimeout(waitTimeout);\n        }\n        return () => {\n            if (waitTimeout)\n                window.clearTimeout(waitTimeout);\n        };\n    }, [saving]);\n    return (React.createElement(WithKeplerUI, null, ({ LoadingSpinner }) => (React.createElement(LoaderWrapper, { className: \"loader-wrapper\", \"$width\": width, \"$height\": height, \"$rendering\": rendering },\n        React.createElement(LoadingSpinner, null),\n        React.createElement(RenderingFeedbackContainer, { className: \"rendering-feedback-container\", \"$height\": height },\n            showRenderingPercent && React.createElement(\"div\", { className: \"rendering-percent\" },\n                percentRendered,\n                \" %\"),\n            saving && React.createElement(\"div\", { className: \"saving-message\" }, message))))));\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { createSelector } from 'reselect';\n// Note: kepler type imports are commented out to avoid issues when hubble is installed by kepler.\n// import type {KeplerGlState} from '@kepler.gl/reducers';\n// import type {Layer as KeplerLayer} from '@kepler.gl/layers';\n// import type {SplitMap, SplitMapLayers} from '@kepler.gl/types';\n/**\n * Kepler Layer Creation\n * Forked from kepler.gl\n * https://github.com/keplergl/kepler.gl/blob/master/src/components/map-container.js\n */\nconst layersSelector = (state /* KeplerGlState*/) => state.visState.layers;\nconst layerDataSelector = (state /* KeplerGlState*/) => state.visState.layerData;\nconst getMapLayersFromSplitMaps = (splitMaps /* SplitMap[]*/, mapIndex) => {\n    return splitMaps[mapIndex || 0]?.layers;\n};\nconst splitMapSelector = (state /* KeplerGlState*/) => state.visState.splitMaps;\nconst splitMapIndexSelector = (_ /* KeplerGlState*/, mapIndex) => mapIndex;\nconst mapLayersSelector = createSelector(splitMapSelector, splitMapIndexSelector, getMapLayersFromSplitMaps);\n// const layerOrderSelector = state => state.visState.layerOrder;\nconst layersToRenderSelector = createSelector(layersSelector, layerDataSelector, mapLayersSelector, \n// {[id]: true \\ false}\n(layers, layerData, splitMapLayers) => layers.reduce((accu, layer /* KeplerLayer*/, idx) => ({\n    ...accu,\n    [layer.id]: layer.config.isVisible &&\n        layer.shouldRenderLayer(layerData[idx]) &&\n        _isVisibleSplitMapLayer(layer, splitMapLayers) &&\n        layer.overlayType === 'deckgl'\n}), {}));\nfunction _isVisibleSplitMapLayer(layer /* KeplerLayer*/, splitMapLayers /* SplitMapLayers*/) {\n    // Undefined splitMapLayers means there isn't a split map, so don't refer to it for layer visibility.\n    // If splitMapLayers is defined, it means there is a split map and the upstream caller has selected the map to render in video.\n    return !splitMapLayers || (splitMapLayers && splitMapLayers[layer.id]);\n}\nfunction _onLayerSetDomain(idx, colorDomain) {\n    // TODO: this isn't dispatched to the redux store yet.\n    // layerConfigChange(this.props.mapData.visState.layers[idx], {\n    //   colorDomain\n    // });\n}\nfunction renderLayer(overlays, idx, map /* KeplerGlState*/, viewState, isVisible, beforeId) {\n    const { visState: { datasets, layers, layerData, hoverInfo, clicked, interactionConfig, animationConfig }, mapState } = map;\n    const layer = layers[idx];\n    const data = layerData[idx];\n    const { gpuFilter } = datasets[layer.config.dataId] || {};\n    const objectHovered = clicked || hoverInfo;\n    const layerCallbacks = {\n        onSetLayerDomain: (val) => _onLayerSetDomain(idx, val)\n    };\n    // Skip layers that aren't supposed to be visible\n    if (!isVisible) {\n        return overlays;\n    }\n    const layerOverlay = layer\n        .renderLayer({\n        data,\n        gpuFilter,\n        idx,\n        interactionConfig,\n        layerCallbacks,\n        mapState: { ...mapState, ...viewState },\n        animationConfig,\n        objectHovered\n    })\n        .map((deckLayer) => deckLayer.clone({\n        pickable: false,\n        // @ts-expect-error MapboxOverlay layers are extended to include beforeId\n        beforeId,\n        visible: true\n    }));\n    return overlays.concat(layerOverlay || []);\n}\nexport function createKeplerLayers(map /* KeplerGlState*/, viewState, mapIndex = undefined, beforeId) {\n    const layersToRender = layersToRenderSelector(map, mapIndex);\n    // returns an arr of DeckGL layer objects\n    const { layerOrder, layerData, layers } = map.visState;\n    if (layerData && layerData.length) {\n        // Create same layer order as Kepler\n        const overlays = [...layerOrder]\n            .map(layerId => ({ layerId, visible: layersToRender[layerId] }))\n            .reduce((overlays, layerMeta, idx) => renderLayer(overlays, idx, map, viewState, layerMeta.visible, beforeId), []);\n        return overlays;\n    }\n    return [];\n}\n", "// Helper for covering all of the typescript cases for setting a ref\nexport function setRef(ref, value) {\n    if (!ref)\n        return;\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else {\n        ref.current = value;\n    }\n}\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport React, { useState, useRef, useMemo } from 'react';\nimport DeckGL from '@deck.gl/react/typed';\nimport BasicControls from \"./basic-controls.js\";\nimport { useDeckAdapter, useNextFrame } from \"../hooks.js\";\nexport const QuickAnimation = ({ initialViewState, animation, timecode, resolution = { width: 640, height: 480 }, formatConfigs = {}, deckProps = {} }) => {\n    const deckRef = useRef(null);\n    const deck = useMemo(() => deckRef.current && deckRef.current.deck, [deckRef.current]);\n    const [busy, setBusy] = useState(false);\n    const onNextFrame = useNextFrame();\n    const { adapter, layers, cameraFrame, setCameraFrame } = useDeckAdapter(animation, initialViewState);\n    const mergedFormatConfigs = {\n        webm: {\n            quality: 0.8\n        },\n        png: {\n            archive: 'zip'\n        },\n        jpeg: {\n            archive: 'zip',\n            quality: 0.8\n        },\n        gif: {\n            sampleInterval: 1,\n            width: resolution.width,\n            height: resolution.height\n        },\n        ...formatConfigs\n    };\n    const mergedTimecode = {\n        framerate: 30,\n        start: 0,\n        ...timecode\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { style: { position: 'relative' } },\n            React.createElement(DeckGL, { ref: deckRef, style: { position: 'unset' }, viewState: cameraFrame, onViewStateChange: ({ viewState: vs }) => {\n                    setCameraFrame(vs);\n                }, controller: true, width: resolution.width, height: resolution.height, layers: layers, ...adapter.getProps({ deck, onNextFrame, extraProps: deckProps }) })),\n        React.createElement(BasicControls, { adapter: adapter, busy: busy, setBusy: setBusy, formatConfigs: mergedFormatConfigs, timecode: mergedTimecode })));\n};\n", "// hubble.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { useState, useCallback, useMemo } from 'react';\nimport { DeckAdapter, DeckAnimation } from '@hubble.gl/core';\nexport function useNextFrame() {\n    const [, updateState] = useState({});\n    return useCallback(() => updateState({}), []);\n}\nexport function useDeckAdapter(deckAnimation, initialViewState = undefined) {\n    const [layers, setLayers] = useState([]);\n    const [cameraFrame, setCameraFrame] = useState(initialViewState);\n    const adapter = useMemo(() => {\n        const a = new DeckAdapter({});\n        deckAnimation.setOnLayersUpdate(setLayers);\n        if (initialViewState) {\n            deckAnimation.setOnCameraUpdate(setCameraFrame);\n        }\n        a.animationManager.attachAnimation(deckAnimation);\n        deckAnimation.draw();\n        return a;\n    }, []);\n    return { adapter, layers, cameraFrame, setCameraFrame };\n}\nexport function useDeckAnimation(params) {\n    return useMemo(() => new DeckAnimation(params), []);\n}\nexport function useHubbleGl({ deckRef, mapRef = undefined, deckAnimation, initialViewState = undefined }) {\n    const deck = useMemo(() => deckRef.current, [deckRef.current]);\n    const nextFrame = useNextFrame();\n    const { adapter, layers, cameraFrame, setCameraFrame } = useDeckAdapter(deckAnimation, initialViewState);\n    const onMapLoad = useCallback(() => {\n        if (mapRef) {\n            const map = mapRef.current.getMap();\n            map.on('render', () => adapter.onAfterRender(nextFrame, map.areTilesLoaded()));\n        }\n    }, [adapter, nextFrame]);\n    if (!mapRef) {\n        return {\n            adapter,\n            cameraFrame,\n            setCameraFrame,\n            mapProps: {},\n            deckProps: adapter.getProps({\n                deck,\n                onNextFrame: nextFrame,\n                extraProps: {\n                    layers\n                }\n            })\n        };\n    }\n    return {\n        adapter,\n        cameraFrame,\n        setCameraFrame,\n        onMapLoad,\n        mapProps: {\n            onLoad: onMapLoad,\n            preventStyleDiffing: true\n        },\n        deckProps: adapter.getProps({\n            deck,\n            extraProps: {\n                layers\n            }\n        })\n    };\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "styled", "React", "React", "import_styled_components", "import_react", "import_prop_types", "import_react", "React", "PropTypes", "React", "PropTypes", "import_react", "import_prop_types", "React", "PropTypes", "import_react", "import_prop_types", "React", "PropTypes", "import_react", "import_core", "import_styled_components", "styled", "React", "styled", "React", "import_react", "React", "import_react", "import_styled_components", "import_styled_components", "styled", "ButtonGroup", "styled", "React", "Modal", "import_react", "import_core", "import_react", "import_styled_components", "import_react", "import_styled_components", "import_react", "React", "Component", "import_react", "import_core", "transformTranslate", "React", "import_react", "React", "get", "React", "import_react", "import_typed", "import_lodash", "import_react", "React", "import_reselect", "overlays", "React", "isEqual", "DeckGL", "ReactMapGL", "React", "ButtonGroup", "import_constants", "ENCODERS", "React", "import_react", "import_typed", "import_react", "import_core", "React", "DeckGL"]
}
