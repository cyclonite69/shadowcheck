"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EffectTypeDropdownListFactory = EffectTypeDropdownListFactory;
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _classnames = _interopRequireDefault(require("classnames"));
var _dropdownList = require("../common/item-selector/dropdown-list");
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var DropdownListWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  ", ";\n  background-color: ", ";\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  padding: 24px 0 12px 0;\n  max-height: 430px;\n  justify-content: center;\n"])), function (props) {
  return props.theme.dropdownList;
}, function (props) {
  return props.theme.dropdownListBgd;
});
var StyledDropdownListItem = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  margin: 0px 4px 8px 4px;\n\n  &.disabled {\n    pointer-events: none;\n    opacity: 0.3;\n  }\n\n  &:hover {\n    cursor: pointer;\n    .effect-type-selector__item__label {\n      color: ", ";\n    }\n  }\n"])), function (props) {
  return props.theme.effectPanelTextMain;
});
function EffectTypeDropdownListFactory() {
  var EffectTypeDropdownList = function EffectTypeDropdownList(_ref) {
    var onOptionSelected = _ref.onOptionSelected,
      options = _ref.options,
      selectedItems = _ref.selectedItems,
      selectionIndex = _ref.selectionIndex,
      customListItemComponent = _ref.customListItemComponent;
    var onSelectOption = (0, _react.useCallback)(function (e, value) {
      e.preventDefault();
      onOptionSelected(value);
    }, [onOptionSelected]);
    var ListItemComponent = customListItemComponent;
    return /*#__PURE__*/_react["default"].createElement(DropdownListWrapper, {
      className: _dropdownList.classList.list
    }, options.map(function (value, i) {
      return /*#__PURE__*/_react["default"].createElement(StyledDropdownListItem, {
        className: (0, _classnames["default"])('effect-type-selector__item', {
          selected: selectedItems.find(function (it) {
            return it.type === value.type;
          }),
          hover: selectionIndex === i,
          disabled: value.disabled
        }),
        key: "".concat(value.type, "_").concat(i),
        onMouseDown: function onMouseDown(e) {
          return onSelectOption(e, value);
        },
        onClick: function onClick(e) {
          return onSelectOption(e, value);
        }
      }, /*#__PURE__*/_react["default"].createElement(ListItemComponent, {
        value: value,
        isTile: true
      }));
    }));
  };
  return EffectTypeDropdownList;
}
var _default = exports["default"] = EffectTypeDropdownListFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,