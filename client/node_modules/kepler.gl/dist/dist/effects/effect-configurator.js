"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledColorSelectorWrapper = exports.PanelLabelWrapper = void 0;
exports["default"] = EffectConfiguratorFactory;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _reactIntl = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react-intl");
var _constants = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/constants/src");
var _utils = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/utils/src");
var _rangeSlider = _interopRequireDefault(require("../common/range-slider"));
var _icons = require("../common/icons");
var _effectTimeConfigurator = _interopRequireDefault(require("./effect-time-configurator"));
var _compactColorPicker = _interopRequireDefault(require("./compact-color-picker"));
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      (0, _defineProperty2["default"])(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
var StyledEffectConfigurator = _styledComponents["default"].div.attrs({
  className: 'effect-panel__config'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  margin: ", ";\n  padding: ", ";\n"])), function (props) {
  return props.theme.effectConfiguratorMargin;
}, function (props) {
  return props.theme.effectConfiguratorPadding;
});
var PanelLabelWrapper = exports.PanelLabelWrapper = _styledComponents["default"].div.attrs({
  className: 'side-panel-panel__label-wrapper'
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  align-items: self-start;\n  margin-bottom: 11px;\n\n  .side-panel-panel__label {\n    margin-top: 2px;\n    margin-bottom: 0px;\n  }\n"])));
var StyledColorSelectorWrapper = exports.StyledColorSelectorWrapper = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  margin-right: 5px;\n  margin-left: 5px;\n  margin-bottom: 6px;\n  margin-top: 2px;\n"])));
var StyledVerticalSeparator = _styledComponents["default"].div(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  height: 1px;\n  background-color: ", ";\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-left: -20px;\n"])), function (props) {
  return props.theme.inputBgd;
});
var StyledWrapper = _styledComponents["default"].div(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ", "px;\n"])), function (props) {
  var _props$marginBottom;
  return (_props$marginBottom = props.marginBottom) !== null && _props$marginBottom !== void 0 ? _props$marginBottom : 9;
});
var StyledConfigSection = _styledComponents["default"].div(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-direction: column;\n"])));
var SectionTitle = _styledComponents["default"].div(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2["default"])(["\n  font-size: ", ";\n  color: ", ";\n  margin-bottom: 5px;\n  text-transform: capitalize;\n"])), function (props) {
  return props.theme.inputFontSize;
}, function (props) {
  return props.theme.effectPanelTextSecondary1;
});
var SectionSubTitle = _styledComponents["default"].div(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2["default"])(["\n  font-size: ", ";\n  color: ", ";\n  margin-bottom: 8px;\n  margin-left: 6px;\n"])), function (props) {
  return props.theme.inputFontSize;
}, function (props) {
  return props.theme.effectPanelTextSecondary2;
});
var StyleSliderWrapper = _styledComponents["default"].div(_templateObject9 || (_templateObject9 = (0, _taggedTemplateLiteral2["default"])(["\n  align-self: flex-start;\n  width: 199px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  .kg-range-slider__input {\n    height: 32px;\n    text-align: center;\n    padding: 3px 6px;\n  }\n  .kg-slider {\n    padding-left: 6px;\n  }\n  .kg-range-slider {\n    padding: 0px !important;\n  }\n"])));
var RegularOuterWrapper = _styledComponents["default"].div.attrs({
  className: 'effect-configurator__pp-section'
})(_templateObject10 || (_templateObject10 = (0, _taggedTemplateLiteral2["default"])(["\n  margin-bottom: 8px;\n"])));
var RegularSectionTitleWrapper = _styledComponents["default"].div.attrs({
  className: 'effect-configurator__pp-section-title'
})(_templateObject11 || (_templateObject11 = (0, _taggedTemplateLiteral2["default"])(["\n  font-size: ", ";\n  color: ", ";\n  text-transform: capitalize;\n  margin-bottom: -3px;\n"])), function (props) {
  return props.theme.inputFontSize;
}, function (props) {
  return props.theme.effectPanelTextSecondary1;
});
var RegularSliderWrapper = _styledComponents["default"].div.attrs({
  className: 'effect-configurator__pp-section-control'
})(_templateObject12 || (_templateObject12 = (0, _taggedTemplateLiteral2["default"])(["\n  height: 32px;\n  .kg-range-slider__input {\n    height: 32px;\n    text-align: center;\n    padding: 3px 6px;\n  }\n  .kg-slider {\n    padding-left: 6px;\n  }\n  .kg-range-slider {\n    padding: 0px !important;\n  }\n"])));
var COMMON_SLIDER_PROPS = {
  showInput: true,
  isRanged: false,
  step: 0.001,
  label: 'value'
};
EffectConfiguratorFactory.deps = [_rangeSlider["default"], _effectTimeConfigurator["default"]];
function EffectConfiguratorFactory(RangeSlider, EffectTimeConfigurator) {
  var ShadowEffectConfigurator = function ShadowEffectConfigurator(_ref) {
    var effect = _ref.effect,
      updateEffectConfig = _ref.updateEffectConfig;
    var parameters = effect.parameters,
      id = effect.id;
    var sliderProps = (0, _react.useMemo)(function () {
      var propNames = ['shadowIntensity', 'ambientLightIntensity', 'sunLightIntensity'];
      return propNames.map(function (propName) {
        return {
          value1: parameters[propName],
          range: [0, 1],
          value0: 0,
          onChange: function onChange(value, event) {
            updateEffectConfig(event, id, {
              parameters: (0, _defineProperty2["default"])({}, propName, value[1])
            });
          }
        };
      });
    }, [id, parameters, updateEffectConfig]);
    var onTimeParametersChanged = (0, _react.useCallback)(function (parameters) {
      updateEffectConfig(null, id, {
        parameters: _objectSpread(_objectSpread(_objectSpread({}, parameters.timestamp ? {
          timestamp: parameters.timestamp
        } : null), parameters.timezone ? {
          timezone: parameters.timezone
        } : null), parameters.timeMode ? {
          timeMode: parameters.timeMode
        } : null)
      });
    }, [id, updateEffectConfig]);
    var colorPickerProps = (0, _react.useMemo)(function () {
      var propNames = ['ambientLightColor', 'sunLightColor', 'shadowColor'];
      return propNames.map(function (propName) {
        return {
          colorSets: [{
            selectedColor: parameters[propName],
            setColor: function setColor(v) {
              return updateEffectConfig(null, id, {
                parameters: (0, _defineProperty2["default"])({}, propName, v)
              });
            }
          }]
        };
      });
    }, [id, parameters, updateEffectConfig]);
    return /*#__PURE__*/_react["default"].createElement(StyledEffectConfigurator, {
      key: effect.id
    }, /*#__PURE__*/_react["default"].createElement(PanelLabelWrapper, null, /*#__PURE__*/_react["default"].createElement(SectionTitle, null, 'Date & Time')), /*#__PURE__*/_react["default"].createElement(EffectTimeConfigurator, {
      timestamp: parameters.timestamp,
      timezone: parameters.timezone,
      timeMode: parameters.timeMode,
      onChange: onTimeParametersChanged
    }), /*#__PURE__*/_react["default"].createElement(StyledVerticalSeparator, null), /*#__PURE__*/_react["default"].createElement(StyledWrapper, {
      marginBottom: 0
    }, /*#__PURE__*/_react["default"].createElement(SectionTitle, null, 'Shadow')), /*#__PURE__*/_react["default"].createElement(StyledWrapper, {
      marginBottom: 16
    }, /*#__PURE__*/_react["default"].createElement(_compactColorPicker["default"], {
      label: 'Color',
      color: colorPickerProps[2].colorSets[0].selectedColor,
      onSetColor: colorPickerProps[2].colorSets[0].setColor,
      Icon: _icons.ArrowDownSmall
    }), /*#__PURE__*/_react["default"].createElement(StyledConfigSection, null, /*#__PURE__*/_react["default"].createElement(SectionSubTitle, null, "Intensity"), /*#__PURE__*/_react["default"].createElement(StyleSliderWrapper, null, /*#__PURE__*/_react["default"].createElement(RangeSlider, (0, _extends2["default"])({}, COMMON_SLIDER_PROPS, sliderProps[0]))))), /*#__PURE__*/_react["default"].createElement(StyledWrapper, {
      marginBottom: 0
    }, /*#__PURE__*/_react["default"].createElement(SectionTitle, null, 'Ambient light')), /*#__PURE__*/_react["default"].createElement(StyledWrapper, {
      marginBottom: 16
    }, /*#__PURE__*/_react["default"].createElement(_compactColorPicker["default"], {
      label: 'Color',
      color: colorPickerProps[0].colorSets[0].selectedColor,
      onSetColor: colorPickerProps[0].colorSets[0].setColor,
      Icon: _icons.ArrowDownSmall
    }), /*#__PURE__*/_react["default"].createElement(StyledConfigSection, null, /*#__PURE__*/_react["default"].createElement(SectionSubTitle, null, "Intensity"), /*#__PURE__*/_react["default"].createElement(StyleSliderWrapper, null, /*#__PURE__*/_react["default"].createElement(RangeSlider, (0, _extends2["default"])({}, COMMON_SLIDER_PROPS, sliderProps[1]))))), /*#__PURE__*/_react["default"].createElement(StyledWrapper, {
      marginBottom: 0
    }, /*#__PURE__*/_react["default"].createElement(SectionTitle, null, 'Sun light')), /*#__PURE__*/_react["default"].createElement(StyledWrapper, {
      marginBottom: 0
    }, /*#__PURE__*/_react["default"].createElement(_compactColorPicker["default"], {
      label: 'Color',
      color: colorPickerProps[1].colorSets[0].selectedColor,
      onSetColor: colorPickerProps[1].colorSets[0].setColor,
      Icon: _icons.ArrowDownSmall
    }), /*#__PURE__*/_react["default"].createElement(StyledConfigSection, null, /*#__PURE__*/_react["default"].createElement(SectionSubTitle, null, "Intensity"), /*#__PURE__*/_react["default"].createElement(StyleSliderWrapper, null, /*#__PURE__*/_react["default"].createElement(RangeSlider, (0, _extends2["default"])({}, COMMON_SLIDER_PROPS, sliderProps[2]))))));
  };
  var defaultUniforms = {};
  var PostProcessingEffectConfigurator = function PostProcessingEffectConfigurator(_ref2) {
    var _effect$deckEffect;
    var effect = _ref2.effect,
      updateEffectConfig = _ref2.updateEffectConfig;
    var uniforms = ((_effect$deckEffect = effect.deckEffect) === null || _effect$deckEffect === void 0 ? void 0 : _effect$deckEffect.module.uniforms) || defaultUniforms;
    var parameterDescriptions = effect.getParameterDescriptions();
    var parameters = effect.parameters,
      id = effect.id;
    var flatParameterDescriptions = (0, _react.useMemo)(function () {
      return parameterDescriptions.reduce(function (acc, description) {
        if (description.type === 'array') {
          // split arrays of controls into a separate controls for each component
          if (Array.isArray(description.defaultValue)) {
            description.defaultValue.forEach(function (_, index) {
              var _description$label;
              acc.push(_objectSpread(_objectSpread({}, description), {}, {
                index: index,
                label: (_description$label = description.label) === null || _description$label === void 0 ? void 0 : _description$label[index]
              }));
            });
          }
        } else {
          acc.push(description);
        }
        return acc;
      }, []);
    }, [parameterDescriptions]);
    var controls = (0, _react.useMemo)(function () {
      return flatParameterDescriptions.map(function (desc) {
        var paramName = desc.name;
        var uniform = uniforms[desc.name];
        if (!uniform && uniform !== 0 || uniform["private"]) {
          return null;
        }
        var prevValue = parameters[paramName];
        var label = desc.label === false ? false : desc.label || desc.name;

        // the uniform is [number, number] array
        if (uniform.length === 2) {
          return {
            label: label,
            value1: prevValue[desc.index || 0] || 0,
            range: [0, 1],
            value0: 0,
            onChange: function onChange(newValue, event) {
              updateEffectConfig(event, id, {
                parameters: (0, _defineProperty2["default"])({}, paramName, desc.index === 0 ? [newValue[1], prevValue[1]] : [prevValue[0], newValue[1]])
              });
            }
          };
        }
        // the uniform is a plain number without any description
        else if ((0, _utils.isNumber)(uniform)) {
          var _desc$min, _desc$max, _desc$min2;
          return {
            label: label,
            value1: prevValue !== null && prevValue !== void 0 ? prevValue : 0,
            range: [(_desc$min = desc.min) !== null && _desc$min !== void 0 ? _desc$min : 0, (_desc$max = desc.max) !== null && _desc$max !== void 0 ? _desc$max : 500],
            value0: (_desc$min2 = desc.min) !== null && _desc$min2 !== void 0 ? _desc$min2 : 0,
            onChange: function onChange(newValue, event) {
              updateEffectConfig(event, id, {
                parameters: (0, _defineProperty2["default"])({}, paramName, newValue[1])
              });
            }
          };
        }
        // the uniform description is {value: 0, min: 0, max: 1, ...}
        else if ((0, _utils.isNumber)(uniform.value)) {
          var _ref3, _ref4, _desc$min3, _ref5, _ref6, _desc$max2, _ref7, _ref8, _desc$min4;
          return {
            label: label,
            value1: prevValue || 0,
            range: [(_ref3 = (_ref4 = (_desc$min3 = desc.min) !== null && _desc$min3 !== void 0 ? _desc$min3 : uniform.min) !== null && _ref4 !== void 0 ? _ref4 : uniform.softMin) !== null && _ref3 !== void 0 ? _ref3 : 0, (_ref5 = (_ref6 = (_desc$max2 = desc.max) !== null && _desc$max2 !== void 0 ? _desc$max2 : uniform.max) !== null && _ref6 !== void 0 ? _ref6 : uniform.softMax) !== null && _ref5 !== void 0 ? _ref5 : 1],
            value0: (_ref7 = (_ref8 = (_desc$min4 = desc.min) !== null && _desc$min4 !== void 0 ? _desc$min4 : uniform.min) !== null && _ref8 !== void 0 ? _ref8 : uniform.softMin) !== null && _ref7 !== void 0 ? _ref7 : 0,
            onChange: function onChange(newValue, event) {
              updateEffectConfig(event, id, {
                parameters: (0, _defineProperty2["default"])({}, paramName, newValue[1])
              });
            }
          };
        }

        // ignore everything else for now
        return null;
      });
    }, [flatParameterDescriptions, id, parameters, updateEffectConfig, uniforms]);
    return /*#__PURE__*/_react["default"].createElement(StyledEffectConfigurator, {
      key: effect.id
    }, flatParameterDescriptions.map(function (desc, parameterIndex) {
      var control = controls[parameterIndex];
      if (!control) {
        return null;
      }
      return /*#__PURE__*/_react["default"].createElement(RegularOuterWrapper, {
        key: "".concat(effect.id, "-").concat(parameterIndex)
      }, control.label ? /*#__PURE__*/_react["default"].createElement(RegularSectionTitleWrapper, null, control.label) : null, /*#__PURE__*/_react["default"].createElement(RegularSliderWrapper, null, /*#__PURE__*/_react["default"].createElement(RangeSlider, (0, _extends2["default"])({
        key: parameterIndex
      }, COMMON_SLIDER_PROPS, control))));
    }));
  };
  var EffectConfigurator = function EffectConfigurator(_ref9) {
    var effect = _ref9.effect,
      updateEffectConfig = _ref9.updateEffectConfig;
    return effect.type === _constants.LIGHT_AND_SHADOW_EFFECT.type ? /*#__PURE__*/_react["default"].createElement(ShadowEffectConfigurator, {
      effect: effect,
      updateEffectConfig: updateEffectConfig
    }) : /*#__PURE__*/_react["default"].createElement(PostProcessingEffectConfigurator, {
      effect: effect,
      updateEffectConfig: updateEffectConfig
    });
  };
  return (0, _reactIntl.injectIntl)(EffectConfigurator);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,