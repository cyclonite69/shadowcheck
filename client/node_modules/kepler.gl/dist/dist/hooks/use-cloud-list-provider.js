"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCloudListProvider = exports.CloudListProvider = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _context = require("../context");
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

var CloudListProvider = exports.CloudListProvider = function CloudListProvider(_ref) {
  var children = _ref.children,
    _ref$providers = _ref.providers,
    providers = _ref$providers === void 0 ? [] : _ref$providers;
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    currentCloudProvider = _useState2[0],
    setCurrentCloudProvider = _useState2[1];
  var cloudProviders = (0, _react.useRef)(providers);
  var setProvider = (0, _react.useCallback)(function (provider) {
    setCurrentCloudProvider(currentCloudProvider === provider ? null : provider);
  }, [currentCloudProvider]);
  var value = (0, _react.useMemo)(function () {
    return {
      provider: currentCloudProvider,
      setProvider: setProvider,
      cloudProviders: cloudProviders.current
    };
  }, [currentCloudProvider, setProvider]);
  return /*#__PURE__*/_react["default"].createElement(_context.CloudProviderContext.Provider, {
    value: value
  }, children);
};

/**
 * this hook provides access the CloudList provider context
 */
var useCloudListProvider = exports.useCloudListProvider = function useCloudListProvider() {
  return (0, _react.useContext)(_context.CloudProviderContext);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfY29udGV4dCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZiIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIkNsb3VkTGlzdFByb3ZpZGVyIiwiZXhwb3J0cyIsIl9yZWYiLCJjaGlsZHJlbiIsIl9yZWYkcHJvdmlkZXJzIiwicHJvdmlkZXJzIiwiX3VzZVN0YXRlIiwidXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwiY3VycmVudENsb3VkUHJvdmlkZXIiLCJzZXRDdXJyZW50Q2xvdWRQcm92aWRlciIsImNsb3VkUHJvdmlkZXJzIiwidXNlUmVmIiwic2V0UHJvdmlkZXIiLCJ1c2VDYWxsYmFjayIsInByb3ZpZGVyIiwidmFsdWUiLCJ1c2VNZW1vIiwiY3VycmVudCIsImNyZWF0ZUVsZW1lbnQiLCJDbG91ZFByb3ZpZGVyQ29udGV4dCIsIlByb3ZpZGVyIiwidXNlQ2xvdWRMaXN0UHJvdmlkZXIiLCJ1c2VDb250ZXh0Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hvb2tzL3VzZS1jbG91ZC1saXN0LXByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHtQcm9wc1dpdGhDaGlsZHJlbiwgdXNlQ2FsbGJhY2ssIHVzZUNvbnRleHQsIHVzZU1lbW8sIHVzZVJlZiwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Q2xvdWRQcm92aWRlckNvbnRleHR9IGZyb20gJy4uL2NvbnRleHQnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAnQGtlcGxlci5nbC9jbG91ZC1wcm92aWRlcnMnO1xuXG50eXBlIENsb3VkTGlzdFByb3ZpZGVyUHJvcHMgPSBQcm9wc1dpdGhDaGlsZHJlbjx7XG4gIHByb3ZpZGVyczogUHJvdmlkZXJbXTtcbn0+O1xuXG5leHBvcnQgY29uc3QgQ2xvdWRMaXN0UHJvdmlkZXI6IFJlYWN0LkZDPENsb3VkTGlzdFByb3ZpZGVyUHJvcHM+ID0gKHtjaGlsZHJlbiwgcHJvdmlkZXJzID0gW119KSA9PiB7XG4gIGNvbnN0IFtjdXJyZW50Q2xvdWRQcm92aWRlciwgc2V0Q3VycmVudENsb3VkUHJvdmlkZXJdID0gdXNlU3RhdGU8UHJvdmlkZXIgfCBudWxsPihudWxsKTtcbiAgY29uc3QgY2xvdWRQcm92aWRlcnMgPSB1c2VSZWYocHJvdmlkZXJzKTtcblxuICBjb25zdCBzZXRQcm92aWRlciA9IHVzZUNhbGxiYWNrKFxuICAgIHByb3ZpZGVyID0+IHtcbiAgICAgIHNldEN1cnJlbnRDbG91ZFByb3ZpZGVyKGN1cnJlbnRDbG91ZFByb3ZpZGVyID09PSBwcm92aWRlciA/IG51bGwgOiBwcm92aWRlcik7XG4gICAgfSxcbiAgICBbY3VycmVudENsb3VkUHJvdmlkZXJdXG4gICk7XG5cbiAgY29uc3QgdmFsdWUgPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBwcm92aWRlcjogY3VycmVudENsb3VkUHJvdmlkZXIsXG4gICAgICBzZXRQcm92aWRlcixcbiAgICAgIGNsb3VkUHJvdmlkZXJzOiBjbG91ZFByb3ZpZGVycy5jdXJyZW50XG4gICAgfSksXG4gICAgW2N1cnJlbnRDbG91ZFByb3ZpZGVyLCBzZXRQcm92aWRlcl1cbiAgKTtcblxuICByZXR1cm4gPENsb3VkUHJvdmlkZXJDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvQ2xvdWRQcm92aWRlckNvbnRleHQuUHJvdmlkZXI+O1xufTtcblxuLyoqXG4gKiB0aGlzIGhvb2sgcHJvdmlkZXMgYWNjZXNzIHRoZSBDbG91ZExpc3QgcHJvdmlkZXIgY29udGV4dFxuICovXG5leHBvcnQgY29uc3QgdXNlQ2xvdWRMaXN0UHJvdmlkZXIgPSAoKSA9PiB1c2VDb250ZXh0KENsb3VkUHJvdmlkZXJDb250ZXh0KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsUUFBQSxHQUFBRCxPQUFBO0FBQWdELFNBQUFFLHlCQUFBQyxDQUFBO0VBQUEseUJBQUFDLE9BQUE7RUFBQSxJQUFBQyxDQUFBLE9BQUFELE9BQUE7SUFBQUUsQ0FBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUE7SUFBQSxPQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQTtFQUFBLEdBQUFGLENBQUE7QUFBQTtBQUFBLFNBQUFKLHdCQUFBSSxDQUFBLEVBQUFFLENBQUE7RUFBQSxLQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUE7RUFBQSxhQUFBQSxDQUFBLGdCQUFBSyxPQUFBLENBQUFMLENBQUEsMEJBQUFBLENBQUE7SUFBQSxXQUFBQTtFQUFBO0VBQUEsSUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBO0VBQUEsSUFBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQTtFQUFBLElBQUFRLENBQUE7TUFBQUMsU0FBQTtJQUFBO0lBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUE7RUFBQSxTQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUE7SUFBQSxJQUFBRyxDQUFBLEdBQUFQLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBYixDQUFBLEVBQUFjLENBQUE7SUFBQUcsQ0FBQSxLQUFBQSxDQUFBLENBQUFWLEdBQUEsSUFBQVUsQ0FBQSxDQUFBQyxHQUFBLElBQUFQLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUcsQ0FBQSxJQUFBVCxDQUFBLENBQUFNLENBQUEsSUFBQWQsQ0FBQSxDQUFBYyxDQUFBO0VBQUE7RUFBQSxPQUFBTixDQUFBLGNBQUFSLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBQUE7QUFKaEQ7QUFDQTs7QUFVTyxJQUFNVyxpQkFBbUQsR0FBQUMsT0FBQSxDQUFBRCxpQkFBQSxHQUFHLFNBQXREQSxpQkFBbURBLENBQUFFLElBQUEsRUFBbUM7RUFBQSxJQUE5QkMsUUFBUSxHQUFBRCxJQUFBLENBQVJDLFFBQVE7SUFBQUMsY0FBQSxHQUFBRixJQUFBLENBQUVHLFNBQVM7SUFBVEEsU0FBUyxHQUFBRCxjQUFBLGNBQUcsRUFBRSxHQUFBQSxjQUFBO0VBQzNGLElBQUFFLFNBQUEsR0FBd0QsSUFBQTlCLE1BQUEsQ0FBQStCLFFBQVEsRUFBa0IsSUFBSSxDQUFDO0lBQUFDLFVBQUEsT0FBQUMsZUFBQSxhQUFBSCxTQUFBO0lBQWhGSSxvQkFBb0IsR0FBQUYsVUFBQTtJQUFFRyx1QkFBdUIsR0FBQUgsVUFBQTtFQUNwRCxJQUFNSSxjQUFjLEdBQUcsSUFBQXBDLE1BQUEsQ0FBQXFDLE1BQU0sRUFBQ1IsU0FBUyxDQUFDO0VBRXhDLElBQU1TLFdBQVcsR0FBRyxJQUFBdEMsTUFBQSxDQUFBdUMsV0FBVyxFQUM3QixVQUFBQyxRQUFRLEVBQUk7SUFDVkwsdUJBQXVCLENBQUNELG9CQUFvQixLQUFLTSxRQUFRLEdBQUcsSUFBSSxHQUFHQSxRQUFRLENBQUM7RUFDOUUsQ0FBQyxFQUNELENBQUNOLG9CQUFvQixDQUN2QixDQUFDO0VBRUQsSUFBTU8sS0FBSyxHQUFHLElBQUF6QyxNQUFBLENBQUEwQyxPQUFPLEVBQ25CO0lBQUEsT0FBTztNQUNMRixRQUFRLEVBQUVOLG9CQUFvQjtNQUM5QkksV0FBVyxFQUFYQSxXQUFXO01BQ1hGLGNBQWMsRUFBRUEsY0FBYyxDQUFDTztJQUNqQyxDQUFDO0VBQUEsQ0FBQyxFQUNGLENBQUNULG9CQUFvQixFQUFFSSxXQUFXLENBQ3BDLENBQUM7RUFFRCxvQkFBT3RDLE1BQUEsWUFBQTRDLGFBQUEsQ0FBQ3pDLFFBQUEsQ0FBQTBDLG9CQUFvQixDQUFDQyxRQUFRO0lBQUNMLEtBQUssRUFBRUE7RUFBTSxHQUFFZCxRQUF3QyxDQUFDO0FBQ2hHLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ08sSUFBTW9CLG9CQUFvQixHQUFBdEIsT0FBQSxDQUFBc0Isb0JBQUEsR0FBRyxTQUF2QkEsb0JBQW9CQSxDQUFBO0VBQUEsT0FBUyxJQUFBL0MsTUFBQSxDQUFBZ0QsVUFBVSxFQUFDN0MsUUFBQSxDQUFBMEMsb0JBQW9CLENBQUM7QUFBQSIsImlnbm9yZUxpc3QiOltdfQ==