"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _icons = require("../common/icons");
var _fieldSelector = _interopRequireDefault(require("../common/field-selector"));
var _styledComponents2 = require("../common/styled-components");
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var TOP_SECTION_HEIGHT = '36px';
var TopSectionWrapper = _styledComponents["default"].div.attrs({
  className: 'time-widget--top'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  color: ", ";\n  height: ", ";\n\n  .bottom-widget__y-axis {\n    flex-grow: 1;\n    margin-left: 20px;\n  }\n\n  .bottom-widget__field-select {\n    width: 160px;\n    display: inline-block;\n\n    .item-selector__dropdown {\n      background: transparent;\n      padding: 4px 10px 4px 4px;\n      border-color: transparent;\n\n      &:active,\n      &:focus,\n      &.focus,\n      &.active {\n        background: transparent;\n        border-color: transparent;\n      }\n    }\n\n    .item-selector__dropdown:hover {\n      background: transparent;\n      border-color: transparent;\n\n      .item-selector__dropdown__value {\n        color: ", ";\n      }\n    }\n  }\n\n  .animation-control__speed-control {\n    margin-right: -12px;\n\n    .animation-control__speed-slider {\n      right: calc(0% - 48px);\n    }\n  }\n"])), function (props) {
  return props.theme.labelColor;
}, TOP_SECTION_HEIGHT, function (props) {
  return props.hoverColor ? props.theme[props.hoverColor] : props.theme.textColorHl;
});
var StyledTitle = (0, _styledComponents["default"])(_styledComponents2.CenterFlexbox)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  flex-grow: 0;\n  color: ", ";\n  margin-right: 10px;\n\n  .bottom-widget__icon {\n    margin-right: 6px;\n  }\n  .bottom-widget__icon.speed {\n    margin-right: 0;\n  }\n"])), function (props) {
  return props.theme.textColor;
});
var StyledCenterBox = (0, _styledComponents["default"])(_styledComponents2.CenterFlexbox)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  > div {\n    margin-left: 4px;\n  }\n"])));
TimeWidgetTopFactory.deps = [_fieldSelector["default"]];
function TimeWidgetTopFactory(FieldSelector) {
  var TimeWidgetTop = function TimeWidgetTop(_ref) {
    var filter = _ref.filter,
      readOnly = _ref.readOnly,
      datasets = _ref.datasets,
      setFilterPlot = _ref.setFilterPlot,
      onClose = _ref.onClose,
      isMinified = _ref.isMinified,
      onToggleMinify = _ref.onToggleMinify;
    var yAxisFields = (0, _react.useMemo)(function () {
      return ((datasets[filter.dataId[0]] || {}).fields || []).filter(function (f) {
        return f.type === 'integer' || f.type === 'real';
      });
    }, [datasets, filter.dataId]);
    var _setFilterPlotYAxis = (0, _react.useCallback)(function (value) {
      return setFilterPlot({
        yAxis: value
      });
    }, [setFilterPlot]);
    return /*#__PURE__*/_react["default"].createElement(TopSectionWrapper, null, /*#__PURE__*/_react["default"].createElement(StyledTitle, {
      className: "bottom-widget__field"
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents2.CenterFlexbox, {
      className: "bottom-widget__icon"
    }, /*#__PURE__*/_react["default"].createElement(_icons.Clock, {
      height: "15px"
    })), /*#__PURE__*/_react["default"].createElement(_styledComponents2.SelectTextBold, null, filter.name)), !isMinified ? /*#__PURE__*/_react["default"].createElement(StyledTitle, {
      className: "bottom-widget__y-axis"
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents2.CenterFlexbox, {
      className: "bottom-widget__icon"
    }, /*#__PURE__*/_react["default"].createElement(_icons.LineChart, {
      height: "15px"
    })), /*#__PURE__*/_react["default"].createElement("div", {
      className: "bottom-widget__field-select"
    }, /*#__PURE__*/_react["default"].createElement(FieldSelector, {
      fields: yAxisFields,
      placement: "top",
      id: "selected-time-widget-field",
      value: filter.yAxis ? filter.yAxis.name : null,
      onSelect: _setFilterPlotYAxis,
      placeholder: "placeholder.yAxis",
      erasable: true,
      showToken: false
    }))) : null, /*#__PURE__*/_react["default"].createElement(StyledCenterBox, null, /*#__PURE__*/_react["default"].createElement(_styledComponents2.IconRoundSmall, null, isMinified ? /*#__PURE__*/_react["default"].createElement(_icons.ArrowUp, {
      height: "12px",
      onClick: onToggleMinify
    }) : /*#__PURE__*/_react["default"].createElement(_icons.ArrowDown, {
      height: "12px",
      onClick: onToggleMinify
    })), !readOnly ? /*#__PURE__*/_react["default"].createElement(_styledComponents2.IconRoundSmall, null, /*#__PURE__*/_react["default"].createElement(_icons.Close, {
      height: "12px",
      onClick: onClose
    })) : null));
  };
  return TimeWidgetTop;
}
var _default = exports["default"] = TimeWidgetTopFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfaWNvbnMiLCJfZmllbGRTZWxlY3RvciIsIl9zdHlsZWRDb21wb25lbnRzMiIsIl90ZW1wbGF0ZU9iamVjdCIsIl90ZW1wbGF0ZU9iamVjdDIiLCJfdGVtcGxhdGVPYmplY3QzIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiVE9QX1NFQ1RJT05fSEVJR0hUIiwiVG9wU2VjdGlvbldyYXBwZXIiLCJkaXYiLCJhdHRycyIsImNsYXNzTmFtZSIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwyIiwicHJvcHMiLCJ0aGVtZSIsImxhYmVsQ29sb3IiLCJob3ZlckNvbG9yIiwidGV4dENvbG9ySGwiLCJTdHlsZWRUaXRsZSIsIkNlbnRlckZsZXhib3giLCJ0ZXh0Q29sb3IiLCJTdHlsZWRDZW50ZXJCb3giLCJUaW1lV2lkZ2V0VG9wRmFjdG9yeSIsImRlcHMiLCJGaWVsZFNlbGVjdG9yIiwiVGltZVdpZGdldFRvcCIsIl9yZWYiLCJmaWx0ZXIiLCJyZWFkT25seSIsImRhdGFzZXRzIiwic2V0RmlsdGVyUGxvdCIsIm9uQ2xvc2UiLCJpc01pbmlmaWVkIiwib25Ub2dnbGVNaW5pZnkiLCJ5QXhpc0ZpZWxkcyIsInVzZU1lbW8iLCJkYXRhSWQiLCJmaWVsZHMiLCJmIiwidHlwZSIsIl9zZXRGaWx0ZXJQbG90WUF4aXMiLCJ1c2VDYWxsYmFjayIsInZhbHVlIiwieUF4aXMiLCJjcmVhdGVFbGVtZW50IiwiQ2xvY2siLCJoZWlnaHQiLCJTZWxlY3RUZXh0Qm9sZCIsIm5hbWUiLCJMaW5lQ2hhcnQiLCJwbGFjZW1lbnQiLCJpZCIsIm9uU2VsZWN0IiwicGxhY2Vob2xkZXIiLCJlcmFzYWJsZSIsInNob3dUb2tlbiIsIkljb25Sb3VuZFNtYWxsIiwiQXJyb3dVcCIsIm9uQ2xpY2siLCJBcnJvd0Rvd24iLCJDbG9zZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9maWx0ZXJzL3RpbWUtd2lkZ2V0LXRvcC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7dXNlQ2FsbGJhY2ssIHVzZU1lbW99IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHtJU3R5bGVkQ29tcG9uZW50fSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQge0Nsb2NrLCBDbG9zZSwgTGluZUNoYXJ0LCBBcnJvd0Rvd24sIEFycm93VXB9IGZyb20gJy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQgRmllbGRTZWxlY3RvckZhY3RvcnkgZnJvbSAnLi4vY29tbW9uL2ZpZWxkLXNlbGVjdG9yJztcbmltcG9ydCB7U2VsZWN0VGV4dEJvbGQsIEljb25Sb3VuZFNtYWxsLCBDZW50ZXJGbGV4Ym94fSBmcm9tICcuLi9jb21tb24vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtUaW1lV2lkZ2V0VG9wUHJvcHMsIFRvcFNlY3Rpb25XcmFwcGVyUHJvcHN9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHtGaWVsZH0gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5cbmNvbnN0IFRPUF9TRUNUSU9OX0hFSUdIVCA9ICczNnB4JztcblxuY29uc3QgVG9wU2VjdGlvbldyYXBwZXI6IElTdHlsZWRDb21wb25lbnQ8J3dlYicsIFRvcFNlY3Rpb25XcmFwcGVyUHJvcHM+ID0gc3R5bGVkLmRpdi5hdHRycyh7XG4gIGNsYXNzTmFtZTogJ3RpbWUtd2lkZ2V0LS10b3AnXG59KTxUb3BTZWN0aW9uV3JhcHBlclByb3BzPmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubGFiZWxDb2xvcn07XG4gIGhlaWdodDogJHtUT1BfU0VDVElPTl9IRUlHSFR9O1xuXG4gIC5ib3R0b20td2lkZ2V0X195LWF4aXMge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgfVxuXG4gIC5ib3R0b20td2lkZ2V0X19maWVsZC1zZWxlY3Qge1xuICAgIHdpZHRoOiAxNjBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cbiAgICAuaXRlbS1zZWxlY3Rvcl9fZHJvcGRvd24ge1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBwYWRkaW5nOiA0cHggMTBweCA0cHggNHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcblxuICAgICAgJjphY3RpdmUsXG4gICAgICAmOmZvY3VzLFxuICAgICAgJi5mb2N1cyxcbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLml0ZW0tc2VsZWN0b3JfX2Ryb3Bkb3duOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcblxuICAgICAgLml0ZW0tc2VsZWN0b3JfX2Ryb3Bkb3duX192YWx1ZSB7XG4gICAgICAgIGNvbG9yOiAke3Byb3BzID0+XG4gICAgICAgICAgcHJvcHMuaG92ZXJDb2xvciA/IHByb3BzLnRoZW1lW3Byb3BzLmhvdmVyQ29sb3JdIDogcHJvcHMudGhlbWUudGV4dENvbG9ySGx9O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5hbmltYXRpb24tY29udHJvbF9fc3BlZWQtY29udHJvbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtMTJweDtcblxuICAgIC5hbmltYXRpb24tY29udHJvbF9fc3BlZWQtc2xpZGVyIHtcbiAgICAgIHJpZ2h0OiBjYWxjKDAlIC0gNDhweCk7XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBTdHlsZWRUaXRsZSA9IHN0eWxlZChDZW50ZXJGbGV4Ym94KWBcbiAgZmxleC1ncm93OiAwO1xuICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3J9O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG5cbiAgLmJvdHRvbS13aWRnZXRfX2ljb24ge1xuICAgIG1hcmdpbi1yaWdodDogNnB4O1xuICB9XG4gIC5ib3R0b20td2lkZ2V0X19pY29uLnNwZWVkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IFN0eWxlZENlbnRlckJveCA9IHN0eWxlZChDZW50ZXJGbGV4Ym94KWBcbiAgPiBkaXYge1xuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gIH1cbmA7XG5cblRpbWVXaWRnZXRUb3BGYWN0b3J5LmRlcHMgPSBbRmllbGRTZWxlY3RvckZhY3RvcnldO1xuZnVuY3Rpb24gVGltZVdpZGdldFRvcEZhY3RvcnkoRmllbGRTZWxlY3RvcjogUmV0dXJuVHlwZTx0eXBlb2YgRmllbGRTZWxlY3RvckZhY3Rvcnk+KSB7XG4gIGNvbnN0IFRpbWVXaWRnZXRUb3A6IFJlYWN0LkZDPFRpbWVXaWRnZXRUb3BQcm9wcz4gPSAoe1xuICAgIGZpbHRlcixcbiAgICByZWFkT25seSxcbiAgICBkYXRhc2V0cyxcbiAgICBzZXRGaWx0ZXJQbG90LFxuICAgIG9uQ2xvc2UsXG4gICAgaXNNaW5pZmllZCxcbiAgICBvblRvZ2dsZU1pbmlmeVxuICB9KSA9PiB7XG4gICAgY29uc3QgeUF4aXNGaWVsZHMgPSB1c2VNZW1vKFxuICAgICAgKCkgPT5cbiAgICAgICAgKChkYXRhc2V0c1tmaWx0ZXIuZGF0YUlkWzBdXSB8fCB7fSkuZmllbGRzIHx8IFtdKS5maWx0ZXIoXG4gICAgICAgICAgKGY6IEZpZWxkKSA9PiBmLnR5cGUgPT09ICdpbnRlZ2VyJyB8fCBmLnR5cGUgPT09ICdyZWFsJ1xuICAgICAgICApLFxuICAgICAgW2RhdGFzZXRzLCBmaWx0ZXIuZGF0YUlkXVxuICAgICk7XG4gICAgY29uc3QgX3NldEZpbHRlclBsb3RZQXhpcyA9IHVzZUNhbGxiYWNrKFxuICAgICAgdmFsdWUgPT4gc2V0RmlsdGVyUGxvdCh7eUF4aXM6IHZhbHVlfSksXG4gICAgICBbc2V0RmlsdGVyUGxvdF1cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUb3BTZWN0aW9uV3JhcHBlcj5cbiAgICAgICAgPFN0eWxlZFRpdGxlIGNsYXNzTmFtZT1cImJvdHRvbS13aWRnZXRfX2ZpZWxkXCI+XG4gICAgICAgICAgPENlbnRlckZsZXhib3ggY2xhc3NOYW1lPVwiYm90dG9tLXdpZGdldF9faWNvblwiPlxuICAgICAgICAgICAgPENsb2NrIGhlaWdodD1cIjE1cHhcIiAvPlxuICAgICAgICAgIDwvQ2VudGVyRmxleGJveD5cbiAgICAgICAgICA8U2VsZWN0VGV4dEJvbGQ+e2ZpbHRlci5uYW1lfTwvU2VsZWN0VGV4dEJvbGQ+XG4gICAgICAgIDwvU3R5bGVkVGl0bGU+XG4gICAgICAgIHshaXNNaW5pZmllZCA/IChcbiAgICAgICAgICA8U3R5bGVkVGl0bGUgY2xhc3NOYW1lPVwiYm90dG9tLXdpZGdldF9feS1heGlzXCI+XG4gICAgICAgICAgICA8Q2VudGVyRmxleGJveCBjbGFzc05hbWU9XCJib3R0b20td2lkZ2V0X19pY29uXCI+XG4gICAgICAgICAgICAgIDxMaW5lQ2hhcnQgaGVpZ2h0PVwiMTVweFwiIC8+XG4gICAgICAgICAgICA8L0NlbnRlckZsZXhib3g+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvdHRvbS13aWRnZXRfX2ZpZWxkLXNlbGVjdFwiPlxuICAgICAgICAgICAgICA8RmllbGRTZWxlY3RvclxuICAgICAgICAgICAgICAgIGZpZWxkcz17eUF4aXNGaWVsZHN9XG4gICAgICAgICAgICAgICAgcGxhY2VtZW50PVwidG9wXCJcbiAgICAgICAgICAgICAgICBpZD1cInNlbGVjdGVkLXRpbWUtd2lkZ2V0LWZpZWxkXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17ZmlsdGVyLnlBeGlzID8gZmlsdGVyLnlBeGlzLm5hbWUgOiBudWxsfVxuICAgICAgICAgICAgICAgIG9uU2VsZWN0PXtfc2V0RmlsdGVyUGxvdFlBeGlzfVxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwicGxhY2Vob2xkZXIueUF4aXNcIlxuICAgICAgICAgICAgICAgIGVyYXNhYmxlXG4gICAgICAgICAgICAgICAgc2hvd1Rva2VuPXtmYWxzZX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvU3R5bGVkVGl0bGU+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgICA8U3R5bGVkQ2VudGVyQm94PlxuICAgICAgICAgIDxJY29uUm91bmRTbWFsbD5cbiAgICAgICAgICAgIHtpc01pbmlmaWVkID8gKFxuICAgICAgICAgICAgICA8QXJyb3dVcCBoZWlnaHQ9XCIxMnB4XCIgb25DbGljaz17b25Ub2dnbGVNaW5pZnl9IC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8QXJyb3dEb3duIGhlaWdodD1cIjEycHhcIiBvbkNsaWNrPXtvblRvZ2dsZU1pbmlmeX0gLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9JY29uUm91bmRTbWFsbD5cbiAgICAgICAgICB7IXJlYWRPbmx5ID8gKFxuICAgICAgICAgICAgPEljb25Sb3VuZFNtYWxsPlxuICAgICAgICAgICAgICA8Q2xvc2UgaGVpZ2h0PVwiMTJweFwiIG9uQ2xpY2s9e29uQ2xvc2V9IC8+XG4gICAgICAgICAgICA8L0ljb25Sb3VuZFNtYWxsPlxuICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICA8L1N0eWxlZENlbnRlckJveD5cbiAgICAgIDwvVG9wU2VjdGlvbldyYXBwZXI+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIFRpbWVXaWRnZXRUb3A7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRpbWVXaWRnZXRUb3BGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksY0FBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssa0JBQUEsR0FBQUwsT0FBQTtBQUEwRixJQUFBTSxlQUFBLEVBQUFDLGdCQUFBLEVBQUFDLGdCQUFBLEVBUDFGO0FBQ0E7QUFBQSxTQUFBQyx5QkFBQUMsQ0FBQTtFQUFBLHlCQUFBQyxPQUFBO0VBQUEsSUFBQUMsQ0FBQSxPQUFBRCxPQUFBO0lBQUFFLENBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBO0lBQUEsT0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUE7RUFBQSxHQUFBRixDQUFBO0FBQUE7QUFBQSxTQUFBWCx3QkFBQVcsQ0FBQSxFQUFBRSxDQUFBO0VBQUEsS0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBO0VBQUEsYUFBQUEsQ0FBQSxnQkFBQUssT0FBQSxDQUFBTCxDQUFBLDBCQUFBQSxDQUFBO0lBQUEsV0FBQUE7RUFBQTtFQUFBLElBQUFHLENBQUEsR0FBQUosd0JBQUEsQ0FBQUcsQ0FBQTtFQUFBLElBQUFDLENBQUEsSUFBQUEsQ0FBQSxDQUFBRyxHQUFBLENBQUFOLENB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