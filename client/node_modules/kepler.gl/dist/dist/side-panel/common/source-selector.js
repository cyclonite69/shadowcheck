"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _sourceDataSelectorContent = _interopRequireDefault(require("./source-data-selector-content"));
var _fieldSelector = _interopRequireDefault(require("../../common/field-selector"));
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var StyledSourceContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: #1c2233;\n"])));
SourceSelectorFactory.deps = [_sourceDataSelectorContent["default"], _fieldSelector["default"]];
function SourceSelectorFactory(SourceDataSelectorContent, FieldSelector) {
  var StyledSourceDataSelectorContent = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n    margin-bottom: 2px;\n\n    .item-selector__dropdown {\n      border-top-left-radius: 2px;\n      border-top-right-radius: 2px;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  "])));
  var StyledFieldSelector = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n    .item-selector__dropdown {\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n      border-bottom-left-radius: 2px;\n      border-bottom-right-radius: 2px;\n    }\n  "])));
  var SourceSelector = function SourceSelector(_ref) {
    var className = _ref.className,
      datasets = _ref.datasets,
      dataId = _ref.dataId,
      disabled = _ref.disabled,
      onSelectDataset = _ref.onSelectDataset,
      fields = _ref.fields,
      fieldValue = _ref.fieldValue,
      onFieldSelector = _ref.onFieldSelector,
      inputTheme = _ref.inputTheme;
    var datasetFields = (0, _react.useMemo)(function () {
      var _datasets$dataId;
      return fields || ((_datasets$dataId = datasets[dataId]) === null || _datasets$dataId === void 0 ? void 0 : _datasets$dataId.fields);
    }, [dataId, datasets, fields]);
    return /*#__PURE__*/_react["default"].createElement(StyledSourceContainer, {
      className: className
    }, /*#__PURE__*/_react["default"].createElement(StyledSourceDataSelectorContent, null, /*#__PURE__*/_react["default"].createElement(SourceDataSelectorContent, {
      inputTheme: inputTheme,
      datasets: datasets,
      disabled: disabled,
      dataId: dataId,
      onSelect: onSelectDataset
    })), dataId && /*#__PURE__*/_react["default"].createElement(StyledFieldSelector, null, /*#__PURE__*/_react["default"].createElement(FieldSelector, {
      inputTheme: inputTheme,
      fields: datasetFields,
      value: fieldValue,
      erasable: false,
      onSelect: onFieldSelector
    })));
  };
  SourceSelector.displayName = 'SourceSelector';
  return SourceSelector;
}
var _default = exports["default"] = SourceSelectorFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,