"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = SourceDataSelectorFactory;
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _localization = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _styledComponents = require("../../common/styled-components");
var _sourceDataSelectorContent = _interopRequireDefault(require("./source-data-selector-content"));
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

SourceDataSelectorFactory.deps = [_sourceDataSelectorContent["default"]];
function SourceDataSelectorFactory(DataSourceSelectorContent) {
  var SourceDataSelector = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var dataId = _ref.dataId,
      datasets = _ref.datasets,
      disabled = _ref.disabled,
      onSelect = _ref.onSelect,
      _ref$defaultValue = _ref.defaultValue,
      defaultValue = _ref$defaultValue === void 0 ? 'Select A Dataset' : _ref$defaultValue,
      inputTheme = _ref.inputTheme;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents.SidePanelSection, {
      className: "data-source-selector"
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'misc.dataSource'
    })), /*#__PURE__*/_react["default"].createElement(DataSourceSelectorContent, {
      inputTheme: inputTheme,
      datasets: datasets,
      dataId: dataId,
      onSelect: onSelect,
      defaultValue: defaultValue,
      disabled: disabled
    }));
  });
  SourceDataSelector.displayName = 'SourceDataSelector';
  return SourceDataSelector;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9sb2NhbGl6YXRpb24iLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9zb3VyY2VEYXRhU2VsZWN0b3JDb250ZW50IiwiU291cmNlRGF0YVNlbGVjdG9yRmFjdG9yeSIsImRlcHMiLCJEYXRhU291cmNlU2VsZWN0b3JDb250ZW50IiwiU291cmNlRGF0YVNlbGVjdG9yIiwibWVtbyIsIl9yZWYiLCJkYXRhSWQiLCJkYXRhc2V0cyIsImRpc2FibGVkIiwib25TZWxlY3QiLCJfcmVmJGRlZmF1bHRWYWx1ZSIsImRlZmF1bHRWYWx1ZSIsImlucHV0VGhlbWUiLCJjcmVhdGVFbGVtZW50IiwiU2lkZVBhbmVsU2VjdGlvbiIsImNsYXNzTmFtZSIsIlBhbmVsTGFiZWwiLCJGb3JtYXR0ZWRNZXNzYWdlIiwiaWQiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2NvbW1vbi9zb3VyY2UtZGF0YS1zZWxlY3Rvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5cbmltcG9ydCB7UGFuZWxMYWJlbCwgU2lkZVBhbmVsU2VjdGlvbn0gZnJvbSAnLi4vLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBTb3VyY2VEYXRhU2VsZWN0b3JDb250ZW50RmFjdG9yeSBmcm9tICcuL3NvdXJjZS1kYXRhLXNlbGVjdG9yLWNvbnRlbnQnO1xuaW1wb3J0IHtTb3VyY2VEYXRhU2VsZWN0b3JQcm9wc30gZnJvbSAnLi90eXBlcyc7XG5cblNvdXJjZURhdGFTZWxlY3RvckZhY3RvcnkuZGVwcyA9IFtTb3VyY2VEYXRhU2VsZWN0b3JDb250ZW50RmFjdG9yeV07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNvdXJjZURhdGFTZWxlY3RvckZhY3RvcnkoXG4gIERhdGFTb3VyY2VTZWxlY3RvckNvbnRlbnQ6IFJldHVyblR5cGU8dHlwZW9mIFNvdXJjZURhdGFTZWxlY3RvckNvbnRlbnRGYWN0b3J5PlxuKTogUmVhY3QuRkM8U291cmNlRGF0YVNlbGVjdG9yUHJvcHM+IHtcbiAgY29uc3QgU291cmNlRGF0YVNlbGVjdG9yOiBSZWFjdC5GQzxTb3VyY2VEYXRhU2VsZWN0b3JQcm9wcz4gPSBSZWFjdC5tZW1vKFxuICAgICh7XG4gICAgICBkYXRhSWQsXG4gICAgICBkYXRhc2V0cyxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgb25TZWxlY3QsXG4gICAgICBkZWZhdWx0VmFsdWUgPSAnU2VsZWN0IEEgRGF0YXNldCcsXG4gICAgICBpbnB1dFRoZW1lXG4gICAgfTogU291cmNlRGF0YVNlbGVjdG9yUHJvcHMpID0+IChcbiAgICAgIDxTaWRlUGFuZWxTZWN0aW9uIGNsYXNzTmFtZT1cImRhdGEtc291cmNlLXNlbGVjdG9yXCI+XG4gICAgICAgIDxQYW5lbExhYmVsPlxuICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXsnbWlzYy5kYXRhU291cmNlJ30gLz5cbiAgICAgICAgPC9QYW5lbExhYmVsPlxuICAgICAgICA8RGF0YVNvdXJjZVNlbGVjdG9yQ29udGVudFxuICAgICAgICAgIGlucHV0VGhlbWU9e2lucHV0VGhlbWV9XG4gICAgICAgICAgZGF0YXNldHM9e2RhdGFzZXRzfVxuICAgICAgICAgIGRhdGFJZD17ZGF0YUlkfVxuICAgICAgICAgIG9uU2VsZWN0PXtvblNlbGVjdH1cbiAgICAgICAgICBkZWZhdWx0VmFsdWU9e2RlZmF1bHRWYWx1ZX1cbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgIC8+XG4gICAgICA8L1NpZGVQYW5lbFNlY3Rpb24+XG4gICAgKVxuICApO1xuXG4gIFNvdXJjZURhdGFTZWxlY3Rvci5kaXNwbGF5TmFtZSA9ICdTb3VyY2VEYXRhU2VsZWN0b3InO1xuICByZXR1cm4gU291cmNlRGF0YVNlbGVjdG9yO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsYUFBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsaUJBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLDBCQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFSQTtBQUNBOztBQVVBSSx5QkFBeUIsQ0FBQ0MsSUFBSSxHQUFHLENBQUNGLDBCQUFBLFdBQWdDLENBQUM7QUFFcEQsU0FBU0MseUJBQXlCQSxDQUMvQ0UseUJBQThFLEVBQzNDO0VBQ25DLElBQU1DLGtCQUFxRCxnQkFBR1QsTUFBQSxXQUFLLENBQUNVLElBQUksQ0FDdEUsVUFBQUMsSUFBQTtJQUFBLElBQ0VDLE1BQU0sR0FBQUQsSUFBQSxDQUFOQyxNQUFNO01BQ05DLFFBQVEsR0FBQUYsSUFBQSxDQUFSRSxRQUFRO01BQ1JDLFFBQVEsR0FBQUgsSUFBQSxDQUFSRyxRQUFRO01BQ1JDLFFBQVEsR0FBQUosSUFBQSxDQUFSSSxRQUFRO01BQUFDLGlCQUFBLEdBQUFMLElBQUEsQ0FDUk0sWUFBWTtNQUFaQSxZQUFZLEdBQUFELGlCQUFBLGNBQUcsa0JBQWtCLEdBQUFBLGlCQUFBO01BQ2pDRSxVQUFVLEdBQUFQLElBQUEsQ0FBVk8sVUFBVTtJQUFBLG9CQUVWbEIsTUFBQSxZQUFBbUIsYUFBQSxDQUFDZixpQkFBQSxDQUFBZ0IsZ0JBQWdCO01BQUNDLFNBQVMsRUFBQztJQUFzQixnQkFDaERyQixNQUFBLFlBQUFtQixhQUFBLENBQUNmLGlCQUFBLENBQUFrQixVQUFVLHFCQUNUdEIsTUFBQSxZQUFBbUIsYUFBQSxDQUFDaEIsYUFBQSxDQUFBb0IsZ0JBQWdCO01BQUNDLEVBQUUsRUFBRTtJQUFrQixDQUFFLENBQ2hDLENBQUMsZUFDYnhCLE1BQUEsWUFBQW1CLGFBQUEsQ0FBQ1gseUJBQXlCO01BQ3hCVSxVQUFVLEVBQUVBLFVBQVc7TUFDdkJMLFFBQVEsRUFBRUEsUUFBUztNQUNuQkQsTUFBTSxFQUFFQSxNQUFPO01BQ2ZHLFFBQVEsRUFBRUEsUUFBUztNQUNuQkUsWUFBWSxFQUFFQSxZQUFhO01BQzNCSCxRQUFRLEVBQUVBO0lBQVMsQ0FDcEIsQ0FDZSxDQUFDO0VBQUEsQ0FFdkIsQ0FBQztFQUVETCxrQkFBa0IsQ0FBQ2dCLFdBQVcsR0FBRyxvQkFBb0I7RUFDckQsT0FBT2hCLGtCQUFrQjtBQUMzQiIsImlnbm9yZUxpc3QiOltdfQ==