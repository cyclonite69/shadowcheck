"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddDataButtonFactory = AddDataButtonFactory;
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _localization = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _icons = require("../../common/icons");
var _styledComponents2 = require("../../common/styled-components");
var _sourceDataCatalog = _interopRequireDefault(require("../common/source-data-catalog"));
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledDatasetTitle = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  line-height: ", ";\n  font-weight: 400;\n  letter-spacing: 1.25px;\n  color: ", ";\n  font-size: 11px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ", ";\n"])), function (props) {
  return props.theme.sidePanelTitleLineHeight;
}, function (props) {
  return props.theme.subtextColor;
}, function (props) {
  return props.$showDatasetList ? '16px' : '4px';
});
var StyledDatasetSection = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  border-bottom: 1px solid ", ";\n"])), function (props) {
  return props.theme.sidePanelBorderColor;
});
function AddDataButtonFactory() {
  var AddDataButton = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var onClick = _ref.onClick,
      isInactive = _ref.isInactive;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents2.Button, {
      className: "add-data-button",
      onClick: onClick,
      inactive: !isInactive,
      width: "105px",
      secondary: true
    }, /*#__PURE__*/_react["default"].createElement(_icons.Add, {
      height: "12px"
    }), /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'layerManager.addData'
    }));
  });
  AddDataButton.displayName = 'AddDataButton';
  return AddDataButton;
}
DatasetSectionFactory.deps = [_sourceDataCatalog["default"], AddDataButtonFactory];
function DatasetSectionFactory(SourceDataCatalog, AddDataButton) {
  var DatasetSection = function DatasetSection(props) {
    var datasets = props.datasets,
      showDatasetTable = props.showDatasetTable,
      updateTableColor = props.updateTableColor,
      showDeleteDataset = props.showDeleteDataset,
      removeDataset = props.removeDataset,
      showDatasetList = props.showDatasetList,
      showAddDataModal = props.showAddDataModal;
    var datasetCount = Object.keys(datasets).length;
    return /*#__PURE__*/_react["default"].createElement(StyledDatasetSection, null, /*#__PURE__*/_react["default"].createElement(StyledDatasetTitle, {
      $showDatasetList: showDatasetList
    }, /*#__PURE__*/_react["default"].createElement("span", null, "Datasets", datasetCount ? "(".concat(datasetCount, ")") : ''), /*#__PURE__*/_react["default"].createElement(AddDataButton, {
      onClick: showAddDataModal,
      isInactive: !datasetCount
    })), showDatasetList && /*#__PURE__*/_react["default"].createElement(SourceDataCatalog, {
      datasets: datasets,
      showDatasetTable: showDatasetTable,
      updateTableColor: updateTableColor,
      removeDataset: removeDataset,
      showDeleteDataset: showDeleteDataset
    }));
  };
  return DatasetSection;
}
var _default = exports["default"] = DatasetSectionFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX2xvY2FsaXphdGlvbiIsIl9pY29ucyIsIl9zdHlsZWRDb21wb25lbnRzMiIsIl9zb3VyY2VEYXRhQ2F0YWxvZyIsIl90ZW1wbGF0ZU9iamVjdCIsIl90ZW1wbGF0ZU9iamVjdDIiLCJTdHlsZWREYXRhc2V0VGl0bGUiLCJkaXYiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsMiIsInByb3BzIiwidGhlbWUiLCJzaWRlUGFuZWxUaXRsZUxpbmVIZWlnaHQiLCJzdWJ0ZXh0Q29sb3IiLCIkc2hvd0RhdGFzZXRMaXN0IiwiU3R5bGVkRGF0YXNldFNlY3Rpb24iLCJzaWRlUGFuZWxCb3JkZXJDb2xvciIsIkFkZERhdGFCdXR0b25GYWN0b3J5IiwiQWRkRGF0YUJ1dHRvbiIsIm1lbW8iLCJfcmVmIiwib25DbGljayIsImlzSW5hY3RpdmUiLCJjcmVhdGVFbGVtZW50IiwiQnV0dG9uIiwiY2xhc3NOYW1lIiwiaW5hY3RpdmUiLCJ3aWR0aCIsInNlY29uZGFyeSIsIkFkZCIsImhlaWdodCIsIkZvcm1hdHRlZE1lc3NhZ2UiLCJpZCIsImRpc3BsYXlOYW1lIiwiRGF0YXNldFNlY3Rpb25GYWN0b3J5IiwiZGVwcyIsIlNvdXJjZURhdGFDYXRhbG9nIiwiRGF0YXNldFNlY3Rpb24iLCJkYXRhc2V0cyIsInNob3dEYXRhc2V0VGFibGUiLCJ1cGRhdGVUYWJsZUNvbG9yIiwic2hvd0RlbGV0ZURhdGFzZXQiLCJyZW1vdmVEYXRhc2V0Iiwic2hvd0RhdGFzZXRMaXN0Iiwic2hvd0FkZERhdGFNb2RhbCIsImRhdGFzZXRDb3VudCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJjb25jYXQiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2lkZS1wYW5lbC9sYXllci1wYW5lbC9kYXRhc2V0LXNlY3Rpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7Rm9ybWF0dGVkTWVzc2FnZX0gZnJvbSAnQGtlcGxlci5nbC9sb2NhbGl6YXRpb24nO1xuaW1wb3J0IHtBZGR9IGZyb20gJy4uLy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSAnLi4vLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeSBmcm9tICcuLi9jb21tb24vc291cmNlLWRhdGEtY2F0YWxvZyc7XG5pbXBvcnQge1VJU3RhdGVBY3Rpb25zLCBWaXNTdGF0ZUFjdGlvbnMsIEFjdGlvbkhhbmRsZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvYWN0aW9ucyc7XG5pbXBvcnQge0RhdGFzZXRzfSBmcm9tICdAa2VwbGVyLmdsL3RhYmxlJztcblxudHlwZSBBZGREYXRhQnV0dG9uUHJvcHMgPSB7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIGlzSW5hY3RpdmU6IGJvb2xlYW47XG59O1xuXG50eXBlIERhdGFzZXRTZWN0aW9uUHJvcHMgPSB7XG4gIGRhdGFzZXRzOiBEYXRhc2V0cztcbiAgc2hvd0RhdGFzZXRMaXN0PzogYm9vbGVhbjtcbiAgc2hvd0RlbGV0ZURhdGFzZXQ/OiBib29sZWFuO1xuICBzaG93RGF0YXNldFRhYmxlOiBBY3Rpb25IYW5kbGVyPHR5cGVvZiBWaXNTdGF0ZUFjdGlvbnMuc2hvd0RhdGFzZXRUYWJsZT47XG4gIHVwZGF0ZVRhYmxlQ29sb3I6IEFjdGlvbkhhbmRsZXI8dHlwZW9mIFZpc1N0YXRlQWN0aW9ucy51cGRhdGVUYWJsZUNvbG9yPjtcbiAgcmVtb3ZlRGF0YXNldDogQWN0aW9uSGFuZGxlcjx0eXBlb2YgVUlTdGF0ZUFjdGlvbnMub3BlbkRlbGV0ZU1vZGFsPjtcbiAgc2hvd0FkZERhdGFNb2RhbDogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IFN0eWxlZERhdGFzZXRUaXRsZSA9IHN0eWxlZC5kaXY8eyRzaG93RGF0YXNldExpc3Q/OiBib29sZWFufT5gXG4gIGxpbmUtaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnNpZGVQYW5lbFRpdGxlTGluZUhlaWdodH07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAxLjI1cHg7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnN1YnRleHRDb2xvcn07XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAke3Byb3BzID0+IChwcm9wcy4kc2hvd0RhdGFzZXRMaXN0ID8gJzE2cHgnIDogJzRweCcpfTtcbmA7XG5cbmNvbnN0IFN0eWxlZERhdGFzZXRTZWN0aW9uID0gc3R5bGVkLmRpdmBcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuc2lkZVBhbmVsQm9yZGVyQ29sb3J9O1xuYDtcblxuZXhwb3J0IGZ1bmN0aW9uIEFkZERhdGFCdXR0b25GYWN0b3J5KCkge1xuICBjb25zdCBBZGREYXRhQnV0dG9uOiBSZWFjdC5GQzxBZGREYXRhQnV0dG9uUHJvcHM+ID0gUmVhY3QubWVtbygoe29uQ2xpY2ssIGlzSW5hY3RpdmV9KSA9PiAoXG4gICAgPEJ1dHRvblxuICAgICAgY2xhc3NOYW1lPVwiYWRkLWRhdGEtYnV0dG9uXCJcbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICBpbmFjdGl2ZT17IWlzSW5hY3RpdmV9XG4gICAgICB3aWR0aD1cIjEwNXB4XCJcbiAgICAgIHNlY29uZGFyeVxuICAgID5cbiAgICAgIDxBZGQgaGVpZ2h0PVwiMTJweFwiIC8+XG4gICAgICA8Rm9ybWF0dGVkTWVzc2FnZSBpZD17J2xheWVyTWFuYWdlci5hZGREYXRhJ30gLz5cbiAgICA8L0J1dHRvbj5cbiAgKSk7XG4gIEFkZERhdGFCdXR0b24uZGlzcGxheU5hbWUgPSAnQWRkRGF0YUJ1dHRvbic7XG4gIHJldHVybiBBZGREYXRhQnV0dG9uO1xufVxuXG5EYXRhc2V0U2VjdGlvbkZhY3RvcnkuZGVwcyA9IFtTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3RvcnksIEFkZERhdGFCdXR0b25GYWN0b3J5XTtcblxuZnVuY3Rpb24gRGF0YXNldFNlY3Rpb25GYWN0b3J5KFxuICBTb3VyY2VEYXRhQ2F0YWxvZzogUmV0dXJuVHlwZTx0eXBlb2YgU291cmNlRGF0YUNhdGFsb2dGYWN0b3J5PixcbiAgQWRkRGF0YUJ1dHRvbjogUmV0dXJuVHlwZTx0eXBlb2YgQWRkRGF0YUJ1dHRvbkZhY3Rvcnk+XG4pIHtcbiAgY29uc3QgRGF0YXNldFNlY3Rpb246IFJlYWN0LkZDPERhdGFzZXRTZWN0aW9uUHJvcHM+ID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGRhdGFzZXRzLFxuICAgICAgc2hvd0RhdGFzZXRUYWJsZSxcbiAgICAgIHVwZGF0ZVRhYmxlQ29sb3IsXG4gICAgICBzaG93RGVsZXRlRGF0YXNldCxcbiAgICAgIHJlbW92ZURhdGFzZXQsXG4gICAgICBzaG93RGF0YXNldExpc3QsXG4gICAgICBzaG93QWRkRGF0YU1vZGFsXG4gICAgfSA9IHByb3BzO1xuICAgIGNvbnN0IGRhdGFzZXRDb3VudCA9IE9iamVjdC5rZXlzKGRhdGFzZXRzKS5sZW5ndGg7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0eWxlZERhdGFzZXRTZWN0aW9uPlxuICAgICAgICA8U3R5bGVkRGF0YXNldFRpdGxlICRzaG93RGF0YXNldExpc3Q9e3Nob3dEYXRhc2V0TGlzdH0+XG4gICAgICAgICAgPHNwYW4+RGF0YXNldHN7ZGF0YXNldENvdW50ID8gYCgke2RhdGFzZXRDb3VudH0pYCA6ICcnfTwvc3Bhbj5cbiAgICAgICAgICA8QWRkRGF0YUJ1dHRvbiBvbkNsaWNrPXtzaG93QWRkRGF0YU1vZGFsfSBpc0luYWN0aXZlPXshZGF0YXNldENvdW50fSAvPlxuICAgICAgICA8L1N0eWxlZERhdGFzZXRUaXRsZT5cbiAgICAgICAge3Nob3dEYXRhc2V0TGlzdCAmJiAoXG4gICAgICAgICAgPFNvdXJjZURhdGFDYXRhbG9nXG4gICAgICAgICAgICBkYXRhc2V0cz17ZGF0YXNldHN9XG4gICAgICAgICAgICBzaG93RGF0YXNldFRhYmxlPXtzaG93RGF0YXNldFRhYmxlfVxuICAgICAgICAgICAgdXBkYXRlVGFibGVDb2xvcj17dXBkYXRlVGFibGVDb2xvcn1cbiAgICAgICAgICAgIHJlbW92ZURhdGFzZXQ9e3JlbW92ZURhdGFzZXR9XG4gICAgICAgICAgICBzaG93RGVsZXRlRGF0YXNldD17c2hvd0RlbGV0ZURhdGFzZXR9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgIDwvU3R5bGVkRGF0YXNldFNlY3Rpb24+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gRGF0YXNldFNlY3Rpb247XG59XG5cbmV4cG9ydCBkZWZhdWx0IERhdGFzZXRTZWN0aW9uRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsaUJBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLGFBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLE1BQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLGtCQUFBLEdBQUFKLE9BQUE7QUFFQSxJQUFBSyxrQkFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQXFFLElBQUFNLGVBQUEsRUFBQUMsZ0JBQUEsRUFUckU7QUFDQTtBQTJCQSxJQUFNQyxrQkFBa0IsR0FBR1AsaUJBQUEsV0FBTSxDQUFDUSxHQUFHLENBQUFILGVBQUEsS0FBQUEsZUFBQSxPQUFBSSx1QkFBQSxzT0FDcEIsVUFBQUMsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0MsS0FBSyxDQUFDQyx3QkFBd0I7QUFBQSxHQUduRCxVQUFBRixLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNFLFlBQVk7QUFBQSxHQUt6QixVQUFBSCxLQUFLO0VBQUEsT0FBS0EsS0FBSyxDQUFDSSxnQkFBZ0IsR0FBRyxNQUFNLEdBQUcsS0FBSztBQUFBLENBQUMsQ0FDcEU7QUFFRCxJQUFNQyxvQkFBb0IsR0FBR2YsaUJBQUEsV0FBTSxDQUFDUSxHQUFHLENBQUFGLGdCQUFBLEtBQUFBLGdCQUFBLE9BQUFHLHVCQUFBLHlEQUNWLFVBQUFDLEtBQUs7RUFBQSxPQUFJQSxLQUFLLENBQUNDLEtBQUssQ0FBQ0ssb0JBQW9CO0FBQUEsRUFDckU7QUFFTSxTQUFTQyxvQkFBb0JBLENBQUEsRUFBRztFQUNyQyxJQUFNQyxhQUEyQyxnQkFBR3JCLE1BQUEsV0FBSyxDQUFDc0IsSUFBSSxDQUFDLFVBQUFDLElBQUE7SUFBQSxJQUFFQyxPQUFPLEdBQUFELElBQUEsQ0FBUEMsT0FBTztNQUFFQyxVQUFVLEdBQUFGLElBQUEsQ0FBVkUsVUFBVTtJQUFBLG9CQUNsRnpCLE1BQUEsWUFBQTBCLGFBQUEsQ0FBQ3BCLGtCQUFBLENBQUFxQixNQUFNO01BQ0xDLFNBQVMsRUFBQyxpQkFBaUI7TUFDM0JKLE9BQU8sRUFBRUEsT0FBUTtNQUNqQkssUUFBUSxFQUFFLENBQUNKLFVBQVc7TUFDdEJLLEtBQUssRUFBQyxPQUFPO01BQ2JDLFNBQVM7SUFBQSxnQkFFVC9CLE1BQUEsWUFBQTBCLGFBQUEsQ0FBQ3JCLE1BQUEsQ0FBQTJCLEdBQUc7TUFBQ0MsTUFBTSxFQUFDO0lBQU0sQ0FBRSxDQUFDLGVBQ3JCakMsTUFBQSxZQUFBMEIsYUFBQSxDQUFDdEIsYUFBQSxDQUFBOEIsZ0JBQWdCO01BQUNDLEVBQUUsRUFBRTtJQUF1QixDQUFFLENBQ3pDLENBQUM7RUFBQSxDQUNWLENBQUM7RUFDRmQsYUFBYSxDQUFDZSxXQUFXLEdBQUcsZUFBZTtFQUMzQyxPQUFPZixhQUFhO0FBQ3RCO0FBRUFnQixxQkFBcUIsQ0FBQ0MsSUFBSSxHQUFHLENBQUMvQixrQkFBQSxXQUF3QixFQUFFYSxvQkFBb0IsQ0FBQztBQUU3RSxTQUFTaUIscUJBQXFCQSxDQUM1QkUsaUJBQThELEVBQzlEbEIsYUFBc0QsRUFDdEQ7RUFDQSxJQUFNbUIsY0FBNkMsR0FBRyxTQUFoREEsY0FBNkNBLENBQUczQixLQUFLLEVBQUk7SUFDN0QsSUFDRTRCLFFBQVEsR0FPTjVCLEtBQUssQ0FQUDRCLFFBQVE7TUFDUkMsZ0JBQWdCLEdBTWQ3QixLQUFLLENBTlA2QixnQkFBZ0I7TUFDaEJDLGdCQUFnQixHQUtkOUIsS0FBSyxDQUxQOEIsZ0JBQWdCO01BQ2hCQyxpQkFBaUIsR0FJZi9CLEtBQUssQ0FKUCtCLGlCQUFpQjtNQUNqQkMsYUFBYSxHQUdYaEMsS0FBSyxDQUhQZ0MsYUFBYTtNQUNiQyxlQUFlLEdBRWJqQyxLQUFLLENBRlBpQyxlQUFlO01BQ2ZDLGdCQUFnQixHQUNkbEMsS0FBSyxDQURQa0MsZ0JBQWdCO0lBRWxCLElBQU1DLFlBQVksR0FBR0MsTUFBTSxDQUFDQyxJQUFJLENBQUNULFFBQVEsQ0FBQyxDQUFDVSxNQUFNO0lBRWpELG9CQUNFbkQsTUFBQSxZQUFBMEIsYUFBQSxDQUFDUixvQkFBb0IscUJBQ25CbEIsTUFBQSxZQUFBMEIsYUFBQSxDQUFDaEIsa0JBQWtCO01BQUNPLGdCQUFnQixFQUFFNkI7SUFBZ0IsZ0JBQ3BEOUMsTUFBQSxZQUFBMEIsYUFBQSxlQUFNLFVBQVEsRUFBQ3NCLFlBQVksT0FBQUksTUFBQSxDQUFPSixZQUFZLFNBQU0sRUFBUyxDQUFDLGVBQzlEaEQsTUFBQSxZQUFBMEIsYUFBQSxDQUFDTCxhQUFhO01BQUNHLE9BQU8sRUFBRXVCLGdCQUFpQjtNQUFDdEIsVUFBVSxFQUFFLENBQUN1QjtJQUFhLENBQUUsQ0FDcEQsQ0FBQyxFQUNwQkYsZUFBZSxpQkFDZDlDLE1BQUEsWUFBQTBCLGFBQUEsQ0FBQ2EsaUJBQWlCO01BQ2hCRSxRQUFRLEVBQUVBLFFBQVM7TUFDbkJDLGdCQUFnQixFQUFFQSxnQkFBaUI7TUFDbkNDLGdCQUFnQixFQUFFQSxnQkFBaUI7TUFDbkNFLGFBQWEsRUFBRUEsYUFBYztNQUM3QkQsaUJBQWlCLEVBQUVBO0lBQWtCLENBQ3RDLENBRWlCLENBQUM7RUFFM0IsQ0FBQztFQUVELE9BQU9KLGNBQWM7QUFDdkI7QUFBQyxJQUFBYSxRQUFBLEdBQUFDLE9BQUEsY0FFY2pCLHFCQUFxQiIsImlnbm9yZUxpc3QiOltdfQ==