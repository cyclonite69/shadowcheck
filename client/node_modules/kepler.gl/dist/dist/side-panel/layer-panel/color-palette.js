"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _classnames = _interopRequireDefault(require("classnames"));
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var PaletteWrapper = _styledComponents["default"].div.attrs({
  className: 'color-range-palette__inner'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  border-radius: 2px;\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  justify-content: space-between;\n  overflow: hidden;\n"])));
var PaletteContainer = _styledComponents["default"].div.attrs(function (props) {
  return {
    className: (0, _classnames["default"])('color-range-palette', props.className)
  };
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-grow: 1;\n  border-width: ", ";\n  border-style: solid;\n  border-color: ", ";\n  padding: ", ";\n  border-radius: 4px;\n"])), function (props) {
  return props.$isColorChart ? '0px' : '1px';
}, function (props) {
  return props.$isSelected ? '#FFFFFF' : 'transparent';
}, function (props) {
  return props.$isColorChart ? '0px' : '4px';
});
var StyledColorBlock = _styledComponents["default"].div.attrs({
  className: 'color-range-palette__block'
})(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  flex-grow: 1;\n"])));
var ColorPalette = function ColorPalette(_ref) {
  var _ref$colors = _ref.colors,
    colors = _ref$colors === void 0 ? [] : _ref$colors,
    _ref$height = _ref.height,
    height = _ref$height === void 0 ? 10 : _ref$height,
    _ref$colorWidths = _ref.colorWidths,
    colorWidths = _ref$colorWidths === void 0 ? null : _ref$colorWidths,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? '' : _ref$className,
    _ref$isSelected = _ref.isSelected,
    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,
    _ref$isReversed = _ref.isReversed,
    isReversed = _ref$isReversed === void 0 ? false : _ref$isReversed;
  var paletteWrapperStyle = (0, _react.useMemo)(function () {
    return {
      height: height,
      transform: "scale(".concat(isReversed ? -1 : 1, ", 1)")
    };
  }, [height, isReversed]);
  return /*#__PURE__*/_react["default"].createElement(PaletteContainer, {
    className: className,
    $isSelected: isSelected,
    $isColorChart: Boolean(colorWidths)
  }, /*#__PURE__*/_react["default"].createElement(PaletteWrapper, {
    style: paletteWrapperStyle
  }, colors.map(function (color, index) {
    return colorWidths && colorWidths[index] ? /*#__PURE__*/_react["default"].createElement(StyledColorBlock, {
      key: "".concat(color, "-").concat(index),
      style: {
        backgroundColor: String(color),
        width: colorWidths[index]
      }
    }) : /*#__PURE__*/_react["default"].createElement(StyledColorBlock, {
      key: "".concat(color, "-").concat(index),
      style: {
        backgroundColor: String(color)
      }
    });
  })));
};
var _default = exports["default"] = ColorPalette;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,