"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _reactIntl = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react-intl");
var _utils = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/utils/src");
var _fieldSelector = _interopRequireDefault(require("../../common/field-selector"));
var _infoHelper = _interopRequireDefault(require("../../common/info-helper"));
var _styledComponents = require("../../common/styled-components");
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

VisConfigByFieldSelectorFactory.deps = [_infoHelper["default"], _fieldSelector["default"]];
function VisConfigByFieldSelectorFactory(InfoHelper, FieldSelector) {
  var VisConfigByFieldSelector = function VisConfigByFieldSelector(_ref) {
    var id = _ref.id,
      property = _ref.property,
      selectedField = _ref.selectedField,
      description = _ref.description,
      label = _ref.label,
      intl = _ref.intl,
      updateField = _ref.updateField,
      fields = _ref.fields,
      placeholder = _ref.placeholder,
      disabled = _ref.disabled;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents.SidePanelSection, {
      disabled: disabled
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.PanelLabelWrapper, null, /*#__PURE__*/_react["default"].createElement(_styledComponents.PanelLabel, null, label && /*#__PURE__*/_react["default"].createElement(_reactIntl.FormattedMessage, {
      id: label
    }) || /*#__PURE__*/_react["default"].createElement(_reactIntl.FormattedMessage, {
      id: "layer.propertyBasedOn",
      values: {
        property: intl.formatMessage({
          id: "property.".concat((0, _utils.camelize)(property)),
          defaultMessage: property
        })
      }
    })), description && /*#__PURE__*/_react["default"].createElement(InfoHelper, {
      description: description,
      property: property,
      id: "".concat(id, "-").concat(property)
    })), /*#__PURE__*/_react["default"].createElement(FieldSelector, {
      fields: fields,
      value: selectedField && selectedField.name,
      placeholder: placeholder,
      onSelect: function onSelect(items) {
        return updateField(Array.isArray(items) ? items === null || items === void 0 ? void 0 : items[0] : items);
      },
      disabled: disabled,
      erasable: true
    }));
  };
  return (0, _reactIntl.injectIntl)(VisConfigByFieldSelector);
}
var _default = exports["default"] = VisConfigByFieldSelectorFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdEludGwiLCJfdXRpbHMiLCJfZmllbGRTZWxlY3RvciIsIl9pbmZvSGVscGVyIiwiX3N0eWxlZENvbXBvbmVudHMiLCJWaXNDb25maWdCeUZpZWxkU2VsZWN0b3JGYWN0b3J5IiwiZGVwcyIsIkluZm9IZWxwZXIiLCJGaWVsZFNlbGVjdG9yIiwiVmlzQ29uZmlnQnlGaWVsZFNlbGVjdG9yIiwiX3JlZiIsImlkIiwicHJvcGVydHkiLCJzZWxlY3RlZEZpZWxkIiwiZGVzY3JpcHRpb24iLCJsYWJlbCIsImludGwiLCJ1cGRhdGVGaWVsZCIsImZpZWxkcyIsInBsYWNlaG9sZGVyIiwiZGlzYWJsZWQiLCJjcmVhdGVFbGVtZW50IiwiU2lkZVBhbmVsU2VjdGlvbiIsIlBhbmVsTGFiZWxXcmFwcGVyIiwiUGFuZWxMYWJlbCIsIkZvcm1hdHRlZE1lc3NhZ2UiLCJ2YWx1ZXMiLCJmb3JtYXRNZXNzYWdlIiwiY29uY2F0IiwiY2FtZWxpemUiLCJkZWZhdWx0TWVzc2FnZSIsInZhbHVlIiwibmFtZSIsIm9uU2VsZWN0IiwiaXRlbXMiLCJBcnJheSIsImlzQXJyYXkiLCJlcmFzYWJsZSIsImluamVjdEludGwiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2lkZS1wYW5lbC9sYXllci1wYW5lbC92aXMtY29uZmlnLWJ5LWZpZWxkLXNlbGVjdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlLCBpbmplY3RJbnRsLCBXcmFwcGVkQ29tcG9uZW50UHJvcHN9IGZyb20gJ3JlYWN0LWludGwnO1xuXG5pbXBvcnQge0ZpZWxkfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuaW1wb3J0IHtjYW1lbGl6ZX0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5pbXBvcnQgRmllbGRTZWxlY3RvckZhY3RvcnkgZnJvbSAnLi4vLi4vY29tbW9uL2ZpZWxkLXNlbGVjdG9yJztcbmltcG9ydCBJbmZvSGVscGVyRmFjdG9yeSBmcm9tICcuLi8uLi9jb21tb24vaW5mby1oZWxwZXInO1xuaW1wb3J0IHtQYW5lbExhYmVsLCBQYW5lbExhYmVsV3JhcHBlciwgU2lkZVBhbmVsU2VjdGlvbn0gZnJvbSAnLi4vLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcblxudHlwZSBWaXNDb25maWdCeUZpZWxkU2VsZWN0b3JQcm9wcyA9IHtcbiAgZmllbGRzOiBGaWVsZFtdO1xuICBpZDogc3RyaW5nO1xuICBwcm9wZXJ0eTogc3RyaW5nO1xuICB1cGRhdGVGaWVsZDogKHZhbDogc3RyaW5nIHwgRmllbGQgfCBudWxsKSA9PiB2b2lkO1xuICBzY2FsZVR5cGU/OiBzdHJpbmc7XG4gIHNlbGVjdGVkRmllbGQ/OiBGaWVsZDtcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIGxhYmVsPzogc3RyaW5nO1xuICBwbGFjZWhvbGRlcj86IHN0cmluZztcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xufSAmIFdyYXBwZWRDb21wb25lbnRQcm9wcztcblxuVmlzQ29uZmlnQnlGaWVsZFNlbGVjdG9yRmFjdG9yeS5kZXBzID0gW0luZm9IZWxwZXJGYWN0b3J5LCBGaWVsZFNlbGVjdG9yRmFjdG9yeV07XG5cbmZ1bmN0aW9uIFZpc0NvbmZpZ0J5RmllbGRTZWxlY3RvckZhY3RvcnkoXG4gIEluZm9IZWxwZXI6IFJldHVyblR5cGU8dHlwZW9mIEluZm9IZWxwZXJGYWN0b3J5PixcbiAgRmllbGRTZWxlY3RvcjogUmV0dXJuVHlwZTx0eXBlb2YgRmllbGRTZWxlY3RvckZhY3Rvcnk+XG4pIHtcbiAgY29uc3QgVmlzQ29uZmlnQnlGaWVsZFNlbGVjdG9yOiBSZWFjdC5GQzxWaXNDb25maWdCeUZpZWxkU2VsZWN0b3JQcm9wcz4gPSAoe1xuICAgIGlkLFxuICAgIHByb3BlcnR5LFxuICAgIHNlbGVjdGVkRmllbGQsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgbGFiZWwsXG4gICAgaW50bCxcbiAgICB1cGRhdGVGaWVsZCxcbiAgICBmaWVsZHMsXG4gICAgcGxhY2Vob2xkZXIsXG4gICAgZGlzYWJsZWRcbiAgfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8U2lkZVBhbmVsU2VjdGlvbiBkaXNhYmxlZD17ZGlzYWJsZWR9PlxuICAgICAgICA8UGFuZWxMYWJlbFdyYXBwZXI+XG4gICAgICAgICAgPFBhbmVsTGFiZWw+XG4gICAgICAgICAgICB7KGxhYmVsICYmIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXtsYWJlbH0gLz4pIHx8IChcbiAgICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2VcbiAgICAgICAgICAgICAgICBpZD1cImxheWVyLnByb3BlcnR5QmFzZWRPblwiXG4gICAgICAgICAgICAgICAgdmFsdWVzPXt7XG4gICAgICAgICAgICAgICAgICBwcm9wZXJ0eTogaW50bC5mb3JtYXRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGBwcm9wZXJ0eS4ke2NhbWVsaXplKHByb3BlcnR5KX1gLFxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogcHJvcGVydHlcbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9QYW5lbExhYmVsPlxuICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgICA8SW5mb0hlbHBlciBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259IHByb3BlcnR5PXtwcm9wZXJ0eX0gaWQ9e2Ake2lkfS0ke3Byb3BlcnR5fWB9IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9QYW5lbExhYmVsV3JhcHBlcj5cbiAgICAgICAgPEZpZWxkU2VsZWN0b3JcbiAgICAgICAgICBmaWVsZHM9e2ZpZWxkc31cbiAgICAgICAgICB2YWx1ZT17c2VsZWN0ZWRGaWVsZCAmJiBzZWxlY3RlZEZpZWxkLm5hbWV9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxuICAgICAgICAgIG9uU2VsZWN0PXtpdGVtcyA9PiB1cGRhdGVGaWVsZChBcnJheS5pc0FycmF5KGl0ZW1zKSA/IGl0ZW1zPy5bMF0gOiBpdGVtcyl9XG4gICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgIGVyYXNhYmxlXG4gICAgICAgIC8+XG4gICAgICA8L1NpZGVQYW5lbFNlY3Rpb24+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIGluamVjdEludGwoVmlzQ29uZmlnQnlGaWVsZFNlbGVjdG9yKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgVmlzQ29uZmlnQnlGaWVsZFNlbGVjdG9yRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUQsT0FBQTtBQUlBLElBQUFFLE1BQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGNBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLFdBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFLLGlCQUFBLEdBQUFMLE9BQUE7QUFYQTtBQUNBOztBQXlCQU0sK0JBQStCLENBQUNDLElBQUksR0FBRyxDQUFDSCxXQUFBLFdBQWlCLEVBQUVELGNBQUEsV0FBb0IsQ0FBQztBQUVoRixTQUFTRywrQkFBK0JBLENBQ3RDRSxVQUFnRCxFQUNoREMsYUFBc0QsRUFDdEQ7RUFDQSxJQUFNQyx3QkFBaUUsR0FBRyxTQUFwRUEsd0JBQWlFQSxDQUFBQyxJQUFBLEVBV2pFO0lBQUEsSUFWSkMsRUFBRSxHQUFBRCxJQUFBLENBQUZDLEVBQUU7TUFDRkMsUUFBUSxHQUFBRixJQUFBLENBQVJFLFFBQVE7TUFDUkMsYUFBYSxHQUFBSCxJQUFBLENBQWJHLGFBQWE7TUFDYkMsV0FBVyxHQUFBSixJQUFBLENBQVhJLFdBQVc7TUFDWEMsS0FBSyxHQUFBTCxJQUFBLENBQUxLLEtBQUs7TUFDTEMsSUFBSSxHQUFBTixJQUFBLENBQUpNLElBQUk7TUFDSkMsV0FBVyxHQUFBUCxJQUFBLENBQVhPLFdBQVc7TUFDWEMsTUFBTSxHQUFBUixJQUFBLENBQU5RLE1BQU07TUFDTkMsV0FBVyxHQUFBVCxJQUFBLENBQVhTLFdBQVc7TUFDWEMsUUFBUSxHQUFBVixJQUFBLENBQVJVLFFBQVE7SUFFUixvQkFDRXZCLE1BQUEsWUFBQXdCLGFBQUEsQ0FBQ2pCLGlCQUFBLENBQUFrQixnQkFBZ0I7TUFBQ0YsUUFBUSxFQUFFQTtJQUFTLGdCQUNuQ3ZCLE1BQUEsWUFBQXdCLGFBQUEsQ0FBQ2pCLGlCQUFBLENBQUFtQixpQkFBaUIscUJBQ2hCMUIsTUFBQSxZQUFBd0IsYUFBQSxDQUFDakIsaUJBQUEsQ0FBQW9CLFVBQVUsUUFDUFQsS0FBSyxpQkFBSWxCLE1BQUEsWUFBQXdCLGFBQUEsQ0FBQ3JCLFVBQUEsQ0FBQXlCLGdCQUFnQjtNQUFDZCxFQUFFLEVBQUVJO0lBQU0sQ0FBRSxDQUFDLGlCQUN4Q2xCLE1BQUEsWUFBQXdCLGFBQUEsQ0FBQ3JCLFVBQUEsQ0FBQXlCLGdCQUFnQjtNQUNmZCxFQUFFLEVBQUMsdUJBQXVCO01BQzFCZSxNQUFNLEVBQUU7UUFDTmQsUUFBUSxFQUFFSSxJQUFJLENBQUNXLGFBQWEsQ0FBQztVQUMzQmhCLEVBQUUsY0FBQWlCLE1BQUEsQ0FBYyxJQUFBM0IsTUFBQSxDQUFBNEIsUUFBUSxFQUFDakIsUUFBUSxDQUFDLENBQUU7VUFDcENrQixjQUFjLEVBQUVsQjtRQUNsQixDQUFDO01BQ0g7SUFBRSxDQUNILENBRU8sQ0FBQyxFQUNaRSxXQUFXLGlCQUNWakIsTUFBQSxZQUFBd0IsYUFBQSxDQUFDZCxVQUFVO01BQUNPLFdBQVcsRUFBRUEsV0FBWTtNQUFDRixRQUFRLEVBQUVBLFFBQVM7TUFBQ0QsRUFBRSxLQUFBaUIsTUFBQSxDQUFLakIsRUFBRSxPQUFBaUIsTUFBQSxDQUFJaEIsUUFBUTtJQUFHLENBQUUsQ0FFckUsQ0FBQyxlQUNwQmYsTUFBQSxZQUFBd0IsYUFBQSxDQUFDYixhQUFhO01BQ1pVLE1BQU0sRUFBRUEsTUFBTztNQUNmYSxLQUFLLEVBQUVsQixhQUFhLElBQUlBLGFBQWEsQ0FBQ21CLElBQUs7TUFDM0NiLFdBQVcsRUFBRUEsV0FBWTtNQUN6QmMsUUFBUSxFQUFFLFNBQVZBLFFBQVFBLENBQUVDLEtBQUs7UUFBQSxPQUFJakIsV0FBVyxDQUFDa0IsS0FBSyxDQUFDQyxPQUFPLENBQUNGLEtBQUssQ0FBQyxHQUFHQSxLQUFLLGFBQUxBLEtBQUssdUJBQUxBLEtBQUssQ0FBRyxDQUFDLENBQUMsR0FBR0EsS0FBSyxDQUFDO01BQUEsQ0FBQztNQUMxRWQsUUFBUSxFQUFFQSxRQUFTO01BQ25CaUIsUUFBUTtJQUFBLENBQ1QsQ0FDZSxDQUFDO0VBRXZCLENBQUM7RUFDRCxPQUFPLElBQUFyQyxVQUFBLENBQUFzQyxVQUFVLEVBQUM3Qix3QkFBd0IsQ0FBQztBQUM3QztBQUFDLElBQUE4QixRQUFBLEdBQUFDLE9BQUEsY0FFY25DLCtCQUErQiIsImlnbm9yZUxpc3QiOltdfQ==