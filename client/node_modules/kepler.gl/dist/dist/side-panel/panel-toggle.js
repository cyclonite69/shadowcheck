"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _panelTab = _interopRequireDefault(require("./panel-tab"));
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var PanelHeaderBottom = _styledComponents["default"].div.attrs({
  className: 'side-side-panel__header__bottom'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  border-bottom: 1px solid ", ";\n  padding: 0 16px;\n  display: flex;\n  min-height: 30px;\n"])), function (props) {
  return props.theme.sidePanelHeaderBg;
}, function (props) {
  return props.theme.sidePanelHeaderBorder;
});
PanelToggleFactory.deps = [_panelTab["default"]];
function PanelToggleFactory(PanelTab) {
  var PanelToggle = function PanelToggle(_ref) {
    var activePanel = _ref.activePanel,
      panels = _ref.panels,
      togglePanel = _ref.togglePanel;
    var _onClick = (0, _react.useCallback)(function (panel) {
      var callback = panel.onClick || togglePanel;
      callback(panel.id);
    }, [togglePanel]);
    return /*#__PURE__*/_react["default"].createElement(PanelHeaderBottom, null, panels.map(function (panel) {
      return /*#__PURE__*/_react["default"].createElement(PanelTab, {
        key: panel.id,
        panel: panel,
        isActive: activePanel === panel.id,
        onClick: function onClick() {
          return _onClick(panel);
        }
      });
    }));
  };
  return PanelToggle;
}
var _default = exports["default"] = PanelToggleFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcGFuZWxUYWIiLCJfdGVtcGxhdGVPYmplY3QiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJQYW5lbEhlYWRlckJvdHRvbSIsImRpdiIsImF0dHJzIiwiY2xhc3NOYW1lIiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJwcm9wcyIsInRoZW1lIiwic2lkZVBhbmVsSGVhZGVyQmciLCJzaWRlUGFuZWxIZWFkZXJCb3JkZXIiLCJQYW5lbFRvZ2dsZUZhY3RvcnkiLCJkZXBzIiwiUGFuZWxUYWIiLCJQYW5lbFRvZ2dsZSIsIl9yZWYiLCJhY3RpdmVQYW5lbCIsInBhbmVscyIsInRvZ2dsZVBhbmVsIiwiX29uQ2xpY2siLCJ1c2VDYWxsYmFjayIsInBhbmVsIiwiY2FsbGJhY2siLCJvbkNsaWNrIiwiaWQiLCJjcmVhdGVFbGVtZW50IiwibWFwIiwia2V5IiwiaXNBY3RpdmUiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvc2lkZS1wYW5lbC9wYW5lbC10b2dnbGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBQYW5lbFRhYkZhY3RvcnksIHtQYW5lbEl0ZW19IGZyb20gJy4vcGFuZWwtdGFiJztcbmltcG9ydCB7dG9nZ2xlU2lkZVBhbmVsLCBBY3Rpb25IYW5kbGVyfSBmcm9tICdAa2VwbGVyLmdsL2FjdGlvbnMnO1xuXG50eXBlIFBhbmVsVG9nZ2xlUHJvcHMgPSB7XG4gIHBhbmVsczogUGFuZWxJdGVtW107XG4gIGFjdGl2ZVBhbmVsOiBzdHJpbmcgfCBudWxsO1xuICB0b2dnbGVQYW5lbDogQWN0aW9uSGFuZGxlcjx0eXBlb2YgdG9nZ2xlU2lkZVBhbmVsPjtcbn07XG5cbmNvbnN0IFBhbmVsSGVhZGVyQm90dG9tID0gc3R5bGVkLmRpdi5hdHRycyh7XG4gIGNsYXNzTmFtZTogJ3NpZGUtc2lkZS1wYW5lbF9faGVhZGVyX19ib3R0b20nXG59KWBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5zaWRlUGFuZWxIZWFkZXJCZ307XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke3Byb3BzID0+IHByb3BzLnRoZW1lLnNpZGVQYW5lbEhlYWRlckJvcmRlcn07XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAgbWluLWhlaWdodDogMzBweDtcbmA7XG5cblBhbmVsVG9nZ2xlRmFjdG9yeS5kZXBzID0gW1BhbmVsVGFiRmFjdG9yeV07XG5cbmZ1bmN0aW9uIFBhbmVsVG9nZ2xlRmFjdG9yeShQYW5lbFRhYjogUmV0dXJuVHlwZTx0eXBlb2YgUGFuZWxUYWJGYWN0b3J5Pikge1xuICBjb25zdCBQYW5lbFRvZ2dsZTogUmVhY3QuRkM8UGFuZWxUb2dnbGVQcm9wcz4gPSAoe2FjdGl2ZVBhbmVsLCBwYW5lbHMsIHRvZ2dsZVBhbmVsfSkgPT4ge1xuICAgIGNvbnN0IG9uQ2xpY2sgPSB1c2VDYWxsYmFjayhcbiAgICAgIHBhbmVsID0+IHtcbiAgICAgICAgY29uc3QgY2FsbGJhY2sgPSBwYW5lbC5vbkNsaWNrIHx8IHRvZ2dsZVBhbmVsO1xuICAgICAgICBjYWxsYmFjayhwYW5lbC5pZCk7XG4gICAgICB9LFxuICAgICAgW3RvZ2dsZVBhbmVsXVxuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFBhbmVsSGVhZGVyQm90dG9tPlxuICAgICAgICB7cGFuZWxzLm1hcChwYW5lbCA9PiAoXG4gICAgICAgICAgPFBhbmVsVGFiXG4gICAgICAgICAgICBrZXk9e3BhbmVsLmlkfVxuICAgICAgICAgICAgcGFuZWw9e3BhbmVsfVxuICAgICAgICAgICAgaXNBY3RpdmU9e2FjdGl2ZVBhbmVsID09PSBwYW5lbC5pZH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uQ2xpY2socGFuZWwpfVxuICAgICAgICAgIC8+XG4gICAgICAgICkpfVxuICAgICAgPC9QYW5lbEhlYWRlckJvdHRvbT5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBQYW5lbFRvZ2dsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFuZWxUb2dnbGVGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsU0FBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQXVELElBQUFJLGVBQUEsRUFMdkQ7QUFDQTtBQUFBLFNBQUFDLHlCQUFBQyxDQUFBO0VBQUEseUJBQUFDLE9BQUE7RUFBQSxJQUFBQyxDQUFBLE9BQUFELE9BQUE7SUFBQUUsQ0FBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUE7SUFBQSxPQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQTtFQUFBLEdBQUFGLENBQUE7QUFBQTtBQUFBLFNBQUFQLHdCQUFBTyxDQUFBLEVBQUFFLENBQUE7RUFBQSxLQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxD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