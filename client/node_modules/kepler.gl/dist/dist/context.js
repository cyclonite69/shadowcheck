"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.RootContext = exports.FeatureFlagsContextProvider = exports.FeatureFlagsContext = exports.CloudProviderContext = void 0;
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

var identity = function identity(state) {
  return state;
};
// New Context API only supported after 16.3
var KeplerGlContext = /*#__PURE__*/(0, _react.createContext)({
  selector: identity,
  id: 'map'
});

// TODO: breakdown this file into multiple files
var FeatureFlagsContext = exports.FeatureFlagsContext = /*#__PURE__*/(0, _react.createContext)({});
var FeatureFlagsContextProvider = exports.FeatureFlagsContextProvider = function FeatureFlagsContextProvider(props) {
  return /*#__PURE__*/_react["default"].createElement(FeatureFlagsContext.Provider, {
    value: props.featureFlags || null
  }, props.children);
};

/**
 * This provides keeps track of the ist cloud providers
 * and the current selected one
 */
var CloudProviderContext = exports.CloudProviderContext = /*#__PURE__*/(0, _react.createContext)({
  provider: null,
  setProvider: function setProvider() {
    return;
  },
  cloudProviders: []
});
var RootContext = exports.RootContext = /*#__PURE__*/(0, _react.createContext)(null);
var _default = exports["default"] = KeplerGlContext;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJpZGVudGl0eSIsInN0YXRlIiwiS2VwbGVyR2xDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInNlbGVjdG9yIiwiaWQiLCJGZWF0dXJlRmxhZ3NDb250ZXh0IiwiZXhwb3J0cyIsIkZlYXR1cmVGbGFnc0NvbnRleHRQcm92aWRlciIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwidmFsdWUiLCJmZWF0dXJlRmxhZ3MiLCJjaGlsZHJlbiIsIkNsb3VkUHJvdmlkZXJDb250ZXh0IiwicHJvdmlkZXIiLCJzZXRQcm92aWRlciIsImNsb3VkUHJvdmlkZXJzIiwiUm9vdENvbnRleHQiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uL3NyYy9jb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHtjcmVhdGVDb250ZXh0LCBSZWZPYmplY3QsIFJlYWN0Tm9kZSwgUmVhY3RFbGVtZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1Byb3ZpZGVyfSBmcm9tICdAa2VwbGVyLmdsL2Nsb3VkLXByb3ZpZGVycyc7XG5cbmNvbnN0IGlkZW50aXR5ID0gc3RhdGUgPT4gc3RhdGU7XG4vLyBOZXcgQ29udGV4dCBBUEkgb25seSBzdXBwb3J0ZWQgYWZ0ZXIgMTYuM1xuY29uc3QgS2VwbGVyR2xDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh7XG4gIHNlbGVjdG9yOiBpZGVudGl0eSxcbiAgaWQ6ICdtYXAnXG59KTtcblxuLy8gVE9ETzogYnJlYWtkb3duIHRoaXMgZmlsZSBpbnRvIG11bHRpcGxlIGZpbGVzXG5leHBvcnQgY29uc3QgRmVhdHVyZUZsYWdzQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8b2JqZWN0IHwgbnVsbD4oe30pO1xuXG5leHBvcnQgdHlwZSBGZWF0dXJlRmxhZ3MgPSB7W2tleTogc3RyaW5nXTogc3RyaW5nIHwgYm9vbGVhbn07XG5cbmV4cG9ydCB0eXBlIEZlYXR1cmVGbGFnc0NvbnRleHRQcm92aWRlclByb3BzID0ge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBmZWF0dXJlRmxhZ3M/OiBGZWF0dXJlRmxhZ3M7XG59O1xuXG5leHBvcnQgdHlwZSBDbG91ZFByb3ZpZGVyQ29udGV4dFR5cGUgPSB7XG4gIHByb3ZpZGVyOiBQcm92aWRlciB8IG51bGw7XG4gIHNldFByb3ZpZGVyOiAocHJvdmlkZXI6IFByb3ZpZGVyIHwgbnVsbCkgPT4gdm9pZDtcbiAgY2xvdWRQcm92aWRlcnM6IFByb3ZpZGVyW107XG59O1xuXG5leHBvcnQgY29uc3QgRmVhdHVyZUZsYWdzQ29udGV4dFByb3ZpZGVyID0gKFxuICBwcm9wczogRmVhdHVyZUZsYWdzQ29udGV4dFByb3ZpZGVyUHJvcHNcbik6IFJlYWN0RWxlbWVudCA9PiAoXG4gIDxGZWF0dXJlRmxhZ3NDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtwcm9wcy5mZWF0dXJlRmxhZ3MgfHwgbnVsbH0+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0ZlYXR1cmVGbGFnc0NvbnRleHQuUHJvdmlkZXI+XG4pO1xuXG4vKipcbiAqIFRoaXMgcHJvdmlkZXMga2VlcHMgdHJhY2sgb2YgdGhlIGlzdCBjbG91ZCBwcm92aWRlcnNcbiAqIGFuZCB0aGUgY3VycmVudCBzZWxlY3RlZCBvbmVcbiAqL1xuZXhwb3J0IGNvbnN0IENsb3VkUHJvdmlkZXJDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxDbG91ZFByb3ZpZGVyQ29udGV4dFR5cGU+KHtcbiAgcHJvdmlkZXI6IG51bGwsXG4gIHNldFByb3ZpZGVyOiAoKSA9PiB7XG4gICAgcmV0dXJuO1xuICB9LFxuICBjbG91ZFByb3ZpZGVyczogW11cbn0pO1xuXG5leHBvcnQgY29uc3QgUm9vdENvbnRleHQgPSBjcmVhdGVDb250ZXh0PFJlZk9iamVjdDxIVE1MRGl2RWxlbWVudD4gfCBudWxsPihudWxsKTtcblxuZXhwb3J0IGRlZmF1bHQgS2VwbGVyR2xDb250ZXh0O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQStFLFNBQUFDLHlCQUFBQyxDQUFBO0VBQUEseUJBQUFDLE9BQUE7RUFBQSxJQUFBQyxDQUFBLE9BQUFELE9BQUE7SUFBQUUsQ0FBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUE7SUFBQSxPQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQTtFQUFBLEdBQUFGLENBQUE7QUFBQTtBQUFBLFNBQUFILHdCQUFBRyxDQUFBLEVBQUFFLENBQUE7RUFBQSxLQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUE7RUFBQSxhQUFBQSxDQUFBLGdCQUFBSyxPQUFBLENBQUFMLENBQUEsMEJBQUFBLENBQUE7SUFBQSxXQUFBQTtFQUFBO0VBQUEsSUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBO0VBQUEsSUFBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQTtFQUFBLElBQUFRLENBQUE7TUFBQUMsU0FBQTtJQUFBO0lBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUE7RUFBQSxTQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUE7SUFBQSxJQUFBRyxDQUFBLEdBQUFQLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBYixDQUFBLEVBQUFjLENBQUE7SUFBQUcsQ0FBQSxLQUFBQSxDQUFBLENBQUFWLEdBQUEsSUFBQVUsQ0FBQSxDQUFBQyxHQUFBLElBQUFQLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUcsQ0FBQSxJQUFBVCxDQUFBLENBQUFNLENBQUEsSUFBQWQsQ0FBQSxDQUFBYyxDQUFBO0VBQUE7RUFBQSxPQUFBTixDQUFBLGNBQUFSLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBQUE7QUFIL0U7QUFDQTs7QUFLQSxJQUFNVyxRQUFRLEdBQUcsU0FBWEEsUUFBUUEsQ0FBR0MsS0FBSztFQUFBLE9BQUlBLEtBQUs7QUFBQTtBQUMvQjtBQUNBLElBQU1DLGVBQWUsZ0JBQUcsSUFBQXpCLE1BQUEsQ0FBQTBCLGFBQWEsRUFBQztFQUNwQ0MsUUFBUSxFQUFFSixRQUFRO0VBQ2xCSyxFQUFFLEVBQUU7QUFDTixDQUFDLENBQUM7O0FBRUY7QUFDTyxJQUFNQyxtQkFBbUIsR0FBQUMsT0FBQSxDQUFBRCxtQkFBQSxnQkFBRyxJQUFBN0IsTUFBQSxDQUFBMEIsYUFBYSxFQUFnQixDQUFDLENBQUMsQ0FBQztBQWU1RCxJQUFNSywyQkFBMkIsR0FBQUQsT0FBQSxDQUFBQywyQkFBQSxHQUFHLFNBQTlCQSwyQkFBMkJBLENBQ3RDQyxLQUF1QztFQUFBLG9CQUV2Q2hDLE1BQUEsWUFBQWlDLGFBQUEsQ0FBQ0osbUJBQW1CLENBQUNLLFFBQVE7SUFBQ0MsS0FBSyxFQUFFSCxLQUFLLENBQUNJLFlBQVksSUFBSTtFQUFLLEdBQzdESixLQUFLLENBQUNLLFFBQ3FCLENBQUM7QUFBQSxDQUNoQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQU1DLG9CQUFvQixHQUFBUixPQUFBLENBQUFRLG9CQUFBLGdCQUFHLElBQUF0QyxNQUFBLENBQUEwQixhQUFhLEVBQTJCO0VBQzFFYSxRQUFRLEVBQUUsSUFBSTtFQUNkQyxXQUFXLEVBQUUsU0FBYkEsV0FBV0EsQ0FBQSxFQUFRO0lBQ2pCO0VBQ0YsQ0FBQztFQUNEQyxjQUFjLEVBQUU7QUFDbEIsQ0FBQyxDQUFDO0FBRUssSUFBTUMsV0FBVyxHQUFBWixPQUFBLENBQUFZLFdBQUEsZ0JBQUcsSUFBQTFDLE1BQUEsQ0FBQTBCLGFBQWEsRUFBbUMsSUFBSSxDQUFDO0FBQUMsSUFBQWlCLFFBQUEsR0FBQWIsT0FBQSxjQUVsRUwsZUFBZSIsImlnbm9yZUxpc3QiOltdfQ==