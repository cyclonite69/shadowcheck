"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStyleReducerFactory = exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reduxActions = require("redux-actions");
var _actions = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/actions/src");
var mapStyleUpdaters = _interopRequireWildcard(require("./map-style-updaters"));
var _actionHandler; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      (0, _defineProperty2["default"])(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.INIT, mapStyleUpdaters.initMapStyleUpdater), _actions.ActionTypes.INPUT_MAP_STYLE, mapStyleUpdaters.inputMapStyleUpdater), _actions.ActionTypes.MAP_CONFIG_CHANGE, mapStyleUpdaters.mapConfigChangeUpdater), _actions.ActionTypes.MAP_STYLE_CHANGE, mapStyleUpdaters.mapStyleChangeUpdater), _actions.ActionTypes.REQUEST_MAP_STYLES, mapStyleUpdaters.requestMapStylesUpdater), _actions.ActionTypes.LOAD_MAP_STYLES, mapStyleUpdaters.loadMapStylesUpdater), _actions.ActionTypes.LOAD_MAP_STYLE_ERR, mapStyleUpdaters.loadMapStyleErrUpdater), _actions.ActionTypes.RECEIVE_MAP_CONFIG, mapStyleUpdaters.receiveMapConfigUpdater), _actions.ActionTypes.LOAD_CUSTOM_MAP_STYLE, mapStyleUpdaters.loadCustomMapStyleUpdater), _actions.ActionTypes.ADD_CUSTOM_MAP_STYLE, mapStyleUpdaters.addCustomMapStyleUpdater), (0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])(_actionHandler, _actions.ActionTypes.EDIT_CUSTOM_MAP_STYLE, mapStyleUpdaters.editCustomMapStyleUpdater), _actions.ActionTypes.REMOVE_CUSTOM_MAP_STYLE, mapStyleUpdaters.removeCustomMapStyleUpdater), _actions.ActionTypes.RESET_MAP_CONFIG, mapStyleUpdaters.resetMapConfigMapStyleUpdater), _actions.ActionTypes.SET_3D_BUILDING_COLOR, mapStyleUpdaters.set3dBuildingColorUpdater), _actions.ActionTypes.SET_BACKGROUND_COLOR, mapStyleUpdaters.setBackgroundColorUpdater));
var mapStyleReducerFactory = exports.mapStyleReducerFactory = function mapStyleReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (
    // @ts-expect-error
    (0, _reduxActions.handleActions)(actionHandler, _objectSpread(_objectSpread(_objectSpread({}, mapStyleUpdaters.INITIAL_MAP_STYLE), initialState), {}, {
      initialState: initialState
    }))
  );
};
var _default = exports["default"] = mapStyleReducerFactory();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,