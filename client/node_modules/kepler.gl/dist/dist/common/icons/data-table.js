"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function _callSuper(t, o, e) {
  return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  })();
} // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var DataTable = exports["default"] = /*#__PURE__*/function (_Component) {
  function DataTable() {
    (0, _classCallCheck2["default"])(this, DataTable);
    return _callSuper(this, DataTable, arguments);
  }
  (0, _inherits2["default"])(DataTable, _Component);
  return (0, _createClass2["default"])(DataTable, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], (0, _extends2["default"])({}, this.props, {
        style: {
          fill: 'none',
          stroke: 'currentcolor'
        },
        strokeWidth: "2",
        strokeLinecap: "round",
        strokeLinejoin: "round"
      }), /*#__PURE__*/_react["default"].createElement("rect", {
        width: "18",
        height: "18",
        x: "3",
        y: "3",
        rx: "2",
        ry: "2"
      }), /*#__PURE__*/_react["default"].createElement("line", {
        x1: "3",
        x2: "21",
        y1: "9",
        y2: "9"
      }), /*#__PURE__*/_react["default"].createElement("line", {
        x1: "3",
        x2: "21",
        y1: "15",
        y2: "15"
      }), /*#__PURE__*/_react["default"].createElement("line", {
        x1: "9",
        x2: "9",
        y1: "9",
        y2: "21"
      }), /*#__PURE__*/_react["default"].createElement("line", {
        x1: "15",
        x2: "15",
        y1: "9",
        y2: "21"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(DataTable, "displayName", 'DataTable');
(0, _defineProperty2["default"])(DataTable, "defaultProps", {
  height: '16px',
  viewBox: '0 0 24 24',
  predefinedClassName: 'data-ex-icons-datatable'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfYmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIkRhdGFUYWJsZSIsImV4cG9ydHMiLCJfQ29tcG9uZW50IiwiX2NsYXNzQ2FsbENoZWNrMiIsImFyZ3VtZW50cyIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX2V4dGVuZHMyIiwicHJvcHMiLCJzdHlsZSIsImZpbGwiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsIndpZHRoIiwiaGVpZ2h0IiwieCIsInkiLCJyeCIsInJ5IiwieDEiLCJ4MiIsInkxIiwieTIiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkyIiwidmlld0JveCIsInByZWRlZmluZWRDbGFzc05hbWUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL2ljb25zL2RhdGEtdGFibGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEJhc2UsIHtCYXNlUHJvcHN9IGZyb20gJy4vYmFzZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGFUYWJsZSBleHRlbmRzIENvbXBvbmVudDxQYXJ0aWFsPEJhc2VQcm9wcz4+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0RhdGFUYWJsZSc7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgdmlld0JveDogJzAgMCAyNCAyNCcsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2RhdGEtZXgtaWNvbnMtZGF0YXRhYmxlJ1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2VcbiAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgIHN0eWxlPXt7ZmlsbDogJ25vbmUnLCBzdHJva2U6ICdjdXJyZW50Y29sb3InfX1cbiAgICAgICAgc3Ryb2tlV2lkdGg9XCIyXCJcbiAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXG4gICAgICA+XG4gICAgICAgIDxyZWN0IHdpZHRoPVwiMThcIiBoZWlnaHQ9XCIxOFwiIHg9XCIzXCIgeT1cIjNcIiByeD1cIjJcIiByeT1cIjJcIiAvPlxuICAgICAgICA8bGluZSB4MT1cIjNcIiB4Mj1cIjIxXCIgeTE9XCI5XCIgeTI9XCI5XCIgLz5cbiAgICAgICAgPGxpbmUgeDE9XCIzXCIgeDI9XCIyMVwiIHkxPVwiMTVcIiB5Mj1cIjE1XCIgLz5cbiAgICAgICAgPGxpbmUgeDE9XCI5XCIgeDI9XCI5XCIgeTE9XCI5XCIgeTI9XCIyMVwiIC8+XG4gICAgICAgIDxsaW5lIHgxPVwiMTVcIiB4Mj1cIjE1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QUMsS0FBQSxFQVE1QixTQUFBQyxNQUFNQSxDQUFBLEVBQUc7TUFDUCxvQkFDRTlDLE1BQUEsWUFBQStDLGFBQUEsQ0FBQzVDLEtBQUEsV0FBSSxNQUFBNkMsU0FBQSxpQkFDQyxJQUFJLENBQUNDLEtBQUs7UUFDZEMsS0FBSyxFQUFFO1VBQUNDLElBQUksRUFBRSxNQUFNO1VBQUVDLE1BQU0sRUFBRTtRQUFjLENBQUU7UUFDOUNDLFdBQVcsRUFBQyxHQUFHO1FBQ2ZDLGFBQWEsRUFBQyxPQUFPO1FBQ3JCQyxjQUFjLEVBQUM7TUFBTyxpQkFFdEJ2RCxNQUFBLFlBQUErQyxhQUFBO1FBQU1TLEtBQUssRUFBQyxJQUFJO1FBQUNDLE1BQU0sRUFBQyxJQUFJO1FBQUNDLENBQUMsRUFBQyxHQUFHO1FBQUNDLENBQUMsRUFBQyxHQUFHO1FBQUNDLEVBQUUsRUFBQyxHQUFHO1FBQUNDLEVBQUUsRUFBQztNQUFHLENBQUUsQ0FBQyxlQUN6RDdELE1BQUEsWUFBQStDLGFBQUE7UUFBTWUsRUFBRSxFQUFDLEdBQUc7UUFBQ0MsRUFBRSxFQUFDLElBQUk7UUFBQ0MsRUFBRSxFQUFDLEdBQUc7UUFBQ0MsRUFBRSxFQUFDO01BQUcsQ0FBRSxDQUFDLGVBQ3JDakUsTUFBQSxZQUFBK0MsYUFBQTtRQUFNZSxFQUFFLEVBQUMsR0FBRztRQUFDQyxFQUFFLEVBQUMsSUFBSTtRQUFDQyxFQUFFLEVBQUMsSUFBSTtRQUFDQyxFQUFFLEVBQUM7TUFBSSxDQUFFLENBQUMsZUFDdkNqRSxNQUFBLFlBQUErQyxhQUFBO1FBQU1lLEVBQUUsRUFBQyxHQUFHO1FBQUNDLEVBQUUsRUFBQyxHQUFHO1FBQUNDLEVBQUUsRUFBQyxHQUFHO1FBQUNDLEVBQUUsRUFBQztNQUFJLENBQUUsQ0FBQyxlQUNyQ2pFLE1BQUEsWUFBQStDLGFBQUE7UUFBTWUsRUFBRSxFQUFDLElBQUk7UUFBQ0MsRUFBRSxFQUFDLElBQUk7UUFBQ0MsRUFBRSxFQUFDLEdBQUc7UUFBQ0MsRUFBRSxFQUFDO01BQUksQ0FBRSxDQUNsQyxDQUFDO0lBRVg7RUFBQztBQUFBLEVBeEJvQ2pFLE1BQUEsQ0FBQWtFLFNBQVM7QUFBQSxJQUFBQyxnQkFBQSxhQUEzQjlCLFNBQVMsaUJBQ1AsV0FBVztBQUFBLElBQUE4QixnQkFBQSxhQURiOUIsU0FBUyxrQkFFTjtFQUNwQm9CLE1BQU0sRUFBRSxNQUFNO0VBQ2RXLE9BQU8sRUFBRSxXQUFXO0VBQ3BCQyxtQkFBbUIsRUFBRTtBQUN2QixDQUFDIiwiaWdub3JlTGlzdCI6W119