"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function _callSuper(t, o, e) {
  return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  })();
} // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var Share = exports["default"] = /*#__PURE__*/function (_Component) {
  function Share() {
    (0, _classCallCheck2["default"])(this, Share);
    return _callSuper(this, Share, arguments);
  }
  (0, _inherits2["default"])(Share, _Component);
  return (0, _createClass2["default"])(Share, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], (0, _extends2["default"])({}, this.props, {
        style: {
          fill: 'none',
          stroke: 'currentcolor'
        },
        strokeWidth: "2",
        strokeLinecap: "round",
        strokeLinejoin: "round"
      }), /*#__PURE__*/_react["default"].createElement("circle", {
        cx: "18",
        cy: "5",
        r: "3"
      }), /*#__PURE__*/_react["default"].createElement("circle", {
        cx: "6",
        cy: "12",
        r: "3"
      }), /*#__PURE__*/_react["default"].createElement("circle", {
        cx: "18",
        cy: "19",
        r: "3"
      }), /*#__PURE__*/_react["default"].createElement("line", {
        x1: "8.59",
        x2: "15.42",
        y1: "13.51",
        y2: "17.49"
      }), /*#__PURE__*/_react["default"].createElement("line", {
        x1: "15.41",
        x2: "8.59",
        y1: "6.51",
        y2: "10.49"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(Share, "defaultProps", {
  height: '16px',
  viewBox: '0 0 24 24',
  predefinedClassName: 'data-ex-icons-share'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfYmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIlNoYXJlIiwiZXhwb3J0cyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJfZXh0ZW5kczIiLCJwcm9wcyIsInN0eWxlIiwiZmlsbCIsInN0cm9rZSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwiY3giLCJjeSIsIngxIiwieDIiLCJ5MSIsInkyIiwiQ29tcG9uZW50IiwiX2RlZmluZVByb3BlcnR5MiIsImhlaWdodCIsInZpZXdCb3giLCJwcmVkZWZpbmVkQ2xhc3NOYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9pY29ucy9zaGFyZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQmFzZSwge0Jhc2VQcm9wc30gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhcmUgZXh0ZW5kcyBDb21wb25lbnQ8UGFydGlhbDxCYXNlUHJvcHM+PiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgdmlld0JveDogJzAgMCAyNCAyNCcsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2RhdGEtZXgtaWNvbnMtc2hhcmUnXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8QmFzZVxuICAgICAgICB7Li4udGhpcy5wcm9wc31cbiAgICAgICAgc3R5bGU9e3tmaWxsOiAnbm9uZScsIHN0cm9rZTogJ2N1cnJlbnRjb2xvcid9fVxuICAgICAgICBzdHJva2VXaWR0aD1cIjJcIlxuICAgICAgICBzdHJva2VMaW5lY2FwPVwicm91bmRcIlxuICAgICAgICBzdHJva2VMaW5lam9pbj1cInJvdW5kXCJcbiAgICAgID5cbiAgICAgICAgPGNpcmNsZSBjeD1cIjE4XCIgY3k9XCI1XCIgcj1cIjNcIiAvPlxuICAgICAgICA8Y2lyY2xlIGN4PVwiNlwiIGN5PVwiMTJcIiByPVwiM1wiIC8+XG4gICAgICAgIDxjaXJjbGUgY3g9XCIxOFwiIGN5PVwiMTlcIiByPVwiM1wiIC8+XG4gICAgICAgIDxsaW5lIHgxPVwiOC41OVwiIHgyPVwiMTUuNDJcIiB5MT1cIjEzLjUxXCIgeTI9XCIxNy40OVwiIC8+XG4gICAgICAgIDxsaW5lIHgxPVwiMTUuNDFcIiB4Mj1cIjguNTlcIiB5MT1cIjYuNTFcIiB5Mj1cIjEwLjQ5XCIgLz5cbiAgICAgIDwvQmFzZT5cbiAgICApO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUdBLElB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