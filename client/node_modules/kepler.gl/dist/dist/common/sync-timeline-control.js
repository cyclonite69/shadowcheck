"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.SYNC_TIMELINE_ANIMATION_ITEMS = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = require("../common/styled-components");
var _localization = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _constants = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/constants/src");
var _iconButton = _interopRequireDefault(require("./icon-button"));
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

var SYNC_TIMELINE_ANIMATION_ITEMS = exports.SYNC_TIMELINE_ANIMATION_ITEMS = (0, _defineProperty2["default"])((0, _defineProperty2["default"])({}, _constants.SYNC_TIMELINE_MODES.start, {
  id: _constants.SYNC_TIMELINE_MODES.start,
  content: function content() {
    return /*#__PURE__*/_react["default"].createElement("span", null, "Start");
  },
  tooltip: 'tooltip.syncTimelineStart'
}), _constants.SYNC_TIMELINE_MODES.end, {
  id: _constants.SYNC_TIMELINE_MODES.end,
  content: function content() {
    return /*#__PURE__*/_react["default"].createElement("span", null, "End");
  },
  tooltip: 'tooltip.syncTimelineEnd'
});
function SyncTimelineControlFactory() {
  var SyncTimelineControl = function SyncTimelineControl(_ref) {
    var _ref$syncTimelineAnim = _ref.syncTimelineAnimationItems,
      syncTimelineAnimationItems = _ref$syncTimelineAnim === void 0 ? SYNC_TIMELINE_ANIMATION_ITEMS : _ref$syncTimelineAnim,
      syncTimelineMode = _ref.syncTimelineMode,
      btnStyle = _ref.btnStyle,
      setFilterSyncTimelineMode = _ref.setFilterSyncTimelineMode;
    return /*#__PURE__*/_react["default"].createElement("div", null, Object.values(syncTimelineAnimationItems).filter(function (item, _index) {
      return item.id !== syncTimelineMode;
    }).map(function (item) {
      return /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
        key: item.id,
        "data-tip": true,
        "data-for": "".concat(item.id, "-tooltip"),
        className: "playback-control-button",
        onClick: function onClick() {
          return setFilterSyncTimelineMode(item.id);
        }
      }, btnStyle), /*#__PURE__*/_react["default"].createElement(item.content, null), item.tooltip ? /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
        id: "".concat(item.id, "-tooltip"),
        effect: "solid",
        place: "top"
      }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
        id: item.tooltip
      })) : null);
    }));
  };
  return SyncTimelineControl;
}
var _default = exports["default"] = SyncTimelineControlFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX2xvY2FsaXphdGlvbiIsIl9jb25zdGFudHMiLCJfaWNvbkJ1dHRvbiIsIlNZTkNfVElNRUxJTkVfQU5JTUFUSU9OX0lURU1TIiwiZXhwb3J0cyIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJTWU5DX1RJTUVMSU5FX01PREVTIiwic3RhcnQiLCJpZCIsImNvbnRlbnQiLCJjcmVhdGVFbGVtZW50IiwidG9vbHRpcCIsImVuZCIsIlN5bmNUaW1lbGluZUNvbnRyb2xGYWN0b3J5IiwiU3luY1RpbWVsaW5lQ29udHJvbCIsIl9yZWYiLCJfcmVmJHN5bmNUaW1lbGluZUFuaW0iLCJzeW5jVGltZWxpbmVBbmltYXRpb25JdGVtcyIsInN5bmNUaW1lbGluZU1vZGUiLCJidG5TdHlsZSIsInNldEZpbHRlclN5bmNUaW1lbGluZU1vZGUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmaWx0ZXIiLCJpdGVtIiwiX2luZGV4IiwibWFwIiwiX2V4dGVuZHMyIiwia2V5IiwiY29uY2F0IiwiY2xhc3NOYW1lIiwib25DbGljayIsIlRvb2x0aXAiLCJlZmZlY3QiLCJwbGFjZSIsIkZvcm1hdHRlZE1lc3NhZ2UiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vc3luYy10aW1lbGluZS1jb250cm9sLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtUb29sdGlwfSBmcm9tICcuLi9jb21tb24vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5pbXBvcnQge1NZTkNfVElNRUxJTkVfTU9ERVN9IGZyb20gJ0BrZXBsZXIuZ2wvY29uc3RhbnRzJztcbmltcG9ydCBJY29uQnV0dG9uIGZyb20gJy4vaWNvbi1idXR0b24nO1xuXG5leHBvcnQgdHlwZSBTeW5jVGltZWxpbmVBbmltYXRpb25JdGVtID0ge1xuICBpZDogc3RyaW5nO1xuICBjb250ZW50OiBSZWFjdC5FbGVtZW50VHlwZTtcbiAgdG9vbHRpcDogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgU3luY1RpbWVsaW5lQ29udHJvbFByb3BzID0ge1xuICBzeW5jVGltZWxpbmVNb2RlOiBzdHJpbmc7XG4gIHNldEZpbHRlclN5bmNUaW1lbGluZU1vZGU6IChpZDogc3RyaW5nKSA9PiB2b2lkO1xuICBzeW5jVGltZWxpbmVBbmltYXRpb25JdGVtczogU3luY1RpbWVsaW5lQW5pbWF0aW9uSXRlbVtdO1xuICBidG5TdHlsZTogUmVjb3JkPHN0cmluZywgYW55Pjtcbn07XG5cbmV4cG9ydCBjb25zdCBTWU5DX1RJTUVMSU5FX0FOSU1BVElPTl9JVEVNUzogUmVjb3JkPFxuICBzdHJpbmcsXG4gIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIGNvbnRlbnQ6IFJlYWN0LkVsZW1lbnRUeXBlO1xuICAgIHRvb2x0aXA6IHN0cmluZztcbiAgfVxuPiA9IHtcbiAgW1NZTkNfVElNRUxJTkVfTU9ERVMuc3RhcnRdOiB7XG4gICAgaWQ6IFNZTkNfVElNRUxJTkVfTU9ERVMuc3RhcnQsXG4gICAgY29udGVudDogKCkgPT4gPHNwYW4+U3RhcnQ8L3NwYW4+LFxuICAgIHRvb2x0aXA6ICd0b29sdGlwLnN5bmNUaW1lbGluZVN0YXJ0J1xuICB9LFxuICBbU1lOQ19USU1FTElORV9NT0RFUy5lbmRdOiB7XG4gICAgaWQ6IFNZTkNfVElNRUxJTkVfTU9ERVMuZW5kLFxuICAgIGNvbnRlbnQ6ICgpID0+IDxzcGFuPkVuZDwvc3Bhbj4sXG4gICAgdG9vbHRpcDogJ3Rvb2x0aXAuc3luY1RpbWVsaW5lRW5kJ1xuICB9XG59O1xuXG5mdW5jdGlvbiBTeW5jVGltZWxpbmVDb250cm9sRmFjdG9yeSgpIHtcbiAgY29uc3QgU3luY1RpbWVsaW5lQ29udHJvbCA9ICh7XG4gICAgc3luY1RpbWVsaW5lQW5pbWF0aW9uSXRlbXMgPSBTWU5DX1RJTUVMSU5FX0FOSU1BVElPTl9JVEVNUyxcbiAgICBzeW5jVGltZWxpbmVNb2RlLFxuICAgIGJ0blN0eWxlLFxuICAgIHNldEZpbHRlclN5bmNUaW1lbGluZU1vZGVcbiAgfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7T2JqZWN0LnZhbHVlcyhzeW5jVGltZWxpbmVBbmltYXRpb25JdGVtcylcbiAgICAgICAgICAuZmlsdGVyKChpdGVtLCBfaW5kZXgpID0+IGl0ZW0uaWQgIT09IHN5bmNUaW1lbGluZU1vZGUpXG4gICAgICAgICAgLm1hcChpdGVtID0+IChcbiAgICAgICAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgICAgICAgIGtleT17aXRlbS5pZH1cbiAgICAgICAgICAgICAgZGF0YS10aXBcbiAgICAgICAgICAgICAgZGF0YS1mb3I9e2Ake2l0ZW0uaWR9LXRvb2x0aXBgfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwbGF5YmFjay1jb250cm9sLWJ1dHRvblwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldEZpbHRlclN5bmNUaW1lbGluZU1vZGUoaXRlbS5pZCl9XG4gICAgICAgICAgICAgIHsuLi5idG5TdHlsZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGl0ZW0uY29udGVudCAvPlxuICAgICAgICAgICAgICB7aXRlbS50b29sdGlwID8gKFxuICAgICAgICAgICAgICAgIDxUb29sdGlwIGlkPXtgJHtpdGVtLmlkfS10b29sdGlwYH0gZWZmZWN0PVwic29saWRcIiBwbGFjZT1cInRvcFwiPlxuICAgICAgICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9e2l0ZW0udG9vbHRpcH0gLz5cbiAgICAgICAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICAgICkpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gU3luY1RpbWVsaW5lQ29udHJvbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU3luY1RpbWVsaW5lQ29udHJvbEZhY3Rvcnk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxhQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxVQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxXQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFQQTtBQUNBOztBQXFCTyxJQUFNSyw2QkFPWixHQUFBQyxPQUFBLENBQUFELDZCQUFBLE9BQUFFLGdCQUFBLGlCQUFBQSxnQkFBQSxpQkFDRUosVUFBQSxDQUFBSyxtQkFBbUIsQ0FBQ0MsS0FBSyxFQUFHO0VBQzNCQyxFQUFFLEVBQUVQLFVBQUEsQ0FBQUssbUJBQW1CLENBQUNDLEtBQUs7RUFDN0JFLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFBO0lBQUEsb0JBQVFiLE1BQUEsWUFBQWMsYUFBQSxlQUFNLE9BQVcsQ0FBQztFQUFBO0VBQ2pDQyxPQUFPLEVBQUU7QUFDWCxDQUFDLEdBQ0FWLFVBQUEsQ0FBQUssbUJBQW1CLENBQUNNLEdBQUcsRUFBRztFQUN6QkosRUFBRSxFQUFFUCxVQUFBLENBQUFLLG1CQUFtQixDQUFDTSxHQUFHO0VBQzNCSCxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBQTtJQUFBLG9CQUFRYixNQUFBLFlBQUFjLGFBQUEsZUFBTSxLQUFTLENBQUM7RUFBQTtFQUMvQkMsT0FBTyxFQUFFO0FBQ1gsQ0FBQyxDQUNGO0FBRUQsU0FBU0UsMEJBQTBCQSxDQUFBLEVBQUc7RUFDcEMsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFtQkEsQ0FBQUMsSUFBQSxFQUtuQjtJQUFBLElBQUFDLHFCQUFBLEdBQUFELElBQUEsQ0FKSkUsMEJBQTBCO01BQTFCQSwwQkFBMEIsR0FBQUQscUJBQUEsY0FBR2IsNkJBQTZCLEdBQUFhLHFCQUFBO01BQzFERSxnQkFBZ0IsR0FBQUgsSUFBQSxDQUFoQkcsZ0JBQWdCO01BQ2hCQyxRQUFRLEdBQUFKLElBQUEsQ0FBUkksUUFBUTtNQUNSQyx5QkFBeUIsR0FBQUwsSUFBQSxDQUF6QksseUJBQXlCO0lBRXpCLG9CQUNFeEIsTUFBQSxZQUFBYyxhQUFBLGNBQ0dXLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTCwwQkFBMEIsQ0FBQyxDQUN2Q00sTUFBTSxDQUFDLFVBQUNDLElBQUksRUFBRUMsTUFBTTtNQUFBLE9BQUtELElBQUksQ0FBQ2hCLEVBQUUsS0FBS1UsZ0JBQWdCO0lBQUEsRUFBQyxDQUN0RFEsR0FBRyxDQUFDLFVBQUFGLElBQUk7TUFBQSxvQkFDUDVCLE1BQUEsWUFBQWMsYUFBQSxDQUFDUixXQUFBLFdBQVUsTUFBQXlCLFNBQUE7UUFDVEMsR0FBRyxFQUFFSixJQUFJLENBQUNoQixFQUFHO1FBQ2IsZ0JBQVE7UUFDUixlQUFBcUIsTUFBQSxDQUFhTCxJQUFJLENBQUNoQixFQUFFLGFBQVc7UUFDL0JzQixTQUFTLEVBQUMseUJBQXlCO1FBQ25DQyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBQTtVQUFBLE9BQVFYLHlCQUF5QixDQUFDSSxJQUFJLENBQUNoQixFQUFFLENBQUM7UUFBQTtNQUFDLEdBQzlDVyxRQUFRLGdCQUVadkIsTUFBQSxZQUFBYyxhQUFBLENBQUNjLElBQUksQ0FBQ2YsT0FBTyxNQUFFLENBQUMsRUFDZmUsSUFBSSxDQUFDYixPQUFPLGdCQUNYZixNQUFBLFlBQUFjLGFBQUEsQ0FBQ1gsaUJBQUEsQ0FBQWlDLE9BQU87UUFBQ3hCLEVBQUUsS0FBQXFCLE1BQUEsQ0FBS0wsSUFBSSxDQUFDaEIsRUFBRSxhQUFXO1FBQUN5QixNQUFNLEVBQUMsT0FBTztRQUFDQyxLQUFLLEVBQUM7TUFBSyxnQkFDM0R0QyxNQUFBLFlBQUFjLGFBQUEsQ0FBQ1YsYUFBQSxDQUFBbUMsZ0JBQWdCO1FBQUMzQixFQUFFLEVBQUVnQixJQUFJLENBQUNiO01BQVEsQ0FBRSxDQUM5QixDQUFDLEdBQ1IsSUFDTSxDQUFDO0lBQUEsQ0FDZCxDQUNBLENBQUM7RUFFVixDQUFDO0VBRUQsT0FBT0csbUJBQW1CO0FBQzVCO0FBQUMsSUFBQXNCLFFBQUEsR0FBQWhDLE9BQUEsY0FFY1MsMEJBQTBCIiwiaWdub3JlTGlzdCI6W119