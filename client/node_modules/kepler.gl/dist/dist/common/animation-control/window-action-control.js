"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _localization = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _styledComponents = require("../styled-components");
var _iconButton = _interopRequireDefault(require("../icon-button"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

var DELAY_SHOW = 500;
function WindowActionControlFactory() {
  var WindowActionComponent = function WindowActionComponent(_ref) {
    var toggleAnimationWindowControl = _ref.toggleAnimationWindowControl,
      showAnimationWindowControl = _ref.showAnimationWindowControl,
      btnStyle = _ref.btnStyle,
      animationItems = _ref.animationItems,
      animationWindow = _ref.animationWindow,
      buttonHeight = _ref.buttonHeight,
      setFilterAnimationWindow = _ref.setFilterAnimationWindow;
    var icon = (0, _react.useMemo)(function () {
      if (animationItems[animationWindow]) {
        var WindowIcon = animationItems[animationWindow].icon;
        return /*#__PURE__*/_react["default"].createElement(WindowIcon, {
          height: buttonHeight
        });
      }
      return null;
    }, [animationItems, animationWindow, buttonHeight]);
    return setFilterAnimationWindow ? /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
      "data-tip": true,
      "data-for": "animate-window",
      className: (0, _classnames["default"])('playback-control-button', {
        active: showAnimationWindowControl
      }),
      onClick: toggleAnimationWindowControl
    }, btnStyle), icon, animationItems[animationWindow] && animationItems[animationWindow].tooltip ? /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
      id: "animate-window",
      place: "top",
      delayShow: DELAY_SHOW,
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: animationItems[animationWindow].tooltip
    })) : null) : null;
  };
  return WindowActionComponent;
}
var _default = exports["default"] = WindowActionControlFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfY2xhc3NuYW1lcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfbG9jYWxpemF0aW9uIiwiX3N0eWxlZENvbXBvbmVudHMiLCJfaWNvbkJ1dHRvbiIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZiIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIkRFTEFZX1NIT1ciLCJXaW5kb3dBY3Rpb25Db250cm9sRmFjdG9yeSIsIldpbmRvd0FjdGlvbkNvbXBvbmVudCIsIl9yZWYiLCJ0b2dnbGVBbmltYXRpb25XaW5kb3dDb250cm9sIiwic2hvd0FuaW1hdGlvbldpbmRvd0NvbnRyb2wiLCJidG5TdHlsZSIsImFuaW1hdGlvbkl0ZW1zIiwiYW5pbWF0aW9uV2luZG93IiwiYnV0dG9uSGVpZ2h0Iiwic2V0RmlsdGVyQW5pbWF0aW9uV2luZG93IiwiaWNvbiIsInVzZU1lbW8iLCJXaW5kb3dJY29uIiwiY3JlYXRlRWxlbWVudCIsImhlaWdodCIsIl9leHRlbmRzMiIsImNsYXNzTmFtZSIsImFjdGl2ZSIsIm9uQ2xpY2siLCJ0b29sdGlwIiwiVG9vbHRpcCIsImlkIiwicGxhY2UiLCJkZWxheVNob3ciLCJlZmZlY3QiLCJGb3JtYXR0ZWRNZXNzYWdlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9hbmltYXRpb24tY29udHJvbC93aW5kb3ctYWN0aW9uLWNvbnRyb2wudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZU1lbW99IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5pbXBvcnQge1Rvb2x0aXB9IGZyb20gJy4uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBJY29uQnV0dG9uIGZyb20gJy4uL2ljb24tYnV0dG9uJztcblxuY29uc3QgREVMQVlfU0hPVyA9IDUwMDtcbmZ1bmN0aW9uIFdpbmRvd0FjdGlvbkNvbnRyb2xGYWN0b3J5KCkge1xuICBjb25zdCBXaW5kb3dBY3Rpb25Db21wb25lbnQgPSAoe1xuICAgIHRvZ2dsZUFuaW1hdGlvbldpbmRvd0NvbnRyb2wsXG4gICAgc2hvd0FuaW1hdGlvbldpbmRvd0NvbnRyb2wsXG4gICAgYnRuU3R5bGUsXG4gICAgYW5pbWF0aW9uSXRlbXMsXG4gICAgYW5pbWF0aW9uV2luZG93LFxuICAgIGJ1dHRvbkhlaWdodCxcbiAgICBzZXRGaWx0ZXJBbmltYXRpb25XaW5kb3dcbiAgfSkgPT4ge1xuICAgIGNvbnN0IGljb24gPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgIGlmIChhbmltYXRpb25JdGVtc1thbmltYXRpb25XaW5kb3ddKSB7XG4gICAgICAgIGNvbnN0IFdpbmRvd0ljb24gPSBhbmltYXRpb25JdGVtc1thbmltYXRpb25XaW5kb3ddLmljb247XG4gICAgICAgIHJldHVybiA8V2luZG93SWNvbiBoZWlnaHQ9e2J1dHRvbkhlaWdodH0gLz47XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LCBbYW5pbWF0aW9uSXRlbXMsIGFuaW1hdGlvbldpbmRvdywgYnV0dG9uSGVpZ2h0XSk7XG5cbiAgICByZXR1cm4gc2V0RmlsdGVyQW5pbWF0aW9uV2luZG93ID8gKFxuICAgICAgPEljb25CdXR0b25cbiAgICAgICAgZGF0YS10aXBcbiAgICAgICAgZGF0YS1mb3I9XCJhbmltYXRlLXdpbmRvd1wiXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygncGxheWJhY2stY29udHJvbC1idXR0b24nLCB7YWN0aXZlOiBzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbH0pfVxuICAgICAgICBvbkNsaWNrPXt0b2dnbGVBbmltYXRpb25XaW5kb3dDb250cm9sfVxuICAgICAgICB7Li4uYnRuU3R5bGV9XG4gICAgICA+XG4gICAgICAgIHtpY29ufVxuICAgICAgICB7YW5pbWF0aW9uSXRlbXNbYW5pbWF0aW9uV2luZG93XSAmJiBhbmltYXRpb25JdGVtc1thbmltYXRpb25XaW5kb3ddLnRvb2x0aXAgPyAoXG4gICAgICAgICAgPFRvb2x0aXAgaWQ9XCJhbmltYXRlLXdpbmRvd1wiIHBsYWNlPVwidG9wXCIgZGVsYXlTaG93PXtERUxBWV9TSE9XfSBlZmZlY3Q9XCJzb2xpZFwiPlxuICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9e2FuaW1hdGlvbkl0ZW1zW2FuaW1hdGlvbldpbmRvd10udG9vbHRpcH0gLz5cbiAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgPC9JY29uQnV0dG9uPlxuICAgICkgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBXaW5kb3dBY3Rpb25Db21wb25lbnQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdpbmRvd0FjdGlvbkNvbnRyb2xGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxhQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxpQkFBQSxHQUFBSixPQUFBO0FBQ0EsSUFBQUssV0FBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBQXdDLFNBQUFN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