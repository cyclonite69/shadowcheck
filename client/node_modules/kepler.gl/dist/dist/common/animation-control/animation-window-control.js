"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _localization = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _iconButton = _interopRequireDefault(require("../icon-button"));
var _styledComponents = require("../styled-components");
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

function AnimationWindowControlFactory() {
  var AnimationWindowControl = function AnimationWindowControl(_ref) {
    var animationWindow = _ref.animationWindow,
      setFilterAnimationWindow = _ref.setFilterAnimationWindow,
      toggleAnimationWindowControl = _ref.toggleAnimationWindowControl,
      height = _ref.height,
      animationItems = _ref.animationItems,
      _ref$btnStyle = _ref.btnStyle,
      btnStyle = _ref$btnStyle === void 0 ? {} : _ref$btnStyle,
      showAnimationWindowControl = _ref.showAnimationWindowControl;
    var onSelectAnimationControl = (0, _react.useCallback)(function (item) {
      setFilterAnimationWindow(item.id);
      toggleAnimationWindowControl();
    }, [setFilterAnimationWindow, toggleAnimationWindowControl]);
    return showAnimationWindowControl ? /*#__PURE__*/_react["default"].createElement("div", {
      className: "animation-window-control"
    }, Object.values(animationItems).filter(function (item) {
      return item.id !== animationWindow;
    }).map(function (item) {
      return /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
        key: item.id,
        "data-tip": true,
        "data-for": "".concat(item.id, "-tooltip"),
        className: "playback-control-button",
        onClick: function onClick() {
          return onSelectAnimationControl(item);
        }
      }, btnStyle), /*#__PURE__*/_react["default"].createElement(item.icon, {
        height: height
      }), item.tooltip ? /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
        id: "".concat(item.id, "-tooltip"),
        effect: "solid",
        place: "top"
      }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
        id: item.tooltip
      })) : null);
    })) : null;
  };
  return AnimationWindowControl;
}
var _default = exports["default"] = AnimationWindowControlFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfbG9jYWxpemF0aW9uIiwiX2ljb25CdXR0b24iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3N0eWxlZENvbXBvbmVudHMiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJBbmltYXRpb25XaW5kb3dDb250cm9sRmFjdG9yeSIsIkFuaW1hdGlvbldpbmRvd0NvbnRyb2wiLCJfcmVmIiwiYW5pbWF0aW9uV2luZG93Iiwic2V0RmlsdGVyQW5pbWF0aW9uV2luZG93IiwidG9nZ2xlQW5pbWF0aW9uV2luZG93Q29udHJvbCIsImhlaWdodCIsImFuaW1hdGlvbkl0ZW1zIiwiX3JlZiRidG5TdHlsZSIsImJ0blN0eWxlIiwic2hvd0FuaW1hdGlvbldpbmRvd0NvbnRyb2wiLCJvblNlbGVjdEFuaW1hdGlvbkNvbnRyb2wiLCJ1c2VDYWxsYmFjayIsIml0ZW0iLCJpZCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJ2YWx1ZXMiLCJmaWx0ZXIiLCJtYXAiLCJfZXh0ZW5kczIiLCJrZXkiLCJjb25jYXQiLCJvbkNsaWNrIiwiaWNvbiIsInRvb2x0aXAiLCJUb29sdGlwIiwiZWZmZWN0IiwicGxhY2UiLCJGb3JtYXR0ZWRNZXNzYWdlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9hbmltYXRpb24tY29udHJvbC9hbmltYXRpb24td2luZG93LWNvbnRyb2wudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2V9IGZyb20gJ0BrZXBsZXIuZ2wvbG9jYWxpemF0aW9uJztcbmltcG9ydCB7UmVhY3RDb21wb25lbnRMaWtlfSBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJY29uQnV0dG9uIGZyb20gJy4uL2ljb24tYnV0dG9uJztcbmltcG9ydCB7VG9vbHRpcH0gZnJvbSAnLi4vc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFuaW1hdGlvbkl0ZW0ge1xuICBpZDogc3RyaW5nO1xuICBpY29uOiBSZWFjdENvbXBvbmVudExpa2U7XG4gIHRvb2x0aXA6IHN0cmluZztcbn1cbmludGVyZmFjZSBBbmltYXRpb25XaW5kb3dDb250cm9sUHJvcHMge1xuICBhbmltYXRpb25XaW5kb3c/OiBzdHJpbmc7XG4gIHNldEZpbHRlckFuaW1hdGlvbldpbmRvdzogKGlkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIHRvZ2dsZUFuaW1hdGlvbldpbmRvd0NvbnRyb2w6ICgpID0+IHZvaWQ7XG4gIGhlaWdodD86IHN0cmluZztcbiAgYW5pbWF0aW9uSXRlbXM6IHtba2V5OiBzdHJpbmddOiBBbmltYXRpb25JdGVtfTtcbiAgYnRuU3R5bGU7XG4gIHNob3dBbmltYXRpb25XaW5kb3dDb250cm9sOiBib29sZWFuO1xufVxuXG5mdW5jdGlvbiBBbmltYXRpb25XaW5kb3dDb250cm9sRmFjdG9yeSgpOiBSZWFjdC5GQzxBbmltYXRpb25XaW5kb3dDb250cm9sUHJvcHM+IHtcbiAgY29uc3QgQW5pbWF0aW9uV2luZG93Q29udHJvbCA9ICh7XG4gICAgYW5pbWF0aW9uV2luZG93LFxuICAgIHNldEZpbHRlckFuaW1hdGlvbldpbmRvdyxcbiAgICB0b2dnbGVBbmltYXRpb25XaW5kb3dDb250cm9sLFxuICAgIGhlaWdodCxcbiAgICBhbmltYXRpb25JdGVtcyxcbiAgICBidG5TdHlsZSA9IHt9LFxuICAgIHNob3dBbmltYXRpb25XaW5kb3dDb250cm9sXG4gIH06IEFuaW1hdGlvbldpbmRvd0NvbnRyb2xQcm9wcykgPT4ge1xuICAgIGNvbnN0IG9uU2VsZWN0QW5pbWF0aW9uQ29udHJvbCA9IHVzZUNhbGxiYWNrKFxuICAgICAgaXRlbSA9PiB7XG4gICAgICAgIHNldEZpbHRlckFuaW1hdGlvbldpbmRvdyhpdGVtLmlkKTtcbiAgICAgICAgdG9nZ2xlQW5pbWF0aW9uV2luZG93Q29udHJvbCgpO1xuICAgICAgfSxcbiAgICAgIFtzZXRGaWx0ZXJBbmltYXRpb25XaW5kb3csIHRvZ2dsZUFuaW1hdGlvbldpbmRvd0NvbnRyb2xdXG4gICAgKTtcblxuICAgIHJldHVybiBzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCA/IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYW5pbWF0aW9uLXdpbmRvdy1jb250cm9sXCI+XG4gICAgICAgIHtPYmplY3QudmFsdWVzKGFuaW1hdGlvbkl0ZW1zKVxuICAgICAgICAgIC5maWx0ZXIoaXRlbSA9PiBpdGVtLmlkICE9PSBhbmltYXRpb25XaW5kb3cpXG4gICAgICAgICAgLm1hcChpdGVtID0+IChcbiAgICAgICAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgICAgICAgIGtleT17aXRlbS5pZH1cbiAgICAgICAgICAgICAgZGF0YS10aXBcbiAgICAgICAgICAgICAgZGF0YS1mb3I9e2Ake2l0ZW0uaWR9LXRvb2x0aXBgfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwbGF5YmFjay1jb250cm9sLWJ1dHRvblwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uU2VsZWN0QW5pbWF0aW9uQ29udHJvbChpdGVtKX1cbiAgICAgICAgICAgICAgey4uLmJ0blN0eWxlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aXRlbS5pY29uIGhlaWdodD17aGVpZ2h0fSAvPlxuICAgICAgICAgICAgICB7aXRlbS50b29sdGlwID8gKFxuICAgICAgICAgICAgICAgIDxUb29sdGlwIGlkPXtgJHtpdGVtLmlkfS10b29sdGlwYH0gZWZmZWN0PVwic29saWRcIiBwbGFjZT1cInRvcFwiPlxuICAgICAgICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9e2l0ZW0udG9vbHRpcH0gLz5cbiAgICAgICAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICAgICkpfVxuICAgICAgPC9kaXY+XG4gICAgKSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIEFuaW1hdGlvbldpbmRvd0NvbnRyb2w7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFuaW1hdGlvbldpbmRvd0NvbnRyb2xGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxhQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxXQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxpQkFBQSxHQUFBSixPQUFBO0FBQTZDLFNBQUFLLHlCQUFBQyxDQUFBO0VBQUEseUJBQUFDLE9BQUE7RUFBQSxJQUFBQyxDQUFBLE9BQUFELE9BQUE7SUFBQUUsQ0FBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUE7SUFBQSxPQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQTtFQUFBLEdBQUFGLENBQUE7QUFBQTtBQUFBLFNBQUFQLHdCQUFBTyxDQUFBLEVBQUFFLENBQUE7RUFBQSxLQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUE7RUFBQSxhQUFBQSxDQUFBLGdCQUFBSyxPQUFBLENBQUFMLENBQUEsMEJBQUFB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