"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ActionPanelItem = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _classnames = _interopRequireDefault(require("classnames"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _icons = require("./icons");
var _switch = _interopRequireDefault(require("./switch"));
var _tippyTooltip = _interopRequireDefault(require("./tippy-tooltip"));
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != _typeof(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      (0, _defineProperty2["default"])(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
var StyledItem = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 12px;\n  line-height: 14px;\n  padding: 8px 16px 8px 8px;\n  min-height: ", "px;\n  text-transform: capitalize;\n  background-color: ", ";\n  max-width: 200px;\n  position: relative;\n\n  ", " &:hover {\n    color: ", ";\n    .nested-group {\n      display: block;\n    }\n  }\n\n  .label {\n    margin-left: 8px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .label-icon {\n    margin-left: 4px;\n    margin-bottom: -2px;\n  }\n  .icon {\n    width: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .nested-group {\n    max-width: 200px;\n    overflow: hidden;\n    display: none;\n    color: ", ";\n    position: absolute;\n    left: 100%;\n    top: 0px;\n    padding-left: 4px;\n\n    label {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n"])), function (props) {
  return props.theme.actionPanelHeight;
}, function (props) {
  return props.theme.dropdownListBgd;
}, function (props) {
  return props.color ? "border-left: 3px solid rgb(".concat(props.color, ");") : '';
}, function (props) {
  return props.theme.textColorHl;
}, function (props) {
  return props.theme.textColor;
});
var StyledCheckedbox = (0, _styledComponents["default"])(_switch["default"])(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  label {\n    margin-bottom: 0;\n    color: ", ";\n    padding-left: 20px;\n    line-height: 12px;\n\n    &:before {\n      width: 12px;\n      height: 12px;\n      background-color: ", ";\n    }\n    &:hover {\n      color: ", ";\n    }\n  }\n"])), function (props) {
  return props.theme.textColor;
}, function (props) {
  return props.theme.dropdownListBgd;
}, function (props) {
  return props.theme.textColorHl;
});
var renderChildren = function renderChildren(child, index) {
  return child && /*#__PURE__*/_react["default"].isValidElement(child) && /*#__PURE__*/_react["default"].cloneElement(child, {
    onClick: function onClick() {
      if (child.props.onClick) {
        child.props.onClick(index);
      }
    },
    className: (0, _classnames["default"])('action-panel-item', child.props.className)
  });
};
var ActionPanelItem = exports.ActionPanelItem = /*#__PURE__*/_react["default"].memo(function (_ref) {
  var children = _ref.children,
    color = _ref.color,
    className = _ref.className,
    Icon = _ref.Icon,
    label = _ref.label,
    onClick = _ref.onClick,
    isSelection = _ref.isSelection,
    isActive = _ref.isActive,
    isDisabled = _ref.isDisabled,
    tooltipText = _ref.tooltipText,
    style = _ref.style;
  var onClickCallback = (0, _react.useCallback)(function (event) {
    if (isDisabled) {
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    onClick === null || onClick === void 0 || onClick();
  }, [onClick, isDisabled]);
  var content = /*#__PURE__*/_react["default"].createElement(StyledItem, {
    className: className,
    onClick: onClickCallback,
    color: color,
    style: _objectSpread(_objectSpread({}, isDisabled ? {
      cursor: 'not-allowed',
      opacity: 0.5
    } : {
      cursor: 'pointer'
    }), style)
  }, Icon ? /*#__PURE__*/_react["default"].createElement("div", {
    className: "icon"
  }, /*#__PURE__*/_react["default"].createElement(Icon, {
    height: "16px"
  })) : null, isSelection ? /*#__PURE__*/_react["default"].createElement(StyledCheckedbox, {
    type: "checkbox",
    checked: Boolean(isActive),
    disabled: Boolean(isDisabled),
    id: "switch-".concat(label),
    secondary: true,
    label: label
  }) : /*#__PURE__*/_react["default"].createElement("span", {
    className: "label"
  }, label), children ? /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("div", {
    className: "label-icon"
  }, /*#__PURE__*/_react["default"].createElement(_icons.ArrowRight, {
    height: "16px"
  })), !isDisabled ? /*#__PURE__*/_react["default"].createElement("div", {
    className: "nested-group"
  }, _react["default"].Children.map(children, renderChildren)) : null) : null);
  return tooltipText ? /*#__PURE__*/_react["default"].createElement(_tippyTooltip["default"], {
    render: function render() {
      return /*#__PURE__*/_react["default"].createElement("div", null, tooltipText);
    }
  }, content) : content;
});
ActionPanelItem.displayName = 'ActionPanelItem';
var StyledActionPanel = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-direction: ", ";\n  box-shadow: ", ";\n  transition: ", ";\n  color: ", ";\n\n  .action-panel-item {\n    ", " &:last-of-type {\n      border-bottom: 0;\n    }\n  }\n"])), function (props) {
  return props.direction;
}, function (props) {
  return props.theme.dropdownListShadow;
}, function (props) {
  return props.theme.transitionSlow;
}, function (props) {
  return props.theme.textColor;
}, function (props) {
  return props.direction === 'column' ? "border-bottom: 1px solid ".concat(props.theme.panelHeaderIcon) : "border-right: 1px solid ".concat(props.theme.panelHeaderIcon);
});

// React compound element https://medium.com/@Dane_s/react-js-compound-components-a6e54b5c9992
// @ts-expect-error looks like not valid default value for direction prop
var ActionPanel = function ActionPanel(_ref2) {
  var children = _ref2.children,
    className = _ref2.className,
    _ref2$direction = _ref2.direction,
    direction = _ref2$direction === void 0 ? 'column' : _ref2$direction;
  return /*#__PURE__*/_react["default"].createElement(StyledActionPanel, {
    className: className,
    direction: direction
  }, _react["default"].Children.map(children, renderChildren));
};
ActionPanel.displayName = 'ActionPanel';
var _default = exports["default"] = ActionPanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xhc3NuYW1lcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pY29ucyIsIl9zd2l0Y2giLCJfdGlwcHlUb29sdGlwIiwiX3RlbXBsYXRlT2JqZWN0IiwiX3RlbXBsYXRlT2JqZWN0MiIsIl90ZW1wbGF0ZU9iamVjdDMiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJvd25LZXlzIiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJTdHlsZWRJdGVtIiwiZGl2IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJwcm9wcyIsInRoZW1lIiwiYWN0aW9uUGFuZWxIZWlnaHQiLCJkcm9wZG93bkxpc3RCZ2QiLCJjb2xvciIsImNvbmNhdCIsInRleHRDb2xvckhsIiwidGV4dENvbG9yIiwiU3R5bGVkQ2hlY2tlZGJveCIsInJlbmRlckNoaWxkcmVuIiwiY2hpbGQiLCJpbmRleCIsImlzVmFsaWRFbGVtZW50IiwiY2xvbmVFbGVtZW50Iiwib25DbGljayIsImNsYXNzTmFtZSIsIkFjdGlvblBhbmVsSXRlbSIsImV4cG9ydHMiLCJtZW1vIiwiX3JlZiIsImNoaWxkcmVuIiwiSWNvbiIsImxhYmVsIiwiaXNTZWxlY3Rpb24iLCJpc0FjdGl2ZSIsImlzRGlzYWJsZWQiLCJ0b29sdGlwVGV4dCIsInN0eWxlIiwib25DbGlja0NhbGxiYWNrIiwidXNlQ2FsbGJhY2siLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY29udGVudCIsImNyZWF0ZUVsZW1lbnQiLCJjdXJzb3IiLCJvcGFjaXR5IiwiaGVpZ2h0IiwidHlwZSIsImNoZWNrZWQiLCJCb29sZWFuIiwiZGlzYWJsZWQiLCJpZCIsInNlY29uZGFyeSIsIkFycm93UmlnaHQiLCJDaGlsZHJlbiIsIm1hcCIsInJlbmRlciIsImRpc3BsYXlOYW1lIiwiU3R5bGVkQWN0aW9uUGFuZWwiLCJkaXJlY3Rpb24iLCJkcm9wZG93bkxpc3RTaGFkb3ciLCJ0cmFuc2l0aW9uU2xvdyIsInBhbmVsSGVhZGVySWNvbiIsIkFjdGlvblBhbmVsIiwiX3JlZjIiLCJfcmVmMiRkaXJlY3Rpb24iLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vYWN0aW9uLXBhbmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCBQcm9wc1dpdGhDaGlsZHJlbiwgRWxlbWVudFR5cGUsIENTU1Byb3BlcnRpZXMsIFJlYWN0Tm9kZX0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwge0lTdHlsZWRDb21wb25lbnR9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7QXJyb3dSaWdodH0gZnJvbSAnLi9pY29ucyc7XG5pbXBvcnQgQ2hlY2tib3ggZnJvbSAnLi9zd2l0Y2gnO1xuaW1wb3J0IHtCYXNlQ29tcG9uZW50UHJvcHN9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCBUaXBweVRvb2x0aXAgZnJvbSAnLi90aXBweS10b29sdGlwJztcblxuZXhwb3J0IHR5cGUgQWN0aW9uUGFuZWxQcm9wcyA9IFByb3BzV2l0aENoaWxkcmVuPHtcbiAgY29sb3I/OiBzdHJpbmc7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgZGlyZWN0aW9uPzogQ1NTUHJvcGVydGllc1snZGlyZWN0aW9uJ107XG59PjtcblxuZXhwb3J0IHR5cGUgQWN0aW9uUGFuZWxJdGVtUHJvcHMgPSBQcm9wc1dpdGhDaGlsZHJlbjx7XG4gIGNvbG9yPzogc3RyaW5nO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIEljb24/OiBFbGVtZW50VHlwZTtcbiAgbGFiZWw6IHN0cmluZztcbiAgb25DbGljaz86ICgpID0+IHZvaWQ7XG4gIGlzU2VsZWN0aW9uPzogYm9vbGVhbjtcbiAgaXNBY3RpdmU/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgdG9vbHRpcFRleHQ/OiBzdHJpbmcgfCBudWxsO1xuICBzdHlsZT86IENTU1Byb3BlcnRpZXM7XG59PjtcblxuY29uc3QgU3R5bGVkSXRlbSA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gIHBhZGRpbmc6IDhweCAxNnB4IDhweCA4cHg7XG4gIG1pbi1oZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuYWN0aW9uUGFuZWxIZWlnaHR9cHg7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmRyb3Bkb3duTGlzdEJnZH07XG4gIG1heC13aWR0aDogMjAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAke3Byb3BzID0+IChwcm9wcy5jb2xvciA/IGBib3JkZXItbGVmdDogM3B4IHNvbGlkIHJnYigke3Byb3BzLmNvbG9yfSk7YCA6ICcnKX0gJjpob3ZlciB7XG4gICAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudGV4dENvbG9ySGx9O1xuICAgIC5uZXN0ZWQtZ3JvdXAge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG5cbiAgLmxhYmVsIHtcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIH1cblxuICAubGFiZWwtaWNvbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgICBtYXJnaW4tYm90dG9tOiAtMnB4O1xuICB9XG4gIC5pY29uIHtcbiAgICB3aWR0aDogMThweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgLm5lc3RlZC1ncm91cCB7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudGV4dENvbG9yfTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMTAwJTtcbiAgICB0b3A6IDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcblxuICAgIGxhYmVsIHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IFN0eWxlZENoZWNrZWRib3ggPSBzdHlsZWQoQ2hlY2tib3gpYFxuICBsYWJlbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3J9O1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMTJweDtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHdpZHRoOiAxMnB4O1xuICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5kcm9wZG93bkxpc3RCZ2R9O1xuICAgIH1cbiAgICAmOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvckhsfTtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IHJlbmRlckNoaWxkcmVuID0gKGNoaWxkOiBSZWFjdE5vZGUsIGluZGV4OiBudW1iZXIpID0+XG4gIGNoaWxkICYmXG4gIFJlYWN0LmlzVmFsaWRFbGVtZW50PGFueT4oY2hpbGQpICYmXG4gIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwge1xuICAgIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgIGlmIChjaGlsZC5wcm9wcy5vbkNsaWNrKSB7XG4gICAgICAgIGNoaWxkLnByb3BzLm9uQ2xpY2soaW5kZXgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgY2xhc3NOYW1lOiBjbGFzc25hbWVzKCdhY3Rpb24tcGFuZWwtaXRlbScsIGNoaWxkLnByb3BzLmNsYXNzTmFtZSlcbiAgfSk7XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25QYW5lbEl0ZW0gPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGNoaWxkcmVuLFxuICAgIGNvbG9yLFxuICAgIGNsYXNzTmFtZSxcbiAgICBJY29uLFxuICAgIGxhYmVsLFxuICAgIG9uQ2xpY2ssXG4gICAgaXNTZWxlY3Rpb24sXG4gICAgaXNBY3RpdmUsXG4gICAgaXNEaXNhYmxlZCxcbiAgICB0b29sdGlwVGV4dCxcbiAgICBzdHlsZVxuICB9OiBBY3Rpb25QYW5lbEl0ZW1Qcm9wcykgPT4ge1xuICAgIGNvbnN0IG9uQ2xpY2tDYWxsYmFjayA9IHVzZUNhbGxiYWNrKFxuICAgICAgZXZlbnQgPT4ge1xuICAgICAgICBpZiAoaXNEaXNhYmxlZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgb25DbGljaz8uKCk7XG4gICAgICB9LFxuICAgICAgW29uQ2xpY2ssIGlzRGlzYWJsZWRdXG4gICAgKTtcblxuICAgIGNvbnN0IGNvbnRlbnQgPSAoXG4gICAgICA8U3R5bGVkSXRlbVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgb25DbGljaz17b25DbGlja0NhbGxiYWNrfVxuICAgICAgICBjb2xvcj17Y29sb3J9XG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgLi4uKGlzRGlzYWJsZWQgPyB7Y3Vyc29yOiAnbm90LWFsbG93ZWQnLCBvcGFjaXR5OiAwLjV9IDoge2N1cnNvcjogJ3BvaW50ZXInfSksXG4gICAgICAgICAgLi4uc3R5bGVcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge0ljb24gPyAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpY29uXCI+XG4gICAgICAgICAgICA8SWNvbiBoZWlnaHQ9XCIxNnB4XCIgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIHtpc1NlbGVjdGlvbiA/IChcbiAgICAgICAgICA8U3R5bGVkQ2hlY2tlZGJveFxuICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgIGNoZWNrZWQ9e0Jvb2xlYW4oaXNBY3RpdmUpfVxuICAgICAgICAgICAgZGlzYWJsZWQ9e0Jvb2xlYW4oaXNEaXNhYmxlZCl9XG4gICAgICAgICAgICBpZD17YHN3aXRjaC0ke2xhYmVsfWB9XG4gICAgICAgICAgICBzZWNvbmRhcnlcbiAgICAgICAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgICAgICAvPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsXCI+e2xhYmVsfTwvc3Bhbj5cbiAgICAgICAgKX1cbiAgICAgICAge2NoaWxkcmVuID8gKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxhYmVsLWljb25cIj5cbiAgICAgICAgICAgICAgPEFycm93UmlnaHQgaGVpZ2h0PVwiMTZweFwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHshaXNEaXNhYmxlZCA/IChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuZXN0ZWQtZ3JvdXBcIj57UmVhY3QuQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCByZW5kZXJDaGlsZHJlbil9PC9kaXY+XG4gICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1N0eWxlZEl0ZW0+XG4gICAgKTtcbiAgICByZXR1cm4gdG9vbHRpcFRleHQgPyAoXG4gICAgICA8VGlwcHlUb29sdGlwIHJlbmRlcj17KCkgPT4gPGRpdj57dG9vbHRpcFRleHR9PC9kaXY+fT57Y29udGVudH08L1RpcHB5VG9vbHRpcD5cbiAgICApIDogKFxuICAgICAgY29udGVudFxuICAgICk7XG4gIH1cbik7XG5cbkFjdGlvblBhbmVsSXRlbS5kaXNwbGF5TmFtZSA9ICdBY3Rpb25QYW5lbEl0ZW0nO1xuXG5leHBvcnQgdHlwZSBTdHlsZWRBY3Rpb25QYW5lbFByb3BzID0gQmFzZUNvbXBvbmVudFByb3BzICYge1xuICBkaXJlY3Rpb24/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBTdHlsZWRBY3Rpb25QYW5lbDogSVN0eWxlZENvbXBvbmVudDxcbiAgJ3dlYicsXG4gIFN0eWxlZEFjdGlvblBhbmVsUHJvcHNcbj4gPSBzdHlsZWQuZGl2PFN0eWxlZEFjdGlvblBhbmVsUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5kaXJlY3Rpb259O1xuICBib3gtc2hhZG93OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmRyb3Bkb3duTGlzdFNoYWRvd307XG4gIHRyYW5zaXRpb246ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudHJhbnNpdGlvblNsb3d9O1xuICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3J9O1xuXG4gIC5hY3Rpb24tcGFuZWwtaXRlbSB7XG4gICAgJHtwcm9wcyA9PlxuICAgICAgcHJvcHMuZGlyZWN0aW9uID09PSAnY29sdW1uJ1xuICAgICAgICA/IGBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtwcm9wcy50aGVtZS5wYW5lbEhlYWRlckljb259YFxuICAgICAgICA6IGBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAke3Byb3BzLnRoZW1lLnBhbmVsSGVhZGVySWNvbn1gfSAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuYDtcblxuLy8gUmVhY3QgY29tcG91bmQgZWxlbWVudCBodHRwczovL21lZGl1bS5jb20vQERhbmVfcy9yZWFjdC1qcy1jb21wb3VuZC1jb21wb25lbnRzLWE2ZTU0YjVjOTk5MlxuLy8gQHRzLWV4cGVjdC1lcnJvciBsb29rcyBsaWtlIG5vdCB2YWxpZCBkZWZhdWx0IHZhbHVlIGZvciBkaXJlY3Rpb24gcHJvcFxuY29uc3QgQWN0aW9uUGFuZWwgPSAoe2NoaWxkcmVuLCBjbGFzc05hbWUsIGRpcmVjdGlvbiA9ICdjb2x1bW4nfTogQWN0aW9uUGFuZWxQcm9wcykgPT4gKFxuICA8U3R5bGVkQWN0aW9uUGFuZWwgY2xhc3NOYW1lPXtjbGFzc05hbWV9IGRpcmVjdGlvbj17ZGlyZWN0aW9ufT5cbiAgICB7UmVhY3QuQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCByZW5kZXJDaGlsZHJlbil9XG4gIDwvU3R5bGVkQWN0aW9uUGFuZWw+XG4pO1xuXG5BY3Rpb25QYW5lbC5kaXNwbGF5TmFtZSA9ICdBY3Rpb25QYW5lbCc7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