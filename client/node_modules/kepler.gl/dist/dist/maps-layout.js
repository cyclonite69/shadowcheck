"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = MapsLayoutFactory;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _mapViewStateContext = require("./map-view-state-context");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _callSuper(t, o, e) {
  return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  })();
}
var Outer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n"])));
MapsLayoutFactory.deps = [];
function MapsLayoutFactory() {
  var MapsLayout = /*#__PURE__*/function (_React$Component) {
    function MapsLayout() {
      (0, _classCallCheck2["default"])(this, MapsLayout);
      return _callSuper(this, MapsLayout, arguments);
    }
    (0, _inherits2["default"])(MapsLayout, _React$Component);
    return (0, _createClass2["default"])(MapsLayout, [{
      key: "render",
      value: function render() {
        return /*#__PURE__*/_react["default"].createElement(Outer, {
          className: this.props.className
        }, /*#__PURE__*/_react["default"].createElement(_mapViewStateContext.MapViewStateContextProvider, {
          mapState: this.props.mapState
        }, this.props.children));
      }
    }]);
  }(_react["default"].Component);
  return MapsLayout;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX21hcFZpZXdTdGF0ZUNvbnRleHQiLCJfdGVtcGxhdGVPYmplY3QiLCJfY2FsbFN1cGVyIiwidCIsIm8iLCJlIiwiX2dldFByb3RvdHlwZU9mMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3IiLCJhcHBseSIsIkJvb2xlYW4iLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIiwiY2FsbCIsIk91dGVyIiwiZGl2IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJNYXBzTGF5b3V0RmFjdG9yeSIsImRlcHMiLCJNYXBzTGF5b3V0IiwiX1JlYWN0JENvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjazIiLCJhcmd1bWVudHMiLCJfaW5oZXJpdHMyIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInByb3BzIiwiTWFwVmlld1N0YXRlQ29udGV4dFByb3ZpZGVyIiwibWFwU3RhdGUiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCJdLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXBzLWxheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge01hcFN0YXRlfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuaW1wb3J0IHtNYXBWaWV3U3RhdGVDb250ZXh0UHJvdmlkZXJ9IGZyb20gJy4vbWFwLXZpZXctc3RhdGUtY29udGV4dCc7XG5cbmNvbnN0IE91dGVyID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuYDtcblxuTWFwc0xheW91dEZhY3RvcnkuZGVwcyA9IFtdO1xuXG5pbnRlcmZhY2UgTWFwc0xheW91dFByb3BzIHtcbiAgbWFwU3RhdGU6IE1hcFN0YXRlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNYXBzTGF5b3V0RmFjdG9yeSgpOiBSZWFjdC5Db21wb25lbnRUeXBlPE1hcHNMYXlvdXRQcm9wcz4ge1xuICBjbGFzcyBNYXBzTGF5b3V0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PE1hcHNMYXlvdXRQcm9wcz4ge1xuICAgIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxPdXRlciBjbGFzc05hbWU9e3RoaXMucHJvcHMuY2xhc3NOYW1lfT5cbiAgICAgICAgICA8TWFwVmlld1N0YXRlQ29udGV4dFByb3ZpZGVyIG1hcFN0YXRlPXt0aGlzLnByb3BzLm1hcFN0YXRlfT5cbiAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgIDwvTWFwVmlld1N0YXRlQ29udGV4dFByb3ZpZGVyPlxuICAgICAgICA8L091dGVyPlxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIE1hcHNMYXlvdXQ7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBQSxpQkFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBSUEsSUFBQUUsb0JBQUEsR0FBQUYsT0FBQTtBQUFxRSxJQUFBRyxlQUFBLEVBUnJFO0FBQ0E7QUFBQSxTQUFBQyxXQUFBQyxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQTtFQUFBLE9BQUFELENBQUEsT0FBQUUsZ0JBQUEsYUFBQUYsQ0FBQSxPQUFBRywyQkFBQSxhQUFBSixDQUFBLEVBQUFLLHlCQUFBLEtBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBTixDQUFBLEVBQUFDLENBQUEsWUFBQUMsZ0JBQUEsYUFBQUgsQ0FBQSxFQUFBUSxXQUFBLElBQUFQLENBQUEsQ0FBQVEsS0FBQSxDQUFBVCxDQUFBLEVBQUFFLENBQUE7QUFBQTtBQUFBLFNBQUFHLDBCQUFBO0VBQUE7SUFBQSxJQUFBTCxDQUFBLElBQUFVLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVAsT0FBQSxDQUFBQyxTQUFBLENBQUFHLE9BQUE7RUFBQSxTQUFBVixDQUFBO0VBQUEsUUFBQUsseUJBQUEsWUFBQUEsMEJBQUE7SUFBQSxTQUFBTCxDQUFBO0VBQUE7QUFBQTtBQVNBLElBQU1jLEtBQUssR0FBR3JCLGlCQUFBLFdBQU0sQ0FBQ3NCLEdBQUcsQ0FBQWpCLGVBQUEsS0FBQUEsZUFBQSxPQUFBa0IsdUJBQUEsZ0dBS3ZCO0FBRURDLGlCQUFpQixDQUFDQyxJQUFJLEdBQUcsRUFBRTtBQVFaLFNBQVNELGlCQUFpQkEsQ0FBQSxFQUF5QztFQUFBLElBQzFFRSxVQUFVLDBCQUFBQyxnQkFBQTtJQUFBLFNBQUFELFdBQUE7TUFBQSxJQUFBRSxnQkFBQSxtQkFBQUYsVUFBQTtNQUFBLE9BQUFwQixVQUFBLE9BQUFvQixVQUFBLEVBQUFHLFNBQUE7SUFBQTtJQUFBLElBQUFDLFVBQUEsYUFBQUosVUFBQSxFQUFBQyxnQkFBQTtJQUFBLFdBQUFJLGFBQUEsYUFBQUwsVUFBQTtNQUFBTSxHQUFBO01BQUFDLEtBQUEsRUFDZCxTQUFBQyxNQUFNQSxDQUFBLEVBQUc7UUFDUCxvQkFDRS9CLE1BQUEsWUFBQWdDLGFBQUEsQ0FBQ2QsS0FBSztVQUFDZSxTQUFTLEVBQUUsSUFBSSxDQUFDQyxLQUFLLENBQUNEO1FBQVUsZ0JBQ3JDakMsTUFBQSxZQUFBZ0MsYUFBQSxDQUFDL0Isb0JBQUEsQ0FBQWtDLDJCQUEyQjtVQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDRixLQUFLLENBQUNFO1FBQVMsR0FDeEQsSUFBSSxDQUFDRixLQUFLLENBQUNHLFFBQ2UsQ0FDeEIsQ0FBQztNQUVaO0lBQUM7RUFBQSxFQVRzQnJDLE1BQUEsV0FBSyxDQUFDc0MsU0FBUztFQVd4QyxPQUFPZixVQUFVO0FBQ25CIiwiaWdub3JlTGlzdCI6W119