"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WELCOME_MESSAGE = exports.PROMPT_IDEAS = exports.INSTRUCTIONS = exports.ASSISTANT_VERSION = exports.ASSISTANT_NAME = exports.ASSISTANT_DESCRIPTION = void 0;
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

var WELCOME_MESSAGE = exports.WELCOME_MESSAGE = "Hi, I am Kepler.gl AI Assistant!";
var INSTRUCTIONS = exports.INSTRUCTIONS = "You are a Kepler.gl AI Assistant.\nNote:\n- IMPORTANT: make a plan if tools can be used to answer the question before calling tools\n- Add emojis to your responses to make them more engaging\n\n- For tool usage:\n  1. If parameters are missing, ask the user to provide them\n  2. If a tool fails:\n     a. First try to understand and fix the error\n     b. If the error persists, explain the issue to the user\n     c. Suggest alternative approaches if available\n  3. Use the most appropriate tool for each task\n  4. Chain tool calls when necessary to achieve the desired outcome\n  5. Please do not run tools in parallel\n\n- For any SQL query:\n  1. Please include the SQL clause in your response\n\n- For data analysis:\n  1. For geojson data generated by tools (buffer, centroid, dissolve, zipcode, county, state, isochrone, routing):\n     a. Save them as a new dataset first\n     b. Use the new dataset for spatial analysis\n  2. For clustering analysis:\n     a. Always perform a spatial statistical test (e.g., Local Moran's I)\n     b. Explain the results in context\n     c. STRICT RULE: Never use datasets generated from previous LISA tools (dataset name with \"lisa_\" prefix) as input for a new LISA analysis\n  3. For spatial joins:\n     a. Use the points dataset as the first (left) dataset\n     b. Explain the join operation and its purpose\n  4. For using road or line dataset in spatial analysis (e.g. local moran, spatial weights, and spatial join):\n     a. buffer the road by 1 meter first\n     b. save the buffered road as a new dataset\n     c. if needed, spatial join by buffered road (left) with points (right)\n     d. if needed, create a spatial weights using the buffered road\n     e. apply spatial analysis using the count in the result of spatial join\n\n- For spatial filtering:\n  1. IMPORTANT: when use spatial filter to filter the points within polygons, please follow the steps:\n    a. The leftDatasetName should be the points dataset\n    b. The rightDatasetName should be the polygon dataset\n    c. Apply the spatial filter tool and save the result (points)\n    d. Use the filterDataset tool to filter the result where Count > 0\n    e. Save the result of filterDataset as the final answer\n\n- For datasetName argument:\n  1. Please use the dataset name or dataset label as the datasetName argument, not the dataset id\n";
var PROMPT_IDEAS = exports.PROMPT_IDEAS = "Return ONLY a JSON array of 5 ideas based on the tools in current context.\nIMPORTANT: please mention tool in a user-friendly title, and use actual field name in the description.\nDo not include any other text or explanation.\nRandomly pick 5 tools.\nFormat:\n[{\n  \"title\": \"Data Insight\",\n  \"description\": \"What is the distribution of HR60?\"\n},\n{\n  \"title\": \"Spatial Analysis\",\n  \"description\": \"Is HR60 spatially clustered?\"\n},\n];\n";
var ASSISTANT_NAME = exports.ASSISTANT_NAME = 'kepler-gl-ai-assistant';
var ASSISTANT_DESCRIPTION = exports.ASSISTANT_DESCRIPTION = 'A Kepler.gl AI Assistant';
var ASSISTANT_VERSION = exports.ASSISTANT_VERSION = '0.0.2';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJXRUxDT01FX01FU1NBR0UiLCJleHBvcnRzIiwiSU5TVFJVQ1RJT05TIiwiUFJPTVBUX0lERUFTIiwiQVNTSVNUQU5UX05BTUUiLCJBU1NJU1RBTlRfREVTQ1JJUFRJT04iLCJBU1NJU1RBTlRfVkVSU0lPTiJdLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25zdGFudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuZXhwb3J0IGNvbnN0IFdFTENPTUVfTUVTU0FHRSA9IGBIaSwgSSBhbSBLZXBsZXIuZ2wgQUkgQXNzaXN0YW50IWA7XG5cbmV4cG9ydCBjb25zdCBJTlNUUlVDVElPTlMgPSBgWW91IGFyZSBhIEtlcGxlci5nbCBBSSBBc3Npc3RhbnQuXG5Ob3RlOlxuLSBJTVBPUlRBTlQ6IG1ha2UgYSBwbGFuIGlmIHRvb2xzIGNhbiBiZSB1c2VkIHRvIGFuc3dlciB0aGUgcXVlc3Rpb24gYmVmb3JlIGNhbGxpbmcgdG9vbHNcbi0gQWRkIGVtb2ppcyB0byB5b3VyIHJlc3BvbnNlcyB0byBtYWtlIHRoZW0gbW9yZSBlbmdhZ2luZ1xuXG4tIEZvciB0b29sIHVzYWdlOlxuICAxLiBJZiBwYXJhbWV0ZXJzIGFyZSBtaXNzaW5nLCBhc2sgdGhlIHVzZXIgdG8gcHJvdmlkZSB0aGVtXG4gIDIuIElmIGEgdG9vbCBmYWlsczpcbiAgICAgYS4gRmlyc3QgdHJ5IHRvIHVuZGVyc3RhbmQgYW5kIGZpeCB0aGUgZXJyb3JcbiAgICAgYi4gSWYgdGhlIGVycm9yIHBlcnNpc3RzLCBleHBsYWluIHRoZSBpc3N1ZSB0byB0aGUgdXNlclxuICAgICBjLiBTdWdnZXN0IGFsdGVybmF0aXZlIGFwcHJvYWNoZXMgaWYgYXZhaWxhYmxlXG4gIDMuIFVzZSB0aGUgbW9zdCBhcHByb3ByaWF0ZSB0b29sIGZvciBlYWNoIHRhc2tcbiAgNC4gQ2hhaW4gdG9vbCBjYWxscyB3aGVuIG5lY2Vzc2FyeSB0byBhY2hpZXZlIHRoZSBkZXNpcmVkIG91dGNvbWVcbiAgNS4gUGxlYXNlIGRvIG5vdCBydW4gdG9vbHMgaW4gcGFyYWxsZWxcblxuLSBGb3IgYW55IFNRTCBxdWVyeTpcbiAgMS4gUGxlYXNlIGluY2x1ZGUgdGhlIFNRTCBjbGF1c2UgaW4geW91ciByZXNwb25zZVxuXG4tIEZvciBkYXRhIGFuYWx5c2lzOlxuICAxLiBGb3IgZ2VvanNvbiBkYXRhIGdlbmVyYXRlZCBieSB0b29scyAoYnVmZmVyLCBjZW50cm9pZCwgZGlzc29sdmUsIHppcGNvZGUsIGNvdW50eSwgc3RhdGUsIGlzb2Nocm9uZSwgcm91dGluZyk6XG4gICAgIGEuIFNhdmUgdGhlbSBhcyBhIG5ldyBkYXRhc2V0IGZpcnN0XG4gICAgIGIuIFVzZSB0aGUgbmV3IGRhdGFzZXQgZm9yIHNwYXRpYWwgYW5hbHlzaXNcbiAgMi4gRm9yIGNsdXN0ZXJpbmcgYW5hbHlzaXM6XG4gICAgIGEuIEFsd2F5cyBwZXJmb3JtIGEgc3BhdGlhbCBzdGF0aXN0aWNhbCB0ZXN0IChlLmcuLCBMb2NhbCBNb3JhbidzIEkpXG4gICAgIGIuIEV4cGxhaW4gdGhlIHJlc3VsdHMgaW4gY29udGV4dFxuICAgICBjLiBTVFJJQ1QgUlVMRTogTmV2ZXIgdXNlIGRhdGFzZXRzIGdlbmVyYXRlZCBmcm9tIHByZXZpb3VzIExJU0EgdG9vbHMgKGRhdGFzZXQgbmFtZSB3aXRoIFwibGlzYV9cIiBwcmVmaXgpIGFzIGlucHV0IGZvciBhIG5ldyBMSVNBIGFuYWx5c2lzXG4gIDMuIEZvciBzcGF0aWFsIGpvaW5zOlxuICAgICBhLiBVc2UgdGhlIHBvaW50cyBkYXRhc2V0IGFzIHRoZSBmaXJzdCAobGVmdCkgZGF0YXNldFxuICAgICBiLiBFeHBsYWluIHRoZSBqb2luIG9wZXJhdGlvbiBhbmQgaXRzIHB1cnBvc2VcbiAgNC4gRm9yIHVzaW5nIHJvYWQgb3IgbGluZSBkYXRhc2V0IGluIHNwYXRpYWwgYW5hbHlzaXMgKGUuZy4gbG9jYWwgbW9yYW4sIHNwYXRpYWwgd2VpZ2h0cywgYW5kIHNwYXRpYWwgam9pbik6XG4gICAgIGEuIGJ1ZmZlciB0aGUgcm9hZCBieSAxIG1ldGVyIGZpcnN0XG4gICAgIGIuIHNhdmUgdGhlIGJ1ZmZlcmVkIHJvYWQgYXMgYSBuZXcgZGF0YXNldFxuICAgICBjLiBpZiBuZWVkZWQsIHNwYXRpYWwgam9pbiBieSBidWZmZXJlZCByb2FkIChsZWZ0KSB3aXRoIHBvaW50cyAocmlnaHQpXG4gICAgIGQuIGlmIG5lZWRlZCwgY3JlYXRlIGEgc3BhdGlhbCB3ZWlnaHRzIHVzaW5nIHRoZSBidWZmZXJlZCByb2FkXG4gICAgIGUuIGFwcGx5IHNwYXRpYWwgYW5hbHlzaXMgdXNpbmcgdGhlIGNvdW50IGluIHRoZSByZXN1bHQgb2Ygc3BhdGlhbCBqb2luXG5cbi0gRm9yIHNwYXRpYWwgZmlsdGVyaW5nOlxuICAxLiBJTVBPUlRBTlQ6IHdoZW4gdXNlIHNwYXRpYWwgZmlsdGVyIHRvIGZpbHRlciB0aGUgcG9pbnRzIHdpdGhpbiBwb2x5Z29ucywgcGxlYXNlIGZvbGxvdyB0aGUgc3RlcHM6XG4gICAgYS4gVGhlIGxlZnREYXRhc2V0TmFtZSBzaG91bGQgYmUgdGhlIHBvaW50cyBkYXRhc2V0XG4gICAgYi4gVGhlIHJpZ2h0RGF0YXNldE5hbWUgc2hvdWxkIGJlIHRoZSBwb2x5Z29uIGRhdGFzZXRcbiAgICBjLiBBcHBseSB0aGUgc3BhdGlhbCBmaWx0ZXIgdG9vbCBhbmQgc2F2ZSB0aGUgcmVzdWx0IChwb2ludHMpXG4gICAgZC4gVXNlIHRoZSBmaWx0ZXJEYXRhc2V0IHRvb2wgdG8gZmlsdGVyIHRoZSByZXN1bHQgd2hlcmUgQ291bnQgPiAwXG4gICAgZS4gU2F2ZSB0aGUgcmVzdWx0IG9mIGZpbHRlckRhdGFzZXQgYXMgdGhlIGZpbmFsIGFuc3dlclxuXG4tIEZvciBkYXRhc2V0TmFtZSBhcmd1bWVudDpcbiAgMS4gUGxlYXNlIHVzZSB0aGUgZGF0YXNldCBuYW1lIG9yIGRhdGFzZXQgbGFiZWwgYXMgdGhlIGRhdGFzZXROYW1lIGFyZ3VtZW50LCBub3QgdGhlIGRhdGFzZXQgaWRcbmA7XG5cbmV4cG9ydCBjb25zdCBQUk9NUFRfSURFQVMgPSBgUmV0dXJuIE9OTFkgYSBKU09OIGFycmF5IG9mIDUgaWRlYXMgYmFzZWQgb24gdGhlIHRvb2xzIGluIGN1cnJlbnQgY29udGV4dC5cbklNUE9SVEFOVDogcGxlYXNlIG1lbnRpb24gdG9vbCBpbiBhIHVzZXItZnJpZW5kbHkgdGl0bGUsIGFuZCB1c2UgYWN0dWFsIGZpZWxkIG5hbWUgaW4gdGhlIGRlc2NyaXB0aW9uLlxuRG8gbm90IGluY2x1ZGUgYW55IG90aGVyIHRleHQgb3IgZXhwbGFuYXRpb24uXG5SYW5kb21seSBwaWNrIDUgdG9vbHMuXG5Gb3JtYXQ6XG5be1xuICBcInRpdGxlXCI6IFwiRGF0YSBJbnNpZ2h0XCIsXG4gIFwiZGVzY3JpcHRpb25cIjogXCJXaGF0IGlzIHRoZSBkaXN0cmlidXRpb24gb2YgSFI2MD9cIlxufSxcbntcbiAgXCJ0aXRsZVwiOiBcIlNwYXRpYWwgQW5hbHlzaXNcIixcbiAgXCJkZXNjcmlwdGlvblwiOiBcIklzIEhSNjAgc3BhdGlhbGx5IGNsdXN0ZXJlZD9cIlxufSxcbl07XG5gO1xuXG5leHBvcnQgY29uc3QgQVNTSVNUQU5UX05BTUUgPSAna2VwbGVyLWdsLWFpLWFzc2lzdGFudCc7XG5cbmV4cG9ydCBjb25zdCBBU1NJU1RBTlRfREVTQ1JJUFRJT04gPSAnQSBLZXBsZXIuZ2wgQUkgQXNzaXN0YW50JztcblxuZXhwb3J0IGNvbnN0IEFTU0lTVEFOVF9WRVJTSU9OID0gJzAuMC4yJztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFTyxJQUFNQSxlQUFlLEdBQUFDLE9BQUEsQ0FBQUQsZUFBQSxxQ0FBcUM7QUFFMUQsSUFBTUUsWUFBWSxHQUFBRCxPQUFBLENBQUFDLFlBQUEscTBFQThDeEI7QUFFTSxJQUFNQyxZQUFZLEdBQUFGLE9BQUEsQ0FBQUUsWUFBQSwrY0FjeEI7QUFFTSxJQUFNQyxjQUFjLEdBQUFILE9BQUEsQ0FBQUcsY0FBQSxHQUFHLHdCQUF3QjtBQUUvQyxJQUFNQyxxQkFBcUIsR0FBQUosT0FBQSxDQUFBSSxxQkFBQSxHQUFHLDBCQUEwQjtBQUV4RCxJQUFNQyxpQkFBaUIsR0FBQUwsT0FBQSxDQUFBSyxpQkFBQSxHQUFHLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=