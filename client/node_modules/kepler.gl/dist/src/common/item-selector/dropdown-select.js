"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.StyledDropdownSelect = exports.DropdownSelectValue = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _src = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/common-utils/src");
var _src2 = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _icons = require("../icons");
var _dropdownList = require("./dropdown-list");
var _styledComponents2 = require("../styled-components");
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledDropdownSelect = exports.StyledDropdownSelect = _styledComponents["default"].div.withConfig({
  shouldForwardProp: _styledComponents2.shouldForwardProp
}).attrs({
  className: 'item-selector__dropdown'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  ", ";\n\n  height: ", ";\n\n  .list__item__anchor {\n    ", ";\n  }\n"])), function (props) {
  return props.inputTheme === 'secondary' ? props.theme.secondaryInput : props.inputTheme === 'light' ? props.theme.inputLT : props.theme.input;
}, function (props) {
  return props.size === 'small' ? props.theme.inputBoxHeightSmall : props.theme.inputBoxHeight;
}, function (props) {
  return props.theme.dropdownListAnchor;
});
var DropdownSelectValue = exports.DropdownSelectValue = _styledComponents["default"].span.withConfig({
  shouldForwardProp: _styledComponents2.shouldForwardProp
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  color: ", ";\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  .list__item {\n    ", ";\n  }\n\n  .list__item__anchor {\n    ", ";\n  }\n"])), function (props) {
  return props.hasPlaceholder && props.inputTheme === 'light' ? props.theme.selectColorPlaceHolderLT : props.hasPlaceholder ? props.theme.selectColorPlaceHolder : props.inputTheme === 'light' ? props.theme.selectColorLT : props.theme.selectColor;
}, function (props) {
  return props.inputTheme === 'light' ? props.theme.dropdownListItemLT : props.theme.dropdownListItem;
}, function (props) {
  return props.inputTheme === 'light' ? props.theme.dropdownListAnchorLT : props.theme.dropdownListAnchor;
});
var DropdownSelectActionRight = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  margin-right: 2px;\n  display: flex;\n  color: ", ";\n\n  &:hover {\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.subtextColor;
}, function (props) {
  return props.theme.textColor;
});
function DropdownSelect(_ref) {
  var className = _ref.className,
    displayOption = _ref.displayOption,
    disabled = _ref.disabled,
    onClick = _ref.onClick,
    inputTheme = _ref.inputTheme,
    size = _ref.size,
    value = _ref.value,
    placeholder = _ref.placeholder,
    erasable = _ref.erasable,
    showArrow = _ref.showArrow,
    onErase = _ref.onErase,
    showDropdown = _ref.showDropdown,
    _ref$DropDownLineItem = _ref.DropDownLineItemRenderComponent,
    DropDownLineItemRenderComponent = _ref$DropDownLineItem === void 0 ? _dropdownList.ListItem : _ref$DropDownLineItem;
  var hasValue = (0, _src.notNullorUndefined)(value);
  return /*#__PURE__*/_react["default"].createElement(StyledDropdownSelect, {
    className: className,
    onClick: onClick,
    inputTheme: inputTheme,
    size: size
  }, /*#__PURE__*/_react["default"].createElement(DropdownSelectValue, {
    hasPlaceholder: !hasValue,
    inputTheme: inputTheme,
    className: "item-selector__dropdown__value"
  }, hasValue ? /*#__PURE__*/_react["default"].createElement(DropDownLineItemRenderComponent, {
    displayOption: displayOption,
    value: value,
    disabled: Boolean(disabled),
    light: inputTheme === 'light'
  }) : /*#__PURE__*/_react["default"].createElement(_src2.FormattedMessage, {
    id: placeholder || 'placeholder.selectValue'
  })), erasable && hasValue ? /*#__PURE__*/_react["default"].createElement(DropdownSelectActionRight, null, /*#__PURE__*/_react["default"].createElement(_icons.Delete, {
    height: "16px",
    onClick: onErase
  })) : showArrow ? /*#__PURE__*/_react["default"].createElement(DropdownSelectActionRight, null, /*#__PURE__*/_react["default"].createElement(_icons.ArrowDown, {
    height: "14px",
    onClick: showDropdown
  })) : null);
}
var _default = exports["default"] = DropdownSelect;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,