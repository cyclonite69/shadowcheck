"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.SYNC_TIMELINE_ANIMATION_ITEMS = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = require("../common/styled-components");
var _src = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _src2 = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/constants/src");
var _iconButton = _interopRequireDefault(require("./icon-button"));
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

var SYNC_TIMELINE_ANIMATION_ITEMS = exports.SYNC_TIMELINE_ANIMATION_ITEMS = (0, _defineProperty2["default"])((0, _defineProperty2["default"])({}, _src2.SYNC_TIMELINE_MODES.start, {
  id: _src2.SYNC_TIMELINE_MODES.start,
  content: function content() {
    return /*#__PURE__*/_react["default"].createElement("span", null, "Start");
  },
  tooltip: 'tooltip.syncTimelineStart'
}), _src2.SYNC_TIMELINE_MODES.end, {
  id: _src2.SYNC_TIMELINE_MODES.end,
  content: function content() {
    return /*#__PURE__*/_react["default"].createElement("span", null, "End");
  },
  tooltip: 'tooltip.syncTimelineEnd'
});
function SyncTimelineControlFactory() {
  var SyncTimelineControl = function SyncTimelineControl(_ref) {
    var _ref$syncTimelineAnim = _ref.syncTimelineAnimationItems,
      syncTimelineAnimationItems = _ref$syncTimelineAnim === void 0 ? SYNC_TIMELINE_ANIMATION_ITEMS : _ref$syncTimelineAnim,
      syncTimelineMode = _ref.syncTimelineMode,
      btnStyle = _ref.btnStyle,
      setFilterSyncTimelineMode = _ref.setFilterSyncTimelineMode;
    return /*#__PURE__*/_react["default"].createElement("div", null, Object.values(syncTimelineAnimationItems).filter(function (item, _index) {
      return item.id !== syncTimelineMode;
    }).map(function (item) {
      return /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
        key: item.id,
        "data-tip": true,
        "data-for": "".concat(item.id, "-tooltip"),
        className: "playback-control-button",
        onClick: function onClick() {
          return setFilterSyncTimelineMode(item.id);
        }
      }, btnStyle), /*#__PURE__*/_react["default"].createElement(item.content, null), item.tooltip ? /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
        id: "".concat(item.id, "-tooltip"),
        effect: "solid",
        place: "top"
      }, /*#__PURE__*/_react["default"].createElement(_src.FormattedMessage, {
        id: item.tooltip
      })) : null);
    }));
  };
  return SyncTimelineControl;
}
var _default = exports["default"] = SyncTimelineControlFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX3NyYyIsIl9zcmMyIiwiX2ljb25CdXR0b24iLCJTWU5DX1RJTUVMSU5FX0FOSU1BVElPTl9JVEVNUyIsImV4cG9ydHMiLCJfZGVmaW5lUHJvcGVydHkyIiwiU1lOQ19USU1FTElORV9NT0RFUyIsInN0YXJ0IiwiaWQiLCJjb250ZW50IiwiY3JlYXRlRWxlbWVudCIsInRvb2x0aXAiLCJlbmQiLCJTeW5jVGltZWxpbmVDb250cm9sRmFjdG9yeSIsIlN5bmNUaW1lbGluZUNvbnRyb2wiLCJfcmVmIiwiX3JlZiRzeW5jVGltZWxpbmVBbmltIiwic3luY1RpbWVsaW5lQW5pbWF0aW9uSXRlbXMiLCJzeW5jVGltZWxpbmVNb2RlIiwiYnRuU3R5bGUiLCJzZXRGaWx0ZXJTeW5jVGltZWxpbmVNb2RlIiwiT2JqZWN0IiwidmFsdWVzIiwiZmlsdGVyIiwiaXRlbSIsIl9pbmRleCIsIm1hcCIsIl9leHRlbmRzMiIsImtleSIsImNvbmNhdCIsImNsYXNzTmFtZSIsIm9uQ2xpY2siLCJUb29sdGlwIiwiZWZmZWN0IiwicGxhY2UiLCJGb3JtYXR0ZWRNZXNzYWdlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9zcmMvY29tbW9uL3N5bmMtdGltZWxpbmUtY29udHJvbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7VG9vbHRpcH0gZnJvbSAnLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7Rm9ybWF0dGVkTWVzc2FnZX0gZnJvbSAnQGtlcGxlci5nbC9sb2NhbGl6YXRpb24nO1xuaW1wb3J0IHtTWU5DX1RJTUVMSU5FX01PREVTfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuL2ljb24tYnV0dG9uJztcblxuZXhwb3J0IHR5cGUgU3luY1RpbWVsaW5lQW5pbWF0aW9uSXRlbSA9IHtcbiAgaWQ6IHN0cmluZztcbiAgY29udGVudDogUmVhY3QuRWxlbWVudFR5cGU7XG4gIHRvb2x0aXA6IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIFN5bmNUaW1lbGluZUNvbnRyb2xQcm9wcyA9IHtcbiAgc3luY1RpbWVsaW5lTW9kZTogc3RyaW5nO1xuICBzZXRGaWx0ZXJTeW5jVGltZWxpbmVNb2RlOiAoaWQ6IHN0cmluZykgPT4gdm9pZDtcbiAgc3luY1RpbWVsaW5lQW5pbWF0aW9uSXRlbXM6IFN5bmNUaW1lbGluZUFuaW1hdGlvbkl0ZW1bXTtcbiAgYnRuU3R5bGU6IFJlY29yZDxzdHJpbmcsIGFueT47XG59O1xuXG5leHBvcnQgY29uc3QgU1lOQ19USU1FTElORV9BTklNQVRJT05fSVRFTVM6IFJlY29yZDxcbiAgc3RyaW5nLFxuICB7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBjb250ZW50OiBSZWFjdC5FbGVtZW50VHlwZTtcbiAgICB0b29sdGlwOiBzdHJpbmc7XG4gIH1cbj4gPSB7XG4gIFtTWU5DX1RJTUVMSU5FX01PREVTLnN0YXJ0XToge1xuICAgIGlkOiBTWU5DX1RJTUVMSU5FX01PREVTLnN0YXJ0LFxuICAgIGNvbnRlbnQ6ICgpID0+IDxzcGFuPlN0YXJ0PC9zcGFuPixcbiAgICB0b29sdGlwOiAndG9vbHRpcC5zeW5jVGltZWxpbmVTdGFydCdcbiAgfSxcbiAgW1NZTkNfVElNRUxJTkVfTU9ERVMuZW5kXToge1xuICAgIGlkOiBTWU5DX1RJTUVMSU5FX01PREVTLmVuZCxcbiAgICBjb250ZW50OiAoKSA9PiA8c3Bhbj5FbmQ8L3NwYW4+LFxuICAgIHRvb2x0aXA6ICd0b29sdGlwLnN5bmNUaW1lbGluZUVuZCdcbiAgfVxufTtcblxuZnVuY3Rpb24gU3luY1RpbWVsaW5lQ29udHJvbEZhY3RvcnkoKSB7XG4gIGNvbnN0IFN5bmNUaW1lbGluZUNvbnRyb2wgPSAoe1xuICAgIHN5bmNUaW1lbGluZUFuaW1hdGlvbkl0ZW1zID0gU1lOQ19USU1FTElORV9BTklNQVRJT05fSVRFTVMsXG4gICAgc3luY1RpbWVsaW5lTW9kZSxcbiAgICBidG5TdHlsZSxcbiAgICBzZXRGaWx0ZXJTeW5jVGltZWxpbmVNb2RlXG4gIH0pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAge09iamVjdC52YWx1ZXMoc3luY1RpbWVsaW5lQW5pbWF0aW9uSXRlbXMpXG4gICAgICAgICAgLmZpbHRlcigoaXRlbSwgX2luZGV4KSA9PiBpdGVtLmlkICE9PSBzeW5jVGltZWxpbmVNb2RlKVxuICAgICAgICAgIC5tYXAoaXRlbSA9PiAoXG4gICAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgICBrZXk9e2l0ZW0uaWR9XG4gICAgICAgICAgICAgIGRhdGEtdGlwXG4gICAgICAgICAgICAgIGRhdGEtZm9yPXtgJHtpdGVtLmlkfS10b29sdGlwYH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicGxheWJhY2stY29udHJvbC1idXR0b25cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRGaWx0ZXJTeW5jVGltZWxpbmVNb2RlKGl0ZW0uaWQpfVxuICAgICAgICAgICAgICB7Li4uYnRuU3R5bGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxpdGVtLmNvbnRlbnQgLz5cbiAgICAgICAgICAgICAge2l0ZW0udG9vbHRpcCA/IChcbiAgICAgICAgICAgICAgICA8VG9vbHRpcCBpZD17YCR7aXRlbS5pZH0tdG9vbHRpcGB9IGVmZmVjdD1cInNvbGlkXCIgcGxhY2U9XCJ0b3BcIj5cbiAgICAgICAgICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXtpdGVtLnRvb2x0aXB9IC8+XG4gICAgICAgICAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgIDwvSWNvbkJ1dHRvbj5cbiAgICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIFN5bmNUaW1lbGluZUNvbnRyb2w7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN5bmNUaW1lbGluZUNvbnRyb2xGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsSUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsS0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksV0FBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBUEE7QUFDQTs7QUFxQk8sSUFBTUssNkJBT1osR0FBQUMsT0FBQSxDQUFBRCw2QkFBQSxPQUFBRSxnQkFBQSxpQkFBQUEsZ0JBQUEsaUJBQ0VDLHlCQUFtQixDQUFDQyxLQUFLLEVBQUc7RUFDM0JDLEVBQUUsRUFBRUYseUJBQW1CLENBQUNDLEtBQUs7RUFDN0JFLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFBO0lBQUEsb0JBQVFiLE1BQUEsWUFBQWMsYUFBQSxlQUFNLE9BQVcsQ0FBQztFQUFBO0VBQ2pDQyxPQUFPLEVBQUU7QUFDWCxDQUFDLEdBQ0FMLHlCQUFtQixDQUFDTSxHQUFHLEVBQUc7RUFDekJKLEVBQUUsRUFBRUYseUJBQW1CLENBQUNNLEdBQUc7RUFDM0JILE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFBO0lBQUEsb0JBQVFiLE1BQUEsWUFBQWMsYUFBQSxlQUFNLEtBQVMsQ0FBQztFQUFBO0VBQy9CQyxPQUFPLEVBQUU7QUFDWCxDQUFDLENBQ0Y7QUFFRCxTQUFTRSwwQkFBMEJBLENBQUEsRUFBRztFQUNwQyxJQUFNQyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQW1CQSxDQUFBQyxJQUFBLEVBS25CO0lBQUEsSUFBQUMscUJBQUEsR0FBQUQsSUFBQSxDQUpKRSwwQkFBMEI7TUFBMUJBLDBCQUEwQixHQUFBRCxxQkFBQSxjQUFHYiw2QkFBNkIsR0FBQWEscUJBQUE7TUFDMURFLGdCQUFnQixHQUFBSCxJQUFBLENBQWhCRyxnQkFBZ0I7TUFDaEJDLFFBQVEsR0FBQUosSUFBQSxDQUFSSSxRQUFRO01BQ1JDLHlCQUF5QixHQUFBTCxJQUFBLENBQXpCSyx5QkFBeUI7SUFFekIsb0JBQ0V4QixNQUFBLFlBQUFjLGFBQUEsY0FDR1csTUFBTSxDQUFDQyxNQUFNLENBQUNMLDBCQUEwQixDQUFDLENBQ3ZDTSxNQUFNLENBQUMsVUFBQ0MsSUFBSSxFQUFFQyxNQUFNO01BQUEsT0FBS0QsSUFBSSxDQUFDaEIsRUFBRSxLQUFLVSxnQkFBZ0I7SUFBQSxFQUFDLENBQ3REUSxHQUFHLENBQUMsVUFBQUYsSUFBSTtNQUFBLG9CQUNQNUIsTUFBQSxZQUFBYyxhQUFBLENBQUNSLFdBQUEsV0FBVSxNQUFBeUIsU0FBQTtRQUNUQyxHQUFHLEVBQUVKLElBQUksQ0FBQ2hCLEVBQUc7UUFDYixnQkFBUTtRQUNSLGVBQUFxQixNQUFBLENBQWFMLElBQUksQ0FBQ2hCLEVBQUUsYUFBVztRQUMvQnNCLFNBQVMsRUFBQyx5QkFBeUI7UUFDbkNDLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFBO1VBQUEsT0FBUVgseUJBQXlCLENBQUNJLElBQUksQ0FBQ2hCLEVBQUUsQ0FBQztRQUFBO01BQUMsR0FDOUNXLFFBQVEsZ0JBRVp2QixNQUFBLFlBQUFjLGFBQUEsQ0FBQ2MsSUFBSSxDQUFDZixPQUFPLE1BQUUsQ0FBQyxFQUNmZSxJQUFJLENBQUNiLE9BQU8sZ0JBQ1hmLE1BQUEsWUFBQWMsYUFBQSxDQUFDWCxpQkFBQSxDQUFBaUMsT0FBTztRQUFDeEIsRUFBRSxLQUFBcUIsTUFBQSxDQUFLTCxJQUFJLENBQUNoQixFQUFFLGFBQVc7UUFBQ3lCLE1BQU0sRUFBQyxPQUFPO1FBQUNDLEtBQUssRUFBQztNQUFLLGdCQUMzRHRDLE1BQUEsWUFBQWMsYUFBQSxDQUFDVixJQUFBLENBQUFtQyxnQkFBZ0I7UUFBQzNCLEVBQUUsRUFBRWdCLElBQUksQ0FBQ2I7TUFBUSxDQUFFLENBQzlCLENBQUMsR0FDUixJQUNNLENBQUM7SUFBQSxDQUNkLENBQ0EsQ0FBQztFQUVWLENBQUM7RUFFRCxPQUFPRyxtQkFBbUI7QUFDNUI7QUFBQyxJQUFBc0IsUUFBQSxHQUFBaEMsT0FBQSxjQUVjUywwQkFBMEIiLCJpZ25vcmVMaXN0IjpbXX0=