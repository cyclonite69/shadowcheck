"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _reactIntl = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react-intl");
var _src = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _styledComponents = require("./styled-components");
var _icons = require("./icons");
var _styledComponents2 = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _src2 = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/utils/src");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledInfoHelper = _styledComponents2["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: center;\n  margin-left: 10px;\n  color: ", ";\n  display: inline-flex;\n  .info-helper__content {\n    width: ", ";\n    max-width: ", ";\n  }\n  &:hover {\n    cursor: pointer;\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.labelColor;
}, function (props) {
  return props.width ? "".concat(props.width, "px") : 'auto';
}, function (props) {
  return props.width ? 'auto' : '100px';
}, function (props) {
  return props.theme.textColorHl;
});
function InfoHelperFactory() {
  var InfoHelper = function InfoHelper(_ref) {
    var description = _ref.description,
      property = _ref.property,
      containerClass = _ref.containerClass,
      width = _ref.width,
      id = _ref.id;
    // TODO: move intl out
    var intl = (0, _reactIntl.useIntl)();
    return /*#__PURE__*/_react["default"].createElement(StyledInfoHelper, {
      className: "info-helper ".concat(containerClass || ''),
      width: width,
      "data-tip": true,
      "data-for": id
    }, /*#__PURE__*/_react["default"].createElement(_icons.Docs, {
      height: "16px"
    }), /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
      id: id,
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "info-helper__content"
    }, description && /*#__PURE__*/_react["default"].createElement(_src.FormattedMessage, {
      id: description,
      defaultValue: description,
      values: {
        property: intl.formatMessage({
          id: property ? "property.".concat((0, _src2.camelize)(property)) : 'misc.empty'
        })
      }
    }))));
  };
  return InfoHelper;
}
var _default = exports["default"] = InfoHelperFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdEludGwiLCJfc3JjIiwiX3N0eWxlZENvbXBvbmVudHMiLCJfaWNvbnMiLCJfc3R5bGVkQ29tcG9uZW50czIiLCJfc3JjMiIsIl90ZW1wbGF0ZU9iamVjdCIsIlN0eWxlZEluZm9IZWxwZXIiLCJzdHlsZWQiLCJkaXYiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsMiIsInByb3BzIiwidGhlbWUiLCJsYWJlbENvbG9yIiwid2lkdGgiLCJjb25jYXQiLCJ0ZXh0Q29sb3JIbCIsIkluZm9IZWxwZXJGYWN0b3J5IiwiSW5mb0hlbHBlciIsIl9yZWYiLCJkZXNjcmlwdGlvbiIsInByb3BlcnR5IiwiY29udGFpbmVyQ2xhc3MiLCJpZCIsImludGwiLCJ1c2VJbnRsIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIkRvY3MiLCJoZWlnaHQiLCJUb29sdGlwIiwiZWZmZWN0IiwiRm9ybWF0dGVkTWVzc2FnZSIsImRlZmF1bHRWYWx1ZSIsInZhbHVlcyIsImZvcm1hdE1lc3NhZ2UiLCJjYW1lbGl6ZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NyYy9jb21tb24vaW5mby1oZWxwZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3VzZUludGx9IGZyb20gJ3JlYWN0LWludGwnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5pbXBvcnQge1Rvb2x0aXB9IGZyb20gJy4vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtEb2NzfSBmcm9tICcuL2ljb25zJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtjYW1lbGl6ZX0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5cbmludGVyZmFjZSBTdHlsZWRJbmZvSGVscGVyUHJvcHMge1xuICB3aWR0aD86IG51bWJlcjtcbn1cblxuY29uc3QgU3R5bGVkSW5mb0hlbHBlciA9IHN0eWxlZC5kaXY8U3R5bGVkSW5mb0hlbHBlclByb3BzPmBcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmxhYmVsQ29sb3J9O1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgLmluZm8taGVscGVyX19jb250ZW50IHtcbiAgICB3aWR0aDogJHtwcm9wcyA9PiAocHJvcHMud2lkdGggPyBgJHtwcm9wcy53aWR0aH1weGAgOiAnYXV0bycpfTtcbiAgICBtYXgtd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLndpZHRoID8gJ2F1dG8nIDogJzEwMHB4Jyl9O1xuICB9XG4gICY6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3JIbH07XG4gIH1cbmA7XG5cbmludGVyZmFjZSBJbmZvSGVscGVyUHJvcHMge1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBjb250YWluZXJDbGFzcz86IHN0cmluZztcbiAgd2lkdGg/OiBudW1iZXI7XG4gIHByb3BlcnR5Pzogc3RyaW5nO1xuICBpZD86IHN0cmluZztcbn1cblxuZnVuY3Rpb24gSW5mb0hlbHBlckZhY3RvcnkoKSB7XG4gIGNvbnN0IEluZm9IZWxwZXIgPSAoe2Rlc2NyaXB0aW9uLCBwcm9wZXJ0eSwgY29udGFpbmVyQ2xhc3MsIHdpZHRoLCBpZH06IEluZm9IZWxwZXJQcm9wcykgPT4ge1xuICAgIC8vIFRPRE86IG1vdmUgaW50bCBvdXRcbiAgICBjb25zdCBpbnRsID0gdXNlSW50bCgpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxTdHlsZWRJbmZvSGVscGVyXG4gICAgICAgIGNsYXNzTmFtZT17YGluZm8taGVscGVyICR7Y29udGFpbmVyQ2xhc3MgfHwgJyd9YH1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBkYXRhLXRpcFxuICAgICAgICBkYXRhLWZvcj17aWR9XG4gICAgICA+XG4gICAgICAgIDxEb2NzIGhlaWdodD1cIjE2cHhcIiAvPlxuICAgICAgICA8VG9vbHRpcCBpZD17aWR9IGVmZmVjdD1cInNvbGlkXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbmZvLWhlbHBlcl9fY29udGVudFwiPlxuICAgICAgICAgICAge2Rlc2NyaXB0aW9uICYmIChcbiAgICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2VcbiAgICAgICAgICAgICAgICBpZD17ZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICB2YWx1ZXM9e3tcbiAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiBpbnRsLmZvcm1hdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICBpZDogcHJvcGVydHkgPyBgcHJvcGVydHkuJHtjYW1lbGl6ZShwcm9wZXJ0eSl9YCA6ICdtaXNjLmVtcHR5J1xuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgPC9TdHlsZWRJbmZvSGVscGVyPlxuICAgICk7XG4gIH07XG4gIHJldHVybiBJbmZvSGVscGVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBJbmZvSGVscGVyRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENB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