"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddDataButtonFactory = AddDataButtonFactory;
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _src = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _icons = require("../../common/icons");
var _styledComponents2 = require("../../common/styled-components");
var _sourceDataCatalog = _interopRequireDefault(require("../common/source-data-catalog"));
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledDatasetTitle = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  line-height: ", ";\n  font-weight: 400;\n  letter-spacing: 1.25px;\n  color: ", ";\n  font-size: 11px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ", ";\n"])), function (props) {
  return props.theme.sidePanelTitleLineHeight;
}, function (props) {
  return props.theme.subtextColor;
}, function (props) {
  return props.$showDatasetList ? '16px' : '4px';
});
var StyledDatasetSection = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  border-bottom: 1px solid ", ";\n"])), function (props) {
  return props.theme.sidePanelBorderColor;
});
function AddDataButtonFactory() {
  var AddDataButton = _react["default"].memo(function (_ref) {
    var onClick = _ref.onClick,
      isInactive = _ref.isInactive;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents2.Button, {
      className: "add-data-button",
      onClick: onClick,
      inactive: !isInactive,
      width: "105px",
      secondary: true
    }, /*#__PURE__*/_react["default"].createElement(_icons.Add, {
      height: "12px"
    }), /*#__PURE__*/_react["default"].createElement(_src.FormattedMessage, {
      id: 'layerManager.addData'
    }));
  });
  AddDataButton.displayName = 'AddDataButton';
  return AddDataButton;
}
DatasetSectionFactory.deps = [_sourceDataCatalog["default"], AddDataButtonFactory];
function DatasetSectionFactory(SourceDataCatalog, AddDataButton) {
  var DatasetSection = function DatasetSection(props) {
    var datasets = props.datasets,
      showDatasetTable = props.showDatasetTable,
      updateTableColor = props.updateTableColor,
      showDeleteDataset = props.showDeleteDataset,
      removeDataset = props.removeDataset,
      showDatasetList = props.showDatasetList,
      showAddDataModal = props.showAddDataModal;
    var datasetCount = Object.keys(datasets).length;
    return /*#__PURE__*/_react["default"].createElement(StyledDatasetSection, null, /*#__PURE__*/_react["default"].createElement(StyledDatasetTitle, {
      $showDatasetList: showDatasetList
    }, /*#__PURE__*/_react["default"].createElement("span", null, "Datasets", datasetCount ? "(".concat(datasetCount, ")") : ''), /*#__PURE__*/_react["default"].createElement(AddDataButton, {
      onClick: showAddDataModal,
      isInactive: !datasetCount
    })), showDatasetList && /*#__PURE__*/_react["default"].createElement(SourceDataCatalog, {
      datasets: datasets,
      showDatasetTable: showDatasetTable,
      updateTableColor: updateTableColor,
      removeDataset: removeDataset,
      showDeleteDataset: showDeleteDataset
    }));
  };
  return DatasetSection;
}
var _default = exports["default"] = DatasetSectionFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,