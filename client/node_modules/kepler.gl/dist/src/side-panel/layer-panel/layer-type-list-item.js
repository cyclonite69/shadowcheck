"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LayerTypeListItemFactory = LayerTypeListItemFactory;
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _classnames = _interopRequireDefault(require("classnames"));
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _styledComponents = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/styled-components"));
var _src = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/localization/src");
var _src2 = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/utils/src");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var StyledListItem = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  &.list {\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n\n    .layer-type-selector__item__icon {\n      color: ", ";\n      background-size: ", "px\n        ", "px;\n      height: ", "px;\n      width: ", "px;\n      margin-right: 12px;\n    }\n\n    .layer-type-selector__item__label {\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .layer-type-selector__item__icon {\n    color: ", ";\n    display: flex;\n    background-image: url(", ");\n    background-size: ", "px\n      ", "px;\n    height: ", "px;\n    width: ", "px;\n  }\n\n  .layer-type-selector__item__label {\n    text-transform: capitalize;\n    font-size: 12px;\n    text-align: center;\n    color: ", ";\n    max-width: ", "px;\n  }\n"])), function (props) {
  return props.theme.activeColor;
}, function (props) {
  return props.theme.layerTypeIconSizeSM;
}, function (props) {
  return props.theme.layerTypeIconSizeSM;
}, function (props) {
  return props.theme.layerTypeIconSizeSM;
}, function (props) {
  return props.theme.layerTypeIconSizeSM;
}, function (props) {
  return props.theme.labelColor;
}, function (props) {
  return "".concat(props.cdnUrl, "/images/kepler.gl-layer-icon-bg.png");
}, function (props) {
  return props.theme.layerTypeIconSizeL;
}, function (props) {
  return props.theme.layerTypeIconSizeL;
}, function (props) {
  return props.theme.layerTypeIconSizeL;
}, function (props) {
  return props.theme.layerTypeIconSizeL;
}, function (props) {
  return props.theme.selectColor;
}, function (props) {
  return props.theme.layerTypeIconSizeL;
});
function LayerTypeListItemFactory() {
  var LayerTypeListItem = function LayerTypeListItem(_ref) {
    var value = _ref.value,
      isTile = _ref.isTile,
      theme = _ref.theme,
      className = _ref.className;
    return /*#__PURE__*/_react["default"].createElement(StyledListItem, {
      className: (0, _classnames["default"])('layer-type-selector__item__inner', className, {
        list: !isTile
      }),
      cdnUrl: (0, _src2.getApplicationConfig)().cdnUrl
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "layer-type-selector__item__icon"
    }, /*#__PURE__*/_react["default"].createElement(value.icon, {
      height: "".concat(isTile ? theme.layerTypeIconSizeL : theme.layerTypeIconSizeSM, "px")
    })), /*#__PURE__*/_react["default"].createElement("div", {
      className: "layer-type-selector__item__label"
    }, /*#__PURE__*/_react["default"].createElement(_src.FormattedMessage, {
      id: "layer.type.".concat(value.label.toLowerCase()),
      defaultMessage: value.label
    })));
  };
  return (0, _styledComponents.withTheme)(LayerTypeListItem);
}
var _default = exports["default"] = LayerTypeListItemFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,