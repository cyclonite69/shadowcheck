"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _icons = require("../common/icons");
var _styledComponents = require("../common/styled-components");
var _mapControlTooltip = _interopRequireDefault(require("./map-control-tooltip"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

Toggle3dButtonFactory.deps = [_mapControlTooltip["default"]];
function Toggle3dButtonFactory(MapControlTooltip) {
  var defaultActionIcons = {
    cube: function cube(props) {
      return /*#__PURE__*/_react["default"].createElement(_icons.Cube3d, (0, _extends2["default"])({}, props, {
        height: "18px"
      }));
    }
  };
  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */
  var Toggle3dButton = function Toggle3dButton(_ref) {
    var dragRotate = _ref.dragRotate,
      onTogglePerspective = _ref.onTogglePerspective,
      _ref$actionIcons = _ref.actionIcons,
      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,
      mapControls = _ref.mapControls;
    var onClick = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      onTogglePerspective();
    }, [onTogglePerspective]);
    var isVisible = (0, _react.useMemo)(function () {
      return ((mapControls === null || mapControls === void 0 ? void 0 : mapControls.toggle3d) || {}).show;
    }, [mapControls]);
    return isVisible ? /*#__PURE__*/_react["default"].createElement(MapControlTooltip, {
      id: "action-3d",
      message: dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.MapControlButton, {
      onClick: onClick,
      active: dragRotate,
      className: (0, _classnames["default"])('map-control-button', 'toggle-3d', {
        map3d: dragRotate
      })
    }, /*#__PURE__*/_react["default"].createElement(actionIcons.cube, {
      height: "22px"
    }))) : null;
  };
  Toggle3dButton.displayName = 'Toggle3dButton';
  return _react["default"].memo(Toggle3dButton);
}
var _default = exports["default"] = Toggle3dButtonFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfY2xhc3NuYW1lcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfaWNvbnMiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9tYXBDb250cm9sVG9vbHRpcCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZiIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIlRvZ2dsZTNkQnV0dG9uRmFjdG9yeSIsImRlcHMiLCJNYXBDb250cm9sVG9vbHRpcEZhY3RvcnkiLCJNYXBDb250cm9sVG9vbHRpcCIsImRlZmF1bHRBY3Rpb25JY29ucyIsImN1YmUiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJDdWJlM2QiLCJfZXh0ZW5kczIiLCJoZWlnaHQiLCJUb2dnbGUzZEJ1dHRvbiIsIl9yZWYiLCJkcmFnUm90YXRlIiwib25Ub2dnbGVQZXJzcGVjdGl2ZSIsIl9yZWYkYWN0aW9uSWNvbnMiLCJhY3Rpb25JY29ucyIsIm1hcENvbnRyb2xzIiwib25DbGljayIsInVzZUNhbGxiYWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImlzVmlzaWJsZSIsInVzZU1lbW8iLCJ0b2dnbGUzZCIsInNob3ciLCJpZCIsIm1lc3NhZ2UiLCJNYXBDb250cm9sQnV0dG9uIiwiYWN0aXZlIiwiY2xhc3NOYW1lIiwiY2xhc3NuYW1lcyIsIm1hcDNkIiwiZGlzcGxheU5hbWUiLCJSZWFjdCIsIm1lbW8iLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9zcmMvbWFwL3RvZ2dsZS0zZC1idXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudFR5cGUsIHVzZUNhbGxiYWNrLCB1c2VNZW1vfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7Q3ViZTNkfSBmcm9tICcuLi9jb21tb24vaWNvbnMnO1xuaW1wb3J0IHtNYXBDb250cm9sQnV0dG9ufSBmcm9tICcuLi9jb21tb24vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IE1hcENvbnRyb2xUb29sdGlwRmFjdG9yeSBmcm9tICcuL21hcC1jb250cm9sLXRvb2x0aXAnO1xuaW1wb3J0IHtNYXBDb250cm9sc30gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5cblRvZ2dsZTNkQnV0dG9uRmFjdG9yeS5kZXBzID0gW01hcENvbnRyb2xUb29sdGlwRmFjdG9yeV07XG5cbmludGVyZmFjZSBUb2dnbGUzZEJ1dHRvbkljb25zIHtcbiAgY3ViZTogQ29tcG9uZW50VHlwZTxhbnk+O1xufVxuXG5leHBvcnQgdHlwZSBUb2dnbGUzZEJ1dHRvblByb3BzID0ge1xuICBkcmFnUm90YXRlOiBib29sZWFuO1xuICBvblRvZ2dsZVBlcnNwZWN0aXZlOiAoKSA9PiB2b2lkO1xuICBhY3Rpb25JY29uczogVG9nZ2xlM2RCdXR0b25JY29ucztcbiAgbWFwQ29udHJvbHM6IE1hcENvbnRyb2xzO1xufTtcblxuZnVuY3Rpb24gVG9nZ2xlM2RCdXR0b25GYWN0b3J5KE1hcENvbnRyb2xUb29sdGlwKSB7XG4gIGNvbnN0IGRlZmF1bHRBY3Rpb25JY29ucyA9IHtcbiAgICBjdWJlOiBwcm9wcyA9PiA8Q3ViZTNkIHsuLi5wcm9wc30gaGVpZ2h0PVwiMThweFwiIC8+XG4gIH07XG4gIC8qKiBAdHlwZSB7aW1wb3J0KCcuL3RvZ2dsZS0zZC1idXR0b24nKS5Ub2dnbGUzZEJ1dHRvbkNvbXBvbmVudH0gKi9cbiAgY29uc3QgVG9nZ2xlM2RCdXR0b246IFJlYWN0LkZDPFRvZ2dsZTNkQnV0dG9uUHJvcHM+ID0gKHtcbiAgICBkcmFnUm90YXRlLFxuICAgIG9uVG9nZ2xlUGVyc3BlY3RpdmUsXG4gICAgYWN0aW9uSWNvbnMgPSBkZWZhdWx0QWN0aW9uSWNvbnMsXG4gICAgbWFwQ29udHJvbHNcbiAgfSkgPT4ge1xuICAgIGNvbnN0IG9uQ2xpY2sgPSB1c2VDYWxsYmFjayhcbiAgICAgIGV2ZW50ID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgb25Ub2dnbGVQZXJzcGVjdGl2ZSgpO1xuICAgICAgfSxcbiAgICAgIFtvblRvZ2dsZVBlcnNwZWN0aXZlXVxuICAgICk7XG5cbiAgICBjb25zdCBpc1Zpc2libGUgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgIHJldHVybiAobWFwQ29udHJvbHM/LnRvZ2dsZTNkIHx8IHt9KS5zaG93O1xuICAgIH0sIFttYXBDb250cm9sc10pO1xuXG4gICAgcmV0dXJuIGlzVmlzaWJsZSA/IChcbiAgICAgIDxNYXBDb250cm9sVG9vbHRpcFxuICAgICAgICBpZD1cImFjdGlvbi0zZFwiXG4gICAgICAgIG1lc3NhZ2U9e2RyYWdSb3RhdGUgPyAndG9vbHRpcC5kaXNhYmxlM0RNYXAnIDogJ3Rvb2x0aXAuM0RNYXAnfVxuICAgICAgPlxuICAgICAgICA8TWFwQ29udHJvbEJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgYWN0aXZlPXtkcmFnUm90YXRlfVxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygnbWFwLWNvbnRyb2wtYnV0dG9uJywgJ3RvZ2dsZS0zZCcsIHttYXAzZDogZHJhZ1JvdGF0ZX0pfVxuICAgICAgICA+XG4gICAgICAgICAgPGFjdGlvbkljb25zLmN1YmUgaGVpZ2h0PVwiMjJweFwiIC8+XG4gICAgICAgIDwvTWFwQ29udHJvbEJ1dHRvbj5cbiAgICAgIDwvTWFwQ29udHJvbFRvb2x0aXA+XG4gICAgKSA6IG51bGw7XG4gIH07XG5cbiAgVG9nZ2xlM2RCdXR0b24uZGlzcGxheU5hbWUgPSAnVG9nZ2xlM2RCdXR0b24nO1xuICByZXR1cm4gUmVhY3QubWVtbyhUb2dnbGUzZEJ1dHRvbik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRvZ2dsZTNkQnV0dG9uRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsV0FBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksaUJBQUEsR0FBQUosT0FBQTtBQUNBLElBQUFLLGtCQUFBLEdBQUFILHNCQUFBLENBQUFGLE9BQUE7QUFBNkQsU0FBQU0seUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFSLHdCQUFBUSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsZ0JBQUFLLE9BQUEsQ0FBQUwsQ0FBQSwwQkFBQUEsQ0FBQSxzQkFBQUEsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFB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