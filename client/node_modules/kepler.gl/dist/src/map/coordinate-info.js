"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/node_modules/react"));
var _src = require("/Users/ihordykhta/Desktop/unfolded/kepler.gl/src/utils/src");
var _icons = require("../common/icons");
var _layerHoverInfo = require("./layer-hover-info");
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

// 6th decimal is worth up to 0.11 m
// https://gis.stackexchange.com/questions/8650/measuring-accuracy-of-latitude-and-longitude
var DECIMAL = 6;
var DECIMAL_Z = 1;
var CoordinateInfoFactory = function CoordinateInfoFactory() {
  var CoordinateInfo = function CoordinateInfo(_ref) {
    var coordinate = _ref.coordinate,
      zoom = _ref.zoom;
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "coordingate-hover-info"
    }, /*#__PURE__*/_react["default"].createElement(_layerHoverInfo.StyledLayerName, {
      className: "map-popover__layer-name"
    }, /*#__PURE__*/_react["default"].createElement(_icons.CursorClick, {
      height: "12px"
    }), "Coordinate"), /*#__PURE__*/_react["default"].createElement("table", null, /*#__PURE__*/_react["default"].createElement("tbody", null, /*#__PURE__*/_react["default"].createElement("tr", {
      className: "row"
    }, /*#__PURE__*/_react["default"].createElement("td", {
      className: "row__value"
    }, (0, _src.preciseRound)(coordinate[1], DECIMAL), ","), /*#__PURE__*/_react["default"].createElement("td", {
      className: "row__value"
    }, (0, _src.preciseRound)(coordinate[0], DECIMAL), ","), /*#__PURE__*/_react["default"].createElement("td", {
      className: "row__value"
    }, (0, _src.preciseRound)(zoom, DECIMAL_Z), "z")))));
  };
  return CoordinateInfo;
};
var _default = exports["default"] = CoordinateInfoFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zcmMiLCJfaWNvbnMiLCJfbGF5ZXJIb3ZlckluZm8iLCJERUNJTUFMIiwiREVDSU1BTF9aIiwiQ29vcmRpbmF0ZUluZm9GYWN0b3J5IiwiQ29vcmRpbmF0ZUluZm8iLCJfcmVmIiwiY29vcmRpbmF0ZSIsInpvb20iLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiU3R5bGVkTGF5ZXJOYW1lIiwiQ3Vyc29yQ2xpY2siLCJoZWlnaHQiLCJwcmVjaXNlUm91bmQiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9zcmMvbWFwL2Nvb3JkaW5hdGUtaW5mby50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7cHJlY2lzZVJvdW5kfSBmcm9tICdAa2VwbGVyLmdsL3V0aWxzJztcbmltcG9ydCB7Q3Vyc29yQ2xpY2t9IGZyb20gJy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQge1N0eWxlZExheWVyTmFtZX0gZnJvbSAnLi9sYXllci1ob3Zlci1pbmZvJztcblxuLy8gNnRoIGRlY2ltYWwgaXMgd29ydGggdXAgdG8gMC4xMSBtXG4vLyBodHRwczovL2dpcy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvODY1MC9tZWFzdXJpbmctYWNjdXJhY3ktb2YtbGF0aXR1ZGUtYW5kLWxvbmdpdHVkZVxuY29uc3QgREVDSU1BTCA9IDY7XG5jb25zdCBERUNJTUFMX1ogPSAxO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvb3JkaW5hdGVJbmZvUHJvcHMge1xuICBjb29yZGluYXRlOiBudW1iZXJbXTtcbiAgem9vbTogbnVtYmVyO1xufVxuXG5jb25zdCBDb29yZGluYXRlSW5mb0ZhY3RvcnkgPSAoKSA9PiB7XG4gIGNvbnN0IENvb3JkaW5hdGVJbmZvOiBSZWFjdC5GQzxDb29yZGluYXRlSW5mb1Byb3BzPiA9ICh7Y29vcmRpbmF0ZSwgem9vbX0pID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvb3JkaW5nYXRlLWhvdmVyLWluZm9cIj5cbiAgICAgIDxTdHlsZWRMYXllck5hbWUgY2xhc3NOYW1lPVwibWFwLXBvcG92ZXJfX2xheWVyLW5hbWVcIj5cbiAgICAgICAgPEN1cnNvckNsaWNrIGhlaWdodD1cIjEycHhcIiAvPlxuICAgICAgICBDb29yZGluYXRlXG4gICAgICA8L1N0eWxlZExheWVyTmFtZT5cbiAgICAgIDx0YWJsZT5cbiAgICAgICAgPHRib2R5PlxuICAgICAgICAgIDx0ciBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJyb3dfX3ZhbHVlXCI+e3ByZWNpc2VSb3VuZChjb29yZGluYXRlWzFdLCBERUNJTUFMKX0sPC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJyb3dfX3ZhbHVlXCI+e3ByZWNpc2VSb3VuZChjb29yZGluYXRlWzBdLCBERUNJTUFMKX0sPC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJyb3dfX3ZhbHVlXCI+e3ByZWNpc2VSb3VuZCh6b29tLCBERUNJTUFMX1opfXo8L3RkPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGJvZHk+XG4gICAgICA8L3RhYmxlPlxuICAgIDwvZGl2PlxuICApO1xuXG4gIHJldHVybiBDb29yZGluYXRlSW5mbztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvb3JkaW5hdGVJbmZvRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLElBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGVBQUEsR0FBQUgsT0FBQTtBQU5BO0FBQ0E7O0FBT0E7QUFDQTtBQUNBLElBQU1JLE9BQU8sR0FBRyxDQUFDO0FBQ2pCLElBQU1DLFNBQVMsR0FBRyxDQUFDO0FBT25CLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBcUJBLENBQUEsRUFBUztFQUNsQyxJQUFNQyxjQUE2QyxHQUFHLFNBQWhEQSxjQUE2Q0EsQ0FBQUMsSUFBQTtJQUFBLElBQUtDLFVBQVUsR0FBQUQsSUFBQSxDQUFWQyxVQUFVO01BQUVDLElBQUksR0FBQUYsSUFBQSxDQUFKRSxJQUFJO0lBQUEsb0JBQ3RFWixNQUFBLFlBQUFhLGFBQUE7TUFBS0MsU0FBUyxFQUFDO0lBQXdCLGdCQUNyQ2QsTUFBQSxZQUFBYSxhQUFBLENBQUNSLGVBQUEsQ0FBQVUsZUFBZTtNQUFDRCxTQUFTLEVBQUM7SUFBeUIsZ0JBQ2xEZCxNQUFBLFlBQUFhLGFBQUEsQ0FBQ1QsTUFBQSxDQUFBWSxXQUFXO01BQUNDLE1BQU0sRUFBQztJQUFNLENBQUUsQ0FBQyxjQUVkLENBQUMsZUFDbEJqQixNQUFBLFlBQUFhLGFBQUEsNkJBQ0ViLE1BQUEsWUFBQWEsYUFBQSw2QkFDRWIsTUFBQSxZQUFBYSxhQUFBO01BQUlDLFNBQVMsRUFBQztJQUFLLGdCQUNqQmQsTUFBQSxZQUFBYSxhQUFBO01BQUlDLFNBQVMsRUFBQztJQUFZLEdBQUUsSUFBQUksaUJBQVksRUFBQ1AsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFTCxPQUFPLENBQUMsRUFBQyxHQUFLLENBQUMsZUFDdkVOLE1BQUEsWUFBQWEsYUFBQTtNQUFJQyxTQUFTLEVBQUM7SUFBWSxHQUFFLElBQUFJLGlCQUFZLEVBQUNQLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRUwsT0FBTyxDQUFDLEVBQUMsR0FBSyxDQUFDLGVBQ3ZFTixNQUFBLFlBQUFhLGFBQUE7TUFBSUMsU0FBUyxFQUFDO0lBQVksR0FBRSxJQUFBSSxpQkFBWSxFQUFDTixJQUFJLEVBQUVMLFNBQVMsQ0FBQyxFQUFDLEdBQUssQ0FDN0QsQ0FDQyxDQUNGLENBQ0osQ0FBQztFQUFBLENBQ1A7RUFFRCxPQUFPRSxjQUFjO0FBQ3ZCLENBQUM7QUFBQyxJQUFBVSxRQUFBLEdBQUFDLE9BQUEsY0FFYVoscUJBQXFCIiwiaWdub3JlTGlzdCI6W119