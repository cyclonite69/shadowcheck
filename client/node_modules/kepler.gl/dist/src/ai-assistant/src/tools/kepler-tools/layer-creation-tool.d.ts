import KeplerTable, { Datasets } from '@kepler.gl/table';
import { z } from 'zod';
export declare const addLayer: import("@openassistant/utils").ExtendedTool<z.ZodObject<{
    datasetName: z.ZodString;
    latitudeColumn: z.ZodOptional<z.ZodString>;
    longitudeColumn: z.ZodOptional<z.ZodString>;
    layerType: z.ZodEnum<[
        'point',
        'arc',
        'line',
        'grid',
        'hexagon',
        'geojson',
        'cluster',
        'heatmap',
        'h3',
        'trip',
        's2'
    ]>;
    colorBy: z.ZodOptional<z.ZodString>;
    colorType: z.ZodOptional<z.ZodEnum<['breaks', 'unique']>>;
    colorMap: z.ZodOptional<z.ZodArray<z.ZodObject<{
        value: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodNull]>;
        color: z.ZodString;
    }>>>;
}, z.UnknownKeysParam, z.ZodTypeAny, {
    datasetName: string;
    layerType: "grid" | "h3" | "line" | "geojson" | "point" | "arc" | "hexagon" | "cluster" | "heatmap" | "trip" | "s2";
    latitudeColumn?: string | undefined;
    longitudeColumn?: string | undefined;
    colorBy?: string | undefined;
    colorType?: "breaks" | "unique" | undefined;
    colorMap?: {
        color: string;
        value: string | number | null;
    }[] | undefined;
}, {
    datasetName: string;
    layerType: "grid" | "h3" | "line" | "geojson" | "point" | "arc" | "hexagon" | "cluster" | "heatmap" | "trip" | "s2";
    latitudeColumn?: string | undefined;
    longitudeColumn?: string | undefined;
    colorBy?: string | undefined;
    colorType?: "breaks" | "unique" | undefined;
    colorMap?: {
        color: string;
        value: string | number | null;
    }[] | undefined;
}>, {
    success: boolean;
    layer?: string | undefined;
    details?: string | undefined;
    error?: string | undefined;
    instruction?: string | undefined;
}, {
    layer: object;
    datasetId: string;
} | undefined, AddLayerFunctionContext>;
export declare type AddLayerTool = typeof addLayer;
declare type AddLayerFunctionContext = {
    getDatasets: () => Datasets;
};
export declare function guessDefaultLayer(dataset: KeplerTable, layerType: string): import("@kepler.gl/layers/dist/base-layer").default | import("@kepler.gl/layers/dist/hexagon-layer/hexagon-layer").default | null;
export declare function AddLayerToolComponent({ layer, datasetId }: {
    layer: any;
    datasetId: any;
}): null;
export {};
