{"version":3,"file":"gif-builder.js","names":["_assert","require","_gifshot","_interopRequireDefault","GIF_BUILDER_OPTIONS","source","width","height","crossOrigin","progressCallback","captureProgress","completeCallback","numWorkers","sampleInterval","interval","offset","numFrames","frameDuration","filter","waterMark","waterMarkHeight","waterMarkWidth","waterMarkXCoordinate","waterMarkYCoordinate","text","showFrameText","fontWeight","fontSize","minFontSize","resizeFont","fontFamily","fontColor","textAlign","textBaseline","textXCoordinate","textYCoordinate","webcamVideoElement","keepCameraOn","cameraStream","saveRenderingContexts","savedRenderingContexts","GIFBuilder","properties","id","name","extensions","mimeTypes","builder","options","constructor","files","gifshot","initialize","add","file","push","build","_cleanOptions","images","video","assert","length","Error","_createGIF","Promise","resolve","reject","createGIF","result","error","errorMsg","image","gifWidth","gifHeight","console","warn","exports","default"],"sources":["../../src/gif-builder.ts"],"sourcesContent":["// A GIFBuilder based on the gifshot module\n// @ts-nocheck\nimport {assert} from './lib/utils/assert';\nimport gifshot from './lib/gifshot/gifshot'; // TODO - load dynamically to avoid bloating\n\n// These are gifshot module options\nconst GIF_BUILDER_OPTIONS = {\n  source: 'images',\n  width: 200, // Desired width of the image\n  height: 200, // Desired height of the image\n\n  crossOrigin: 'Anonymous', // Options are 'Anonymous', 'use-credentials', or a falsy value to not set a CORS attribute.\n\n  // CALLBACKS\n  progressCallback: (captureProgress) => {}, // Callback that provides the current progress of the current image\n  completeCallback: () => {}, // Callback function that is called when the current image is completed\n\n  // QUALITY SETTINGS\n  numWorkers: 2, // how many web workers to use to process the animated GIF frames. Default is 2.\n  sampleInterval: 10, // pixels to skip when creating the palette. Default is 10. Less is better, but slower.\n  interval: 0.1, // The amount of time (in seconds) to wait between each frame capture\n  offset: null, // The amount of time (in seconds) to start capturing the GIF (only for HTML5 videos)\n  numFrames: 10, // The number of frames to use to create the animated GIF. Note: Each frame is captured every 100 milliseconds of a video and every ms for existing images\n  frameDuration: 1, // The amount of time (10 = 1s) to stay on each frame\n\n  // CSS FILTER OPTIONS\n  filter: '', // CSS filter that will be applied to the image (eg. blur(5px))\n\n  // WATERMARK OPTIONS\n  waterMark: null, // If an image is given here, it will be stamped on top of the GIF frames\n  waterMarkHeight: null, // Height of the waterMark\n  waterMarkWidth: null, // Height of the waterMark\n  waterMarkXCoordinate: 1, // The X (horizontal) Coordinate of the watermark image\n  waterMarkYCoordinate: 1, // The Y (vertical) Coordinate of the watermark image\n\n  // TEXT OPTIONS\n  text: '', // The text that covers the animated GIF\n  showFrameText: true, // If frame-specific text is supplied with the image array, you can force to not be displayed\n  fontWeight: 'normal', // The font weight of the text that covers the animated GIF\n  fontSize: '16px', // The font size of the text that covers the animated GIF\n  minFontSize: '10px', // The minimum font size of the text that covers the animated GIF\n  resizeFont: false, // Whether or not the animated GIF text will be resized to fit within the GIF container\n  fontFamily: 'sans-serif', // The font family of the text that covers the animated GIF\n  fontColor: '#ffffff', // The font color of the text that covers the animated GIF\n  textAlign: 'center', // The horizontal text alignment of the text that covers the animated GIF\n  textBaseline: 'bottom', // The vertical text alignment of the text that covers the animated GIF\n  textXCoordinate: null, // The X (horizontal) Coordinate of the text that covers the animated GIF\n  textYCoordinate: null, // The Y (vertical) Coordinate of the text that covers the animated GIF\n\n  // ADVANCED OPTIONS\n\n  // WEBCAM CAPTURE OPTIONS\n  webcamVideoElement: null, // You can pass an existing video element to use for the webcam GIF creation process,\n  keepCameraOn: false, // Whether or not you would like the user's camera to stay on after the GIF is created\n  cameraStream: null, // Expects a cameraStream Media object\n\n  // CANVAS OPTIMIZATION OPTIONS\n  saveRenderingContexts: false, // Whether or not you would like to save all of the canvas image binary data\n  savedRenderingContexts: [] // Array of canvas image data\n};\n\nexport default class GIFBuilder {\n  static get properties() {\n    return {\n      id: 'gif',\n      name: 'GIF',\n      extensions: ['gif'],\n      mimeTypes: ['image/gif'],\n      builder: GIFBuilder,\n      options: GIF_BUILDER_OPTIONS\n    };\n  }\n\n  constructor(options) {\n    this.options = {...options};\n    this.source = options.source;\n    delete options.source;\n\n    // Allow files to be added\n    this.files = [];\n\n    // Expose the gifshot module so that the full gifshot API is available to apps (Experimental)\n    this.gifshot = gifshot;\n  }\n\n  async initialize(options): Promise<void> {\n    // Expose the gifshot module so that the full gifshot API is available to apps (Experimental)\n    // this.gifshot = await loadGifshotModule(options);\n  }\n\n  async add(file): void {\n    await this.initialize();\n    this.files.push(file);\n  }\n\n  async build(): Promise<string> {\n    await this.initialize();\n    this._cleanOptions(this.options);\n\n    switch (this.source) {\n      case 'images':\n        this.options.images = this.files;\n        break;\n      case 'video':\n        this.options.video = this.files;\n        break;\n      case 'webcam':\n        assert(this.files.length === 0);\n        break;\n      default:\n        throw new Error('GIFBuilder: invalid source');\n    }\n\n    return await this._createGIF();\n  }\n\n  // PRIVATE\n\n  async _createGIF(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.gifshot.createGIF(this.options, (result) => {\n        // callback object properties\n        // --------------------------\n        // image - Base 64 image\n        // cameraStream - The webRTC MediaStream object\n        // error - Boolean that determines if an error occurred\n        // errorCode - Helpful error label\n        // errorMsg - Helpful error message\n        // savedRenderingContexts - An array of canvas image data (will only be set if the saveRenderingContexts option was used)\n\n        if (result.error) {\n          reject(result.errorMsg);\n          return;\n        }\n\n        // image - Base 64 image\n        resolve(result.image);\n\n        // var image = obj.image,\n        // animatedImage = document.createElement('img');\n        // animatedImage.src = image;\n        // document.body.appendChild(animatedImage);\n      });\n    });\n  }\n\n  // Remove some gifshot options\n  _cleanOptions(options): void {\n    if (options.video || options.images || options.gifWidth || options.gifHeight) {\n      console.warn('GIFBuilder: ignoring options'); // eslint-disable-line\n    }\n\n    // We control these through options.source instead\n    delete options.video;\n    delete options.images;\n\n    // Use width/height props (to standardize across builders)\n    options.gifWidth = options.width;\n    options.gifHeight = options.height;\n    delete options.width;\n    delete options.height;\n  }\n}\n"],"mappings":"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"}