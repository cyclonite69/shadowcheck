"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _tar = _interopRequireDefault(require("./lib/tar/tar"));
const TAR_BUILDER_OPTIONS = {
  recordsPerBlock: 20
};
class TARBuilder {
  static get properties() {
    return {
      id: 'tar',
      name: 'TAR',
      extensions: ['tar'],
      mimeTypes: ['application/x-tar'],
      builder: TARBuilder,
      options: TAR_BUILDER_OPTIONS
    };
  }
  constructor(options) {
    (0, _defineProperty2.default)(this, "options", void 0);
    (0, _defineProperty2.default)(this, "tape", void 0);
    (0, _defineProperty2.default)(this, "count", 0);
    this.options = {
      ...TAR_BUILDER_OPTIONS,
      ...options
    };
    this.tape = new _tar.default(this.options.recordsPerBlock);
  }
  addFile(filename, buffer) {
    this.tape.append(filename, new Uint8Array(buffer));
    this.count++;
  }
  async build() {
    return new Response(this.tape.save()).arrayBuffer();
  }
}
exports.default = TARBuilder;
//# sourceMappingURL=tar-builder.js.map