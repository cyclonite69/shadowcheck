"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _logo = _interopRequireDefault(require("../common/logo"));
var _splitMapButton = _interopRequireDefault(require("./split-map-button"));
var _toggle3dButton = _interopRequireDefault(require("./toggle-3d-button"));
var _layerSelectorPanel = _interopRequireDefault(require("./layer-selector-panel"));
var _mapLegendPanel = _interopRequireDefault(require("./map-legend-panel"));
var _mapDrawPanel = _interopRequireDefault(require("./map-draw-panel"));
var _localePanel = _interopRequireDefault(require("./locale-panel"));
var _excluded = ["actionComponents", "isSplit", "top", "mapIndex", "logoComponent"];
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
// factories
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var StyledMapControl = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  right: 0;\n  padding: ", "px;\n  z-index: 10;\n  margin-top: ", "px;\n  position: absolute;\n  display: grid;\n  row-gap: 8px;\n  justify-items: end;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n"])), function (props) {
  return props.theme.mapControl.padding;
}, function (props) {
  return props.$top || 0;
});
var LegendLogo = /*#__PURE__*/_react["default"].createElement(_logo["default"], {
  version: false,
  appName: "kepler.gl"
});
MapControlFactory.deps = [_splitMapButton["default"], _toggle3dButton["default"], _layerSelectorPanel["default"], _mapLegendPanel["default"], _mapDrawPanel["default"], _localePanel["default"]];
function MapControlFactory(SplitMapButton, Toggle3dButton, LayerSelectorPanel, MapLegendPanel, MapDrawPanel, LocalePanel) {
  var DEFAULT_ACTIONS = [SplitMapButton, LayerSelectorPanel, Toggle3dButton, MapDrawPanel, LocalePanel, MapLegendPanel];
  var MapControl = function MapControl(_ref) {
    var _ref$actionComponents = _ref.actionComponents,
      actionComponents = _ref$actionComponents === void 0 ? DEFAULT_ACTIONS : _ref$actionComponents,
      _ref$isSplit = _ref.isSplit,
      isSplit = _ref$isSplit === void 0 ? false : _ref$isSplit,
      _ref$top = _ref.top,
      top = _ref$top === void 0 ? 0 : _ref$top,
      _ref$mapIndex = _ref.mapIndex,
      mapIndex = _ref$mapIndex === void 0 ? 0 : _ref$mapIndex,
      _ref$logoComponent = _ref.logoComponent,
      logoComponent = _ref$logoComponent === void 0 ? LegendLogo : _ref$logoComponent,
      restProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
    var actionComponentProps = _objectSpread({
      isSplit: isSplit,
      mapIndex: mapIndex,
      logoComponent: logoComponent
    }, restProps);
    return /*#__PURE__*/_react["default"].createElement(StyledMapControl, {
      className: "map-control",
      $top: top
    }, actionComponents.map(function (ActionComponent, index) {
      return /*#__PURE__*/_react["default"].createElement(ActionComponent, (0, _extends2["default"])({
        key: index,
        className: "map-control-action"
      }, actionComponentProps));
    }));
  };
  MapControl.defaultActionComponents = DEFAULT_ACTIONS;
  MapControl.displayName = 'MapControl';
  return MapControl;
}
var _default = exports["default"] = MapControlFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,